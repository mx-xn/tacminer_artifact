[
    {
        "lemma_name": "occ_inv",
        "proof": [
            {
                "tactic_sig": "Lemma occ_inv : forall ( z z' : Z ) ( t1 t2 : Z_btree ) , occ z' ( Z_bnode z t1 t2 ) -> z = z' \\/ occ z' t1 \\/ occ z' t2 .",
                "tactic_sig_no_out_arg": "Lemma occ_inv : forall ( z z' : Z ) ( t1 t2 : Z_btree ) , occ z' ( Z_bnode z t1 t2 ) -> z = z' \\/ occ z' t1 \\/ occ z' t2 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (z z' : Z) (t1 t2 : Z_btree) (_ : occ z' (Z_bnode z t1 t2)),\nor (eq z z') (or (occ z' t1) (occ z' t2))"
                ]
            },
            {
                "tactic_sig": "inversion 1 using OCC_INV .",
                "tactic_sig_no_out_arg": "inversion 1 using OCC_INV .",
                "tactic_args": [
                    "c1_goal : forall (z z' : Z) (t1 t2 : Z_btree) (_ : occ z' (Z_bnode z t1 t2)),\nor (eq z z') (or (occ z' t1) (occ z' t2))"
                ],
                "tactic_res": [
                    "c2_goal : or (eq z z) (or (occ z t1) (occ z t2))",
                    "c2_H : occ z' (Z_bnode z t1 t2)",
                    "c2_t2 : Z_btree",
                    "c2_t1 : Z_btree",
                    "c2_z' : Z",
                    "c2_z : Z",
                    "c3_goal : forall _ : occ z' t1, or (eq z z') (or (occ z' t1) (occ z' t2))",
                    "c3_H : occ z' (Z_bnode z t1 t2)",
                    "c3_t2 : Z_btree",
                    "c3_t1 : Z_btree",
                    "c3_z' : Z",
                    "c3_z : Z",
                    "c4_goal : forall _ : occ z' t2, or (eq z z') (or (occ z' t1) (occ z' t2))",
                    "c4_H : occ z' (Z_bnode z t1 t2)",
                    "c4_t2 : Z_btree",
                    "c4_t1 : Z_btree",
                    "c4_z' : Z",
                    "c4_z : Z"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c2_goal : or (eq z z) (or (occ z t1) (occ z t2))",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_z : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : forall _ : occ z' t1, or (eq z z') (or (occ z' t1) (occ z' t2))",
                    "c3_t1 : Z_btree",
                    "c3_t2 : Z_btree",
                    "c3_z : Z",
                    "c3_z' : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c4_goal : forall _ : occ z' t2, or (eq z z') (or (occ z' t1) (occ z' t2))",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c4_z : Z",
                    "c4_z' : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "not_occ_Leaf",
        "proof": [
            {
                "tactic_sig": "Lemma not_occ_Leaf : forall z : Z , ~ occ z Z_leaf .",
                "tactic_sig_no_out_arg": "Lemma not_occ_Leaf : forall z : Z , ~ occ z Z_leaf .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall z : Z, not (occ z Z_leaf)"
                ]
            },
            {
                "tactic_sig": "unfold _i .",
                "tactic_sig_no_out_arg": "unfold _i .",
                "tactic_args": [
                    "c1_goal : forall z : Z, not (occ z Z_leaf)",
                    "_global_not : forall _ : Prop, Prop"
                ],
                "tactic_res": [
                    "c2_goal : forall (z : Z) (_ : occ z Z_leaf), False"
                ]
            },
            {
                "tactic_sig": "inversion_clear 1 .",
                "tactic_sig_no_out_arg": "inversion_clear 1 .",
                "tactic_args": [
                    "c2_goal : forall (z : Z) (_ : occ z Z_leaf), False"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "naive_occ_dec",
        "proof": [
            {
                "tactic_sig": "Definition naive_occ_dec : forall ( n : Z ) ( t : Z_btree ) , { occ n t } + { ~ occ n t } .",
                "tactic_sig_no_out_arg": "Definition naive_occ_dec : forall ( n : Z ) ( t : Z_btree ) , { occ n t } + { ~ occ n t } .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n : Z) (t : Z_btree), sumbool (occ n t) (not (occ n t))"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros n t .",
                "tactic_args": [
                    "c1_goal : forall (n : Z) (t : Z_btree), sumbool (occ n t) (not (occ n t))"
                ],
                "tactic_res": [
                    "c2_goal : sumbool (occ n t) (not (occ n t))",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ]
            },
            {
                "tactic_sig": "induction _i as [ | z t1 IH1 t2 IH2 ] .",
                "tactic_sig_no_out_arg": "induction _i as [ | z t1 IH1 t2 IH2 ] .",
                "tactic_args": [
                    "c2_goal : sumbool (occ n t) (not (occ n t))",
                    "c2_t : Z_btree"
                ],
                "tactic_res": [
                    "c3_goal : sumbool (occ n Z_leaf) (not (occ n Z_leaf))",
                    "c4_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c4_IH2 : sumbool (occ n t2) (not (occ n t2))",
                    "c4_IH1 : sumbool (occ n t1) (not (occ n t1))",
                    "c4_t2 : Z_btree",
                    "c4_t1 : Z_btree",
                    "c4_z : Z"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c3_goal : sumbool (occ n Z_leaf) (not (occ n Z_leaf))"
                ],
                "tactic_res": [
                    "c5_goal : not (occ n Z_leaf)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : not (occ n Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case ( Z.eq_dec _i _i ) .",
                "tactic_sig_no_out_arg": "case ( Z.eq_dec _i _i ) .",
                "tactic_args": [
                    "c4_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c2_n : Z",
                    "c4_z : Z"
                ],
                "tactic_res": [
                    "c6_goal : forall _ : eq n z,\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c7_goal : forall _ : not (eq n z),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c6_goal : forall _ : eq n z,\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c8_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c8_e : eq n z"
                ]
            },
            {
                "tactic_sig": "subst _i .",
                "tactic_sig_no_out_arg": "subst _i .",
                "tactic_args": [
                    "c8_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c2_n : Z",
                    "c8_e : eq n z"
                ],
                "tactic_res": [
                    "c9_goal : sumbool (occ z (Z_bnode z t1 t2)) (not (occ z (Z_bnode z t1 t2)))",
                    "c9_IH1 : sumbool (occ z t1) (not (occ z t1))",
                    "c9_IH2 : sumbool (occ z t2) (not (occ z t2))"
                ]
            },
            {
                "tactic_sig": "left .",
                "tactic_sig_no_out_arg": "left .",
                "tactic_args": [
                    "c9_goal : sumbool (occ z (Z_bnode z t1 t2)) (not (occ z (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c10_goal : occ z (Z_bnode z t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c10_goal : occ z (Z_bnode z t1 t2)",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c4_z : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c7_goal : forall _ : not (eq n z),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c4_IH1 : sumbool (occ n t1) (not (occ n t1))"
                ],
                "tactic_res": [
                    "c11_goal : forall (_ : occ n t1) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c12_goal : forall (_ : not (occ n t1)) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c11_goal : forall (_ : occ n t1) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c4_IH2 : sumbool (occ n t2) (not (occ n t2))"
                ],
                "tactic_res": [
                    "c13_goal : forall (_ : occ n t2) (_ : occ n t1) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c14_goal : forall (_ : not (occ n t2)) (_ : occ n t1) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c13_goal : forall (_ : occ n t2) (_ : occ n t1) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c15_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c15_o : occ n t2",
                    "c15_o0 : occ n t1",
                    "c15_n0 : not (eq n z)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c15_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c2_n : Z",
                    "c4_z : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c14_goal : forall (_ : not (occ n t2)) (_ : occ n t1) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c16_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c16_n0 : not (occ n t2)",
                    "c16_o : occ n t1",
                    "c16_n1 : not (eq n z)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c16_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c16_o : occ n t1",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c2_n : Z",
                    "c4_z : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c12_goal : forall (_ : not (occ n t1)) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c4_IH2 : sumbool (occ n t2) (not (occ n t2))"
                ],
                "tactic_res": [
                    "c17_goal : forall (_ : occ n t2) (_ : not (occ n t1)) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c18_goal : forall (_ : not (occ n t2)) (_ : not (occ n t1)) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c17_goal : forall (_ : occ n t2) (_ : not (occ n t1)) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c19_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c19_o : occ n t2",
                    "c19_n0 : not (occ n t1)",
                    "c19_n1 : not (eq n z)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c19_o : occ n t2",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c2_n : Z",
                    "c4_z : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c18_goal : forall (_ : not (occ n t2)) (_ : not (occ n t1)) (_ : not (eq n z)),\nsumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c20_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))",
                    "c20_n0 : not (occ n t2)",
                    "c20_n1 : not (occ n t1)",
                    "c20_n2 : not (eq n z)"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c20_goal : sumbool (occ n (Z_bnode z t1 t2)) (not (occ n (Z_bnode z t1 t2)))"
                ],
                "tactic_res": [
                    "c21_goal : not (occ n (Z_bnode z t1 t2))"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H .",
                "tactic_args": [
                    "c21_goal : not (occ n (Z_bnode z t1 t2))"
                ],
                "tactic_res": [
                    "c22_goal : False",
                    "c22_H : occ n (Z_bnode z t1 t2)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c22_goal : False",
                    "c22_H : occ n (Z_bnode z t1 t2)"
                ],
                "tactic_res": [
                    "c23_goal : forall _ : eq z n, False",
                    "c24_goal : forall _ : or (occ n t1) (occ n t2), False"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c23_goal : forall _ : eq z n, False",
                    "c20_n2 : not (eq n z)",
                    "c2_n : Z",
                    "c4_z : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "tauto .",
                "tactic_sig_no_out_arg": "tauto .",
                "tactic_args": [
                    "c24_goal : forall _ : or (occ n t1) (occ n t2), False"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "min_leaf",
        "proof": [
            {
                "tactic_sig": "Lemma min_leaf : forall z : Z , min z Z_leaf .",
                "tactic_sig_no_out_arg": "Lemma min_leaf : forall z : Z , min z Z_leaf .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall z : Z, min z Z_leaf"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro z .",
                "tactic_args": [
                    "c1_goal : forall z : Z, min z Z_leaf"
                ],
                "tactic_res": [
                    "c2_goal : min z Z_leaf",
                    "c2_z : Z"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c2_goal : min z Z_leaf",
                    "_global_min_intro : forall (z : Z) (t : Z_btree)\n         (_ : forall (z' : Z) (_ : occ z' t), Z.lt z z'), \n       min z t"
                ],
                "tactic_res": [
                    "c3_goal : forall (z' : Z) (_ : occ z' Z_leaf), Z.lt z z'"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros z' H .",
                "tactic_args": [
                    "c3_goal : forall (z' : Z) (_ : occ z' Z_leaf), Z.lt z z'"
                ],
                "tactic_res": [
                    "c4_goal : Z.lt z z'",
                    "c4_z' : Z",
                    "c4_H : occ z' Z_leaf"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c4_goal : Z.lt z z'",
                    "c4_H : occ z' Z_leaf"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "maj_leaf",
        "proof": [
            {
                "tactic_sig": "Lemma maj_leaf : forall z : Z , maj z Z_leaf .",
                "tactic_sig_no_out_arg": "Lemma maj_leaf : forall z : Z , maj z Z_leaf .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall z : Z, maj z Z_leaf"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro z .",
                "tactic_args": [
                    "c1_goal : forall z : Z, maj z Z_leaf"
                ],
                "tactic_res": [
                    "c2_goal : maj z Z_leaf",
                    "c2_z : Z"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c2_goal : maj z Z_leaf",
                    "_global_maj_intro : forall (z : Z) (t : Z_btree)\n         (_ : forall (z' : Z) (_ : occ z' t), Z.lt z' z), \n       maj z t"
                ],
                "tactic_res": [
                    "c3_goal : forall (z' : Z) (_ : occ z' Z_leaf), Z.lt z' z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros z' H .",
                "tactic_args": [
                    "c3_goal : forall (z' : Z) (_ : occ z' Z_leaf), Z.lt z' z"
                ],
                "tactic_res": [
                    "c4_goal : Z.lt z' z",
                    "c4_z' : Z",
                    "c4_H : occ z' Z_leaf"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c4_goal : Z.lt z' z",
                    "c4_H : occ z' Z_leaf"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "maj_not_occ",
        "proof": [
            {
                "tactic_sig": "Lemma maj_not_occ : forall ( z : Z ) ( t : Z_btree ) , maj z t -> ~ occ z t .",
                "tactic_sig_no_out_arg": "Lemma maj_not_occ : forall ( z : Z ) ( t : Z_btree ) , maj z t -> ~ occ z t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
                ]
            },
            {
                "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
                "tactic_sig_no_out_arg": "custom_tac10 z t H H' Z.lt_irrefl .",
                "tactic_args": [
                    "c1_goal : forall (z : Z) (t : Z_btree) (_ : maj z t), not (occ z t)"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "min_not_occ",
        "proof": [
            {
                "tactic_sig": "Lemma min_not_occ : forall ( z : Z ) ( t : Z_btree ) , min z t -> ~ occ z t .",
                "tactic_sig_no_out_arg": "Lemma min_not_occ : forall ( z : Z ) ( t : Z_btree ) , min z t -> ~ occ z t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
                ]
            },
            {
                "tactic_sig": "custom_tac10 z t H H' Z.lt_irrefl .",
                "tactic_sig_no_out_arg": "custom_tac10 z t H H' Z.lt_irrefl .",
                "tactic_args": [
                    "c1_goal : forall (z : Z) (t : Z_btree) (_ : min z t), not (occ z t)"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "search_tree_l",
        "proof": [
            {
                "tactic_sig": "Lemma search_tree_l : search_tree t1 .",
                "tactic_sig_no_out_arg": "Lemma search_tree_l : search_tree t1 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : search_tree t1",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c1_se : search_tree (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c1_H2 : min n t2",
                    "c1_H1 : maj n t1",
                    "c1_H0 : search_tree t2",
                    "c1_H : search_tree t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c1_goal : search_tree t1",
                    "c1_H : search_tree t1",
                    "c1_t1 : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "search_tree_r",
        "proof": [
            {
                "tactic_sig": "Lemma search_tree_r : search_tree t2 .",
                "tactic_sig_no_out_arg": "Lemma search_tree_r : search_tree t2 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : search_tree t2",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c1_se : search_tree (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c1_H2 : min n t2",
                    "c1_H1 : maj n t1",
                    "c1_H0 : search_tree t2",
                    "c1_H : search_tree t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c1_goal : search_tree t2",
                    "c1_H0 : search_tree t2",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "maj_l",
        "proof": [
            {
                "tactic_sig": "Lemma maj_l : maj n t1 .",
                "tactic_sig_no_out_arg": "Lemma maj_l : maj n t1 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : maj n t1",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c1_se : search_tree (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c1_H2 : min n t2",
                    "c1_H1 : maj n t1",
                    "c1_H0 : search_tree t2",
                    "c1_H : search_tree t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c1_goal : maj n t1",
                    "c1_H1 : maj n t1",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "min_r",
        "proof": [
            {
                "tactic_sig": "Lemma min_r : min n t2 .",
                "tactic_sig_no_out_arg": "Lemma min_r : min n t2 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : min n t2",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c1_se : search_tree (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c1_H2 : min n t2",
                    "c1_H1 : maj n t1",
                    "c1_H0 : search_tree t2",
                    "c1_H : search_tree t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c1_goal : min n t2",
                    "c1_H2 : min n t2",
                    "c1_t2 : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "not_right",
        "proof": [
            {
                "tactic_sig": "Lemma not_right : forall p : Z , p <= n -> ~ occ p t2 .",
                "tactic_sig_no_out_arg": "Lemma not_right : forall p : Z , p <= n -> ~ occ p t2 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p : Z) (_ : Z.le p n), not (occ p t2)",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H .",
                "tactic_args": [
                    "c1_goal : forall (p : Z) (_ : Z.le p n), not (occ p t2)"
                ],
                "tactic_res": [
                    "c2_goal : not (occ p t2)",
                    "c2_p : Z",
                    "c2_H : Z.le p n"
                ]
            },
            {
                "tactic_sig": "elim min_r .",
                "tactic_sig_no_out_arg": "elim min_r .",
                "tactic_args": [
                    "c2_goal : not (occ p t2)"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)"
                ]
            },
            {
                "tactic_sig": "custom_tac13 not _i _i .",
                "tactic_sig_no_out_arg": "custom_tac13 not _i _i .",
                "tactic_args": [
                    "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', not (occ p t2)",
                    "c1_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": [
                    "c4_goal : not (Z.lt n p)",
                    "c4_H1 : occ p t2",
                    "c4_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c4_goal : not (Z.lt n p)",
                    "_global_Zle_not_lt : forall (n m : Z) (_ : Z.le n m), not (Z.lt m n)"
                ],
                "tactic_res": [
                    "c5_goal : Z.le p n"
                ]
            },
            {
                "tactic_sig": "assumption .",
                "tactic_sig_no_out_arg": "assumption .",
                "tactic_args": [
                    "c5_goal : Z.le p n",
                    "c2_H : Z.le p n",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "not_left",
        "proof": [
            {
                "tactic_sig": "Lemma not_left : forall p : Z , p >= n -> ~ occ p t1 .",
                "tactic_sig_no_out_arg": "Lemma not_left : forall p : Z , p >= n -> ~ occ p t1 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p : Z) (_ : Z.ge p n), not (occ p t1)",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H .",
                "tactic_args": [
                    "c1_goal : forall (p : Z) (_ : Z.ge p n), not (occ p t1)"
                ],
                "tactic_res": [
                    "c2_goal : not (occ p t1)",
                    "c2_p : Z",
                    "c2_H : Z.ge p n"
                ]
            },
            {
                "tactic_sig": "elim maj_l .",
                "tactic_sig_no_out_arg": "elim maj_l .",
                "tactic_args": [
                    "c2_goal : not (occ p t1)"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, not (occ p t1)"
                ]
            },
            {
                "tactic_sig": "unfold _i .",
                "tactic_sig_no_out_arg": "unfold _i .",
                "tactic_args": [
                    "c3_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, not (occ p t1)",
                    "_global_not : forall _ : Prop, Prop"
                ],
                "tactic_res": [
                    "c4_goal : forall (_ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n) (_ : occ p t1),\nFalse"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c4_goal : forall (_ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n) (_ : occ p t1),\nFalse"
                ],
                "tactic_res": [
                    "c5_goal : False",
                    "c5_H0 : forall (z' : Z) (_ : occ z' t1), Z.lt z' n",
                    "c5_H1 : occ p t1"
                ]
            },
            {
                "tactic_sig": "absurd ( _i < _i ) .",
                "tactic_sig_no_out_arg": "absurd ( _i < _i ) .",
                "tactic_args": [
                    "c5_goal : False",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": [
                    "c6_goal : not (Z.lt p n)",
                    "c7_goal : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : not (Z.lt p n)",
                    "c2_H : Z.ge p n",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : Z.lt p n",
                    "c5_H1 : occ p t1",
                    "c5_H0 : forall (z' : Z) (_ : occ z' t1), Z.lt z' n",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "go_left",
        "proof": [
            {
                "tactic_sig": "Lemma go_left : forall p : Z , occ p ( Z_bnode n t1 t2 ) -> p < n -> occ p t1 .",
                "tactic_sig_no_out_arg": "Lemma go_left : forall p : Z , occ p ( Z_bnode n t1 t2 ) -> p < n -> occ p t1 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p : Z) (_ : occ p (Z_bnode n t1 t2)) (_ : Z.lt p n), occ p t1",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros p H H0 .",
                "tactic_args": [
                    "c1_goal : forall (p : Z) (_ : occ p (Z_bnode n t1 t2)) (_ : Z.lt p n), occ p t1"
                ],
                "tactic_res": [
                    "c2_goal : occ p t1",
                    "c2_p : Z",
                    "c2_H : occ p (Z_bnode n t1 t2)",
                    "c2_H0 : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : occ p t1",
                    "c2_H : occ p (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq n p, occ p t1",
                    "c4_goal : forall _ : or (occ p t1) (occ p t2), occ p t1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c3_goal : forall _ : eq n p, occ p t1"
                ],
                "tactic_res": [
                    "c5_goal : occ p t1",
                    "c5_e : eq n p"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c5_goal : occ p t1",
                    "c5_e : eq n p"
                ],
                "tactic_res": [
                    "c6_goal : occ n t1"
                ]
            },
            {
                "tactic_sig": "absurd ( _i < _i ) .",
                "tactic_sig_no_out_arg": "absurd ( _i < _i ) .",
                "tactic_args": [
                    "c6_goal : occ n t1",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": [
                    "c7_goal : not (Z.lt p n)",
                    "c8_goal : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c7_goal : not (Z.lt p n)",
                    "c5_e : eq n p"
                ],
                "tactic_res": [
                    "c9_goal : not (Z.lt p p)"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c9_goal : not (Z.lt p p)",
                    "_global_Zle_not_lt : forall (n m : Z) (_ : Z.le n m), not (Z.lt m n)"
                ],
                "tactic_res": [
                    "c10_goal : Z.le p p"
                ]
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c10_goal : Z.le p p",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "assumption .",
                "tactic_sig_no_out_arg": "assumption .",
                "tactic_args": [
                    "c8_goal : Z.lt p n",
                    "c2_H0 : Z.lt p n",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "destruct 1 as [  _o | _o ] .",
                "tactic_sig_no_out_arg": "destruct 1 .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ p t1) (occ p t2), occ p t1",
                    "c2_H0 : Z.lt p n",
                    "c2_H : occ p (Z_bnode n t1 t2)",
                    "c2_p : Z",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c11_goal : occ p t1",
                    "c11_H1 : occ p t1",
                    "c12_goal : occ p t1",
                    "c12_H1 : occ p t2"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c11_goal : occ p t1",
                    "c11_H1 : occ p t1",
                    "c2_p : Z",
                    "c1_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c12_goal : occ p t1",
                    "c2_p : Z",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c13_goal : not (occ p t2)",
                    "c14_goal : occ p t2"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c13_goal : not (occ p t2)",
                    "_global_not_right : forall (p : Z) (_ : Z.le p n), not (occ p t2)"
                ],
                "tactic_res": [
                    "c15_goal : Z.le p n"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c15_goal : Z.le p n",
                    "_global_Zlt_le_weak : forall (n m : Z) (_ : Z.lt n m), Z.le n m"
                ],
                "tactic_res": [
                    "c16_goal : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "assumption .",
                "tactic_sig_no_out_arg": "assumption .",
                "tactic_args": [
                    "c16_goal : Z.lt p n",
                    "c2_H0 : Z.lt p n",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c14_goal : occ p t2",
                    "c12_H1 : occ p t2",
                    "c2_p : Z",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "go_right",
        "proof": [
            {
                "tactic_sig": "Lemma go_right : forall p : Z , occ p ( Z_bnode n t1 t2 ) -> p > n -> occ p t2 .",
                "tactic_sig_no_out_arg": "Lemma go_right : forall p : Z , occ p ( Z_bnode n t1 t2 ) -> p > n -> occ p t2 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p : Z) (_ : occ p (Z_bnode n t1 t2)) (_ : Z.gt p n), occ p t2",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros p H H0 .",
                "tactic_args": [
                    "c1_goal : forall (p : Z) (_ : occ p (Z_bnode n t1 t2)) (_ : Z.gt p n), occ p t2"
                ],
                "tactic_res": [
                    "c2_goal : occ p t2",
                    "c2_p : Z",
                    "c2_H : occ p (Z_bnode n t1 t2)",
                    "c2_H0 : Z.gt p n"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : occ p t2",
                    "c2_H : occ p (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq n p, occ p t2",
                    "c4_goal : forall _ : or (occ p t1) (occ p t2), occ p t2"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c3_goal : forall _ : eq n p, occ p t2"
                ],
                "tactic_res": [
                    "c5_goal : occ p t2",
                    "c5_e : eq n p"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c5_goal : occ p t2",
                    "c5_e : eq n p"
                ],
                "tactic_res": [
                    "c6_goal : occ n t2"
                ]
            },
            {
                "tactic_sig": "absurd ( _i < _i ) .",
                "tactic_sig_no_out_arg": "absurd ( _i < _i ) .",
                "tactic_args": [
                    "c6_goal : occ n t2",
                    "c1_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": [
                    "c7_goal : not (Z.lt n p)",
                    "c8_goal : Z.lt n p"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c7_goal : not (Z.lt n p)",
                    "c5_e : eq n p"
                ],
                "tactic_res": [
                    "c9_goal : not (Z.lt p p)"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c9_goal : not (Z.lt p p)",
                    "_global_Zle_not_lt : forall (n m : Z) (_ : Z.le n m), not (Z.lt m n)"
                ],
                "tactic_res": [
                    "c10_goal : Z.le p p"
                ]
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c10_goal : Z.le p p",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c8_goal : Z.lt n p",
                    "_global_Z.gt_lt : forall (n m : Z) (_ : Z.gt n m), Z.lt m n"
                ],
                "tactic_res": [
                    "c11_goal : Z.gt p n"
                ]
            },
            {
                "tactic_sig": "assumption .",
                "tactic_sig_no_out_arg": "assumption .",
                "tactic_args": [
                    "c11_goal : Z.gt p n",
                    "c2_H0 : Z.gt p n",
                    "c2_p : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "destruct 1 as [  _o | _o ] .",
                "tactic_sig_no_out_arg": "destruct 1 .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ p t1) (occ p t2), occ p t2",
                    "c2_H0 : Z.gt p n",
                    "c2_H : occ p (Z_bnode n t1 t2)",
                    "c2_p : Z",
                    "c1_se : search_tree (Z_bnode n t1 t2)",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c12_goal : occ p t2",
                    "c12_H1 : occ p t1",
                    "c13_goal : occ p t2",
                    "c13_H1 : occ p t2"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c13_goal : occ p t2",
                    "c13_H1 : occ p t2",
                    "c2_p : Z",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c12_goal : occ p t2",
                    "c2_p : Z",
                    "c1_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c14_goal : not (occ p t1)",
                    "c15_goal : occ p t1"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c14_goal : not (occ p t1)",
                    "_global_not_left : forall (p : Z) (_ : Z.ge p n), not (occ p t1)"
                ],
                "tactic_res": [
                    "c16_goal : Z.ge p n"
                ]
            },
            {
                "tactic_sig": "unfold _i .",
                "tactic_sig_no_out_arg": "unfold _i .",
                "tactic_args": [
                    "c16_goal : Z.ge p n",
                    "_global_Z.ge : forall (_ : Z) (_ : Z), Prop"
                ],
                "tactic_res": [
                    "c17_goal : not (eq (Z.compare p n) Lt)"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c17_goal : not (eq (Z.compare p n) Lt)",
                    "c2_H0 : Z.gt p n"
                ],
                "tactic_res": [
                    "c18_goal : not (eq Gt Lt)"
                ]
            },
            {
                "tactic_sig": "discriminate .",
                "tactic_sig_no_out_arg": "discriminate .",
                "tactic_args": [
                    "c18_goal : not (eq Gt Lt)"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c15_goal : occ p t1",
                    "c12_H1 : occ p t1",
                    "c2_p : Z",
                    "c1_t1 : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "occ_dec",
        "proof": [
            {
                "tactic_sig": "Definition occ_dec : forall ( p : Z ) ( t : Z_btree ) , occ_dec_spec p t .",
                "tactic_sig_no_out_arg": "Definition occ_dec : forall ( p : Z ) ( t : Z_btree ) , occ_dec_spec p t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p : Z) (t : Z_btree), occ_dec_spec p t"
                ]
            },
            {
                "tactic_sig": "refine ( fix occ_dec ( p : Z ) ( t : Z_btree ) { struct t } : occ_dec_spec p t := match t as x return occ_dec_spec p x with | Z_leaf => fun h => right _ _ | Z_bnode n t1 t2 => fun h => match Z_le_gt_dec p n with | left h1 => match Z_le_lt_eq_dec p n h1 with | left h'1 => match occ_dec p t1 _ with | left h''1 => left _ _ | right h''2 => right _ _ end | right h'2 => left _ _ end | right h2 => match occ_dec p t2 _ with | left h''1 => left _ _ | right h''2 => right _ _ end end end ) .",
                "tactic_sig_no_out_arg": "refine ( fix occ_dec ( p : Z ) ( t : Z_btree ) { struct t } : occ_dec_spec p t := match t as x return occ_dec_spec p x with | Z_leaf => fun h => right _ _ | Z_bnode n t1 t2 => fun h => match Z_le_gt_dec p n with | left h1 => match Z_le_lt_eq_dec p n h1 with | left h'1 => match occ_dec p t1 _ with | left h''1 => left _ _ | right h''2 => right _ _ end | right h'2 => left _ _ end | right h2 => match occ_dec p t2 _ with | left h''1 => left _ _ | right h''2 => right _ _ end end end ) .",
                "tactic_args": [
                    "c1_goal : forall (p : Z) (t : Z_btree), occ_dec_spec p t"
                ],
                "tactic_res": [
                    "c2_goal : not (occ p Z_leaf)",
                    "c2_h : search_tree Z_leaf",
                    "c2_t : Z_btree",
                    "c2_p : Z",
                    "c2_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c3_goal : search_tree t1",
                    "c3_h'1 : Z.lt p n",
                    "c3_h1 : Z.le p n",
                    "c3_h : search_tree (Z_bnode n t1 t2)",
                    "c3_t2 : Z_btree",
                    "c3_t1 : Z_btree",
                    "c3_n : Z",
                    "c3_t : Z_btree",
                    "c3_p : Z",
                    "c3_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c4_goal : occ p (Z_bnode n t1 t2)",
                    "c4_h''1 : occ p t1",
                    "c4_h'1 : Z.lt p n",
                    "c4_h1 : Z.le p n",
                    "c4_h : search_tree (Z_bnode n t1 t2)",
                    "c4_t2 : Z_btree",
                    "c4_t1 : Z_btree",
                    "c4_n : Z",
                    "c4_t : Z_btree",
                    "c4_p : Z",
                    "c4_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c5_goal : not (occ p (Z_bnode n t1 t2))",
                    "c5_h''2 : not (occ p t1)",
                    "c5_h'1 : Z.lt p n",
                    "c5_h1 : Z.le p n",
                    "c5_h : search_tree (Z_bnode n t1 t2)",
                    "c5_t2 : Z_btree",
                    "c5_t1 : Z_btree",
                    "c5_n : Z",
                    "c5_t : Z_btree",
                    "c5_p : Z",
                    "c5_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c6_goal : occ p (Z_bnode n t1 t2)",
                    "c6_h'2 : eq p n",
                    "c6_h1 : Z.le p n",
                    "c6_h : search_tree (Z_bnode n t1 t2)",
                    "c6_t2 : Z_btree",
                    "c6_t1 : Z_btree",
                    "c6_n : Z",
                    "c6_t : Z_btree",
                    "c6_p : Z",
                    "c6_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c7_goal : search_tree t2",
                    "c7_h2 : Z.gt p n",
                    "c7_h : search_tree (Z_bnode n t1 t2)",
                    "c7_t2 : Z_btree",
                    "c7_t1 : Z_btree",
                    "c7_n : Z",
                    "c7_t : Z_btree",
                    "c7_p : Z",
                    "c7_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c8_goal : occ p (Z_bnode n t1 t2)",
                    "c8_h''1 : occ p t2",
                    "c8_h2 : Z.gt p n",
                    "c8_h : search_tree (Z_bnode n t1 t2)",
                    "c8_t2 : Z_btree",
                    "c8_t1 : Z_btree",
                    "c8_n : Z",
                    "c8_t : Z_btree",
                    "c8_p : Z",
                    "c8_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t",
                    "c9_goal : not (occ p (Z_bnode n t1 t2))",
                    "c9_h''2 : not (occ p t2)",
                    "c9_h2 : Z.gt p n",
                    "c9_h : search_tree (Z_bnode n t1 t2)",
                    "c9_t2 : Z_btree",
                    "c9_t1 : Z_btree",
                    "c9_n : Z",
                    "c9_t : Z_btree",
                    "c9_p : Z",
                    "c9_occ_dec : forall (p : Z) (t : Z_btree), occ_dec_spec p t"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c2_goal : not (occ p Z_leaf)",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c3_goal : search_tree t1",
                    "c3_h : search_tree (Z_bnode n t1 t2)",
                    "c3_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c4_goal : occ p (Z_bnode n t1 t2)",
                    "c4_h''1 : occ p t1",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c4_n : Z",
                    "c4_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c5_goal : not (occ p (Z_bnode n t1 t2))",
                    "c5_h''2 : not (occ p t1)",
                    "c5_h'1 : Z.lt p n",
                    "c5_h : search_tree (Z_bnode n t1 t2)",
                    "c5_t1 : Z_btree",
                    "c5_t2 : Z_btree",
                    "c5_n : Z",
                    "c5_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c7_goal : search_tree t2",
                    "c7_h : search_tree (Z_bnode n t1 t2)",
                    "c7_t2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c8_goal : occ p (Z_bnode n t1 t2)",
                    "c8_h''1 : occ p t2",
                    "c8_t1 : Z_btree",
                    "c8_t2 : Z_btree",
                    "c8_n : Z",
                    "c8_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c9_goal : not (occ p (Z_bnode n t1 t2))",
                    "c9_h''2 : not (occ p t2)",
                    "c9_h2 : Z.gt p n",
                    "c9_h : search_tree (Z_bnode n t1 t2)",
                    "c9_t1 : Z_btree",
                    "c9_t2 : Z_btree",
                    "c9_n : Z",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c6_goal : occ p (Z_bnode n t1 t2)",
                    "c6_h'2 : eq p n"
                ],
                "tactic_res": [
                    "c10_goal : occ n (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c10_goal : occ n (Z_bnode n t1 t2)",
                    "c6_t1 : Z_btree",
                    "c6_t2 : Z_btree",
                    "c6_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "insert_leaf",
        "proof": [
            {
                "tactic_sig": "Lemma insert_leaf : forall n : Z , INSERT n Z_leaf ( Z_bnode n Z_leaf Z_leaf ) .",
                "tactic_sig_no_out_arg": "Lemma insert_leaf : forall n : Z , INSERT n Z_leaf ( Z_bnode n Z_leaf Z_leaf ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall n : Z, INSERT n Z_leaf (Z_bnode n Z_leaf Z_leaf)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro n .",
                "tactic_args": [
                    "c1_goal : forall n : Z, INSERT n Z_leaf (Z_bnode n Z_leaf Z_leaf)"
                ],
                "tactic_res": [
                    "c2_goal : INSERT n Z_leaf (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c2_goal : INSERT n Z_leaf (Z_bnode n Z_leaf Z_leaf)"
                ],
                "tactic_res": [
                    "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                    "c4_goal : occ n (Z_bnode n Z_leaf Z_leaf)",
                    "c5_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                    "c6_goal : search_tree (Z_bnode n Z_leaf Z_leaf)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c4_goal : occ n (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H .",
                "tactic_args": [
                    "c5_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)"
                ],
                "tactic_res": [
                    "c7_goal : or (occ p Z_leaf) (eq n p)",
                    "c7_p : Z",
                    "c7_H : occ p (Z_bnode n Z_leaf Z_leaf)"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c7_goal : or (occ p Z_leaf) (eq n p)",
                    "c7_H : occ p (Z_bnode n Z_leaf Z_leaf)"
                ],
                "tactic_res": [
                    "c8_goal : or (occ n Z_leaf) (eq n n)",
                    "c9_goal : or (occ p Z_leaf) (eq n p)",
                    "c9_H0 : occ p Z_leaf",
                    "c10_goal : or (occ p Z_leaf) (eq n p)",
                    "c10_H0 : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c8_goal : or (occ n Z_leaf) (eq n n)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c9_goal : or (occ p Z_leaf) (eq n p)",
                    "c9_H0 : occ p Z_leaf",
                    "c2_n : Z",
                    "c7_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c10_goal : or (occ p Z_leaf) (eq n p)",
                    "c10_H0 : occ p Z_leaf",
                    "c2_n : Z",
                    "c7_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "insert_l",
        "proof": [
            {
                "tactic_sig": "Lemma insert_l : forall ( n p : Z ) ( t1 t'1 t2 : Z_btree ) , n < p -> search_tree ( Z_bnode p t1 t2 ) -> INSERT n t1 t'1 -> INSERT n ( Z_bnode p t1 t2 ) ( Z_bnode p t'1 t2 ) .",
                "tactic_sig_no_out_arg": "Lemma insert_l : forall ( n p : Z ) ( t1 t'1 t2 : Z_btree ) , n < p -> search_tree ( Z_bnode p t1 t2 ) -> INSERT n t1 t'1 -> INSERT n ( Z_bnode p t1 t2 ) ( Z_bnode p t'1 t2 ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n p : Z) (t1 t'1 t2 : Z_btree) (_ : Z.lt n p)\n  (_ : search_tree (Z_bnode p t1 t2)) (_ : INSERT n t1 t'1),\nINSERT n (Z_bnode p t1 t2) (Z_bnode p t'1 t2)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros n p t1 t'1 t2 H H0 H1 .",
                "tactic_args": [
                    "c1_goal : forall (n p : Z) (t1 t'1 t2 : Z_btree) (_ : Z.lt n p)\n  (_ : search_tree (Z_bnode p t1 t2)) (_ : INSERT n t1 t'1),\nINSERT n (Z_bnode p t1 t2) (Z_bnode p t'1 t2)"
                ],
                "tactic_res": [
                    "c2_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t'1 t2)",
                    "c2_n : Z",
                    "c2_p : Z",
                    "c2_t1 : Z_btree",
                    "c2_t'1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_H : Z.lt n p",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)",
                    "c2_H1 : INSERT n t1 t'1"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c2_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t'1 t2)"
                ],
                "tactic_res": [
                    "c3_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)),\nocc p0 (Z_bnode p t'1 t2)",
                    "c4_goal : occ n (Z_bnode p t'1 t2)",
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t'1 t2)),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c6_goal : search_tree (Z_bnode p t'1 t2)"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c3_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)),\nocc p0 (Z_bnode p t'1 t2)"
                ],
                "tactic_res": [
                    "c7_goal : occ p0 (Z_bnode p t'1 t2)",
                    "c7_p0 : Z",
                    "c7_H2 : occ p0 (Z_bnode p t1 t2)"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c7_goal : occ p0 (Z_bnode p t'1 t2)",
                    "c7_H2 : occ p0 (Z_bnode p t1 t2)"
                ],
                "tactic_res": [
                    "c8_goal : occ p (Z_bnode p t'1 t2)",
                    "c9_goal : occ p0 (Z_bnode p t'1 t2)",
                    "c9_H3 : occ p0 t1",
                    "c10_goal : occ p0 (Z_bnode p t'1 t2)",
                    "c10_H3 : occ p0 t2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c8_goal : occ p (Z_bnode p t'1 t2)",
                    "c2_t'1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c10_goal : occ p0 (Z_bnode p t'1 t2)",
                    "c10_H3 : occ p0 t2",
                    "c7_p0 : Z",
                    "c2_t'1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c9_goal : occ p0 (Z_bnode p t'1 t2)",
                    "c2_H1 : INSERT n t1 t'1"
                ],
                "tactic_res": [
                    "c11_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), occ p0 (Z_bnode p t'1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c11_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), occ p0 (Z_bnode p t'1 t2)",
                    "c9_H3 : occ p0 t1",
                    "c7_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t'1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "constructor 2 .",
                "tactic_sig_no_out_arg": "constructor 2 .",
                "tactic_args": [
                    "c4_goal : occ n (Z_bnode p t'1 t2)"
                ],
                "tactic_res": [
                    "c12_goal : occ n t'1"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c12_goal : occ n t'1",
                    "c2_H1 : INSERT n t1 t'1"
                ],
                "tactic_res": [
                    "c13_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), occ n t'1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c13_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), occ n t'1",
                    "c2_t1 : Z_btree",
                    "c2_t'1 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t'1 t2)),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)"
                ],
                "tactic_res": [
                    "c14_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_p0 : Z",
                    "c14_H2 : occ p0 (Z_bnode p t'1 t2)"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c14_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_H2 : occ p0 (Z_bnode p t'1 t2)"
                ],
                "tactic_res": [
                    "c15_goal : or (occ p (Z_bnode p t1 t2)) (eq n p)",
                    "c16_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c16_H3 : occ p0 t'1",
                    "c17_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c17_H3 : occ p0 t2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c15_goal : or (occ p (Z_bnode p t1 t2)) (eq n p)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c17_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c17_H3 : occ p0 t2",
                    "c14_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c16_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c2_H1 : INSERT n t1 t'1"
                ],
                "tactic_res": [
                    "c18_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), or (occ p0 (Z_bnode p t1 t2)) (eq n p0)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros H4 H5 H6 .",
                "tactic_args": [
                    "c18_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), or (occ p0 (Z_bnode p t1 t2)) (eq n p0)"
                ],
                "tactic_res": [
                    "c19_goal : forall _ : search_tree t'1, or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c19_H4 : forall (p : Z) (_ : occ p t1), occ p t'1",
                    "c19_H5 : occ n t'1",
                    "c19_H6 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i ) .",
                "tactic_args": [
                    "c19_goal : forall _ : search_tree t'1, or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c19_H6 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)",
                    "c14_p0 : Z"
                ],
                "tactic_res": [
                    "c20_goal : forall (_ : occ p0 t1) (_ : search_tree t'1),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c21_goal : forall (_ : eq n p0) (_ : search_tree t'1),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c22_goal : occ p0 t'1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c20_goal : forall (_ : occ p0 t1) (_ : search_tree t'1),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t'1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c21_goal : forall (_ : eq n p0) (_ : search_tree t'1),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t'1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : occ p0 t'1",
                    "c16_H3 : occ p0 t'1",
                    "c14_p0 : Z",
                    "c2_t'1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode p t'1 t2)",
                    "c2_H1 : INSERT n t1 t'1"
                ],
                "tactic_res": [
                    "c23_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), search_tree (Z_bnode p t'1 t2)"
                ]
            },
            {
                "tactic_sig": "constructor 2 .",
                "tactic_sig_no_out_arg": "constructor 2 .",
                "tactic_args": [
                    "c23_goal : forall (_ : forall (p : Z) (_ : occ p t1), occ p t'1) \n  (_ : occ n t'1)\n  (_ : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p))\n  (_ : search_tree t'1), search_tree (Z_bnode p t'1 t2)"
                ],
                "tactic_res": [
                    "c24_goal : search_tree t'1",
                    "c24_H5 : search_tree t'1",
                    "c24_H4 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)",
                    "c24_H3 : occ n t'1",
                    "c24_H2 : forall (p : Z) (_ : occ p t1), occ p t'1",
                    "c25_goal : search_tree t2",
                    "c25_H5 : search_tree t'1",
                    "c25_H4 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)",
                    "c25_H3 : occ n t'1",
                    "c25_H2 : forall (p : Z) (_ : occ p t1), occ p t'1",
                    "c26_goal : maj p t'1",
                    "c26_H5 : search_tree t'1",
                    "c26_H4 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)",
                    "c26_H3 : occ n t'1",
                    "c26_H2 : forall (p : Z) (_ : occ p t1), occ p t'1",
                    "c27_goal : min p t2",
                    "c27_H5 : search_tree t'1",
                    "c27_H4 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)",
                    "c27_H3 : occ n t'1",
                    "c27_H2 : forall (p : Z) (_ : occ p t1), occ p t'1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c24_goal : search_tree t'1",
                    "c24_H5 : search_tree t'1",
                    "c2_t'1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eapply _i .",
                "tactic_sig_no_out_arg": "eapply _i .",
                "tactic_args": [
                    "c25_goal : search_tree t2",
                    "_global_search_tree_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       search_tree t2"
                ],
                "tactic_res": [
                    "c28_goal : search_tree (Z_bnode ?n ?t1 t2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c28_goal : search_tree (Z_bnode ?n ?t1 t2)",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)",
                    "c2_t2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c26_goal : maj p t'1"
                ],
                "tactic_res": [
                    "c29_goal : forall (z' : Z) (_ : occ z' t'1), Z.lt z' p"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c29_goal : forall (z' : Z) (_ : occ z' t'1), Z.lt z' p"
                ],
                "tactic_res": [
                    "c30_goal : Z.lt z' p",
                    "c30_z' : Z",
                    "c30_H6 : occ z' t'1"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i ) .",
                "tactic_args": [
                    "c30_goal : Z.lt z' p",
                    "c26_H4 : forall (p : Z) (_ : occ p t'1), or (occ p t1) (eq n p)",
                    "c30_z' : Z"
                ],
                "tactic_res": [
                    "c31_goal : forall _ : occ z' t1, Z.lt z' p",
                    "c32_goal : forall _ : eq n z', Z.lt z' p",
                    "c33_goal : occ z' t'1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c31_goal : forall _ : occ z' t1, Z.lt z' p"
                ],
                "tactic_res": [
                    "c34_goal : Z.lt z' p",
                    "c34_H7 : occ z' t1"
                ]
            },
            {
                "tactic_sig": "cut ( maj _i _i ) .",
                "tactic_sig_no_out_arg": "cut ( maj _i _i ) .",
                "tactic_args": [
                    "c34_goal : Z.lt z' p",
                    "c2_p : Z",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c35_goal : forall _ : maj p t1, Z.lt z' p",
                    "c36_goal : maj p t1"
                ]
            },
            {
                "tactic_sig": "induction 1 .",
                "tactic_sig_no_out_arg": "induction 1 .",
                "tactic_args": [
                    "c35_goal : forall _ : maj p t1, Z.lt z' p"
                ],
                "tactic_res": [
                    "c37_goal : Z.lt z' p",
                    "c37_H8 : forall (z' : Z) (_ : occ z' t1), Z.lt z' p"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c37_goal : Z.lt z' p",
                    "c37_H8 : forall (z' : Z) (_ : occ z' t1), Z.lt z' p",
                    "c34_H7 : occ z' t1",
                    "c30_z' : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eapply _i .",
                "tactic_sig_no_out_arg": "eapply _i .",
                "tactic_args": [
                    "c36_goal : maj p t1",
                    "_global_maj_l : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       maj n t1"
                ],
                "tactic_res": [
                    "c38_goal : search_tree (Z_bnode p t1 ?t2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c38_goal : search_tree (Z_bnode p t1 ?t2)",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c32_goal : forall _ : eq n z', Z.lt z' p"
                ],
                "tactic_res": [
                    "c39_goal : Z.lt z' p",
                    "c39_e : eq n z'"
                ]
            },
            {
                "tactic_sig": "subst _i .",
                "tactic_sig_no_out_arg": "subst _i .",
                "tactic_args": [
                    "c39_goal : Z.lt z' p",
                    "c30_z' : Z",
                    "c39_e : eq n z'"
                ],
                "tactic_res": [
                    "c40_goal : Z.lt n p",
                    "c40_H6 : occ n t'1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c40_goal : Z.lt n p",
                    "c2_H : Z.lt n p",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "assumption .",
                "tactic_sig_no_out_arg": "assumption .",
                "tactic_args": [
                    "c33_goal : occ z' t'1",
                    "c30_H6 : occ z' t'1",
                    "c30_z' : Z",
                    "c2_t'1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eapply _i .",
                "tactic_sig_no_out_arg": "eapply _i .",
                "tactic_args": [
                    "c27_goal : min p t2",
                    "_global_min_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       min n t2"
                ],
                "tactic_res": [
                    "c41_goal : search_tree (Z_bnode p ?t1 t2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c41_goal : search_tree (Z_bnode p ?t1 t2)",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)",
                    "c2_t2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "insert_r",
        "proof": [
            {
                "tactic_sig": "Lemma insert_r : forall ( n p : Z ) ( t1 t2 t'2 : Z_btree ) , n > p -> search_tree ( Z_bnode p t1 t2 ) -> INSERT n t2 t'2 -> INSERT n ( Z_bnode p t1 t2 ) ( Z_bnode p t1 t'2 ) .",
                "tactic_sig_no_out_arg": "Lemma insert_r : forall ( n p : Z ) ( t1 t2 t'2 : Z_btree ) , n > p -> search_tree ( Z_bnode p t1 t2 ) -> INSERT n t2 t'2 -> INSERT n ( Z_bnode p t1 t2 ) ( Z_bnode p t1 t'2 ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n p : Z) (t1 t2 t'2 : Z_btree) (_ : Z.gt n p)\n  (_ : search_tree (Z_bnode p t1 t2)) (_ : INSERT n t2 t'2),\nINSERT n (Z_bnode p t1 t2) (Z_bnode p t1 t'2)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros n p t1 t2 t'2 H H0 H1 .",
                "tactic_args": [
                    "c1_goal : forall (n p : Z) (t1 t2 t'2 : Z_btree) (_ : Z.gt n p)\n  (_ : search_tree (Z_bnode p t1 t2)) (_ : INSERT n t2 t'2),\nINSERT n (Z_bnode p t1 t2) (Z_bnode p t1 t'2)"
                ],
                "tactic_res": [
                    "c2_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t1 t'2)",
                    "c2_n : Z",
                    "c2_p : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_H : Z.gt n p",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)",
                    "c2_H1 : INSERT n t2 t'2"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c2_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t1 t'2)"
                ],
                "tactic_res": [
                    "c3_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)),\nocc p0 (Z_bnode p t1 t'2)",
                    "c4_goal : occ n (Z_bnode p t1 t'2)",
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t'2)),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c6_goal : search_tree (Z_bnode p t1 t'2)"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c3_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)),\nocc p0 (Z_bnode p t1 t'2)"
                ],
                "tactic_res": [
                    "c7_goal : occ p0 (Z_bnode p t1 t'2)",
                    "c7_p0 : Z",
                    "c7_H2 : occ p0 (Z_bnode p t1 t2)"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c7_goal : occ p0 (Z_bnode p t1 t'2)",
                    "c7_H2 : occ p0 (Z_bnode p t1 t2)"
                ],
                "tactic_res": [
                    "c8_goal : occ p (Z_bnode p t1 t'2)",
                    "c9_goal : occ p0 (Z_bnode p t1 t'2)",
                    "c9_H3 : occ p0 t1",
                    "c10_goal : occ p0 (Z_bnode p t1 t'2)",
                    "c10_H3 : occ p0 t2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c8_goal : occ p (Z_bnode p t1 t'2)",
                    "c2_t1 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c9_goal : occ p0 (Z_bnode p t1 t'2)",
                    "c9_H3 : occ p0 t1",
                    "c7_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c10_goal : occ p0 (Z_bnode p t1 t'2)",
                    "c2_H1 : INSERT n t2 t'2"
                ],
                "tactic_res": [
                    "c11_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), occ p0 (Z_bnode p t1 t'2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c11_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), occ p0 (Z_bnode p t1 t'2)",
                    "c10_H3 : occ p0 t2",
                    "c7_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "constructor 3 .",
                "tactic_sig_no_out_arg": "constructor 3 .",
                "tactic_args": [
                    "c4_goal : occ n (Z_bnode p t1 t'2)"
                ],
                "tactic_res": [
                    "c12_goal : occ n t'2"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c12_goal : occ n t'2",
                    "c2_H1 : INSERT n t2 t'2"
                ],
                "tactic_res": [
                    "c13_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), occ n t'2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c13_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), occ n t'2",
                    "c2_t2 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t'2)),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)"
                ],
                "tactic_res": [
                    "c14_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_p0 : Z",
                    "c14_H2 : occ p0 (Z_bnode p t1 t'2)"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c14_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_H2 : occ p0 (Z_bnode p t1 t'2)"
                ],
                "tactic_res": [
                    "c15_goal : or (occ p (Z_bnode p t1 t2)) (eq n p)",
                    "c16_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c16_H3 : occ p0 t1",
                    "c17_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c17_H3 : occ p0 t'2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c15_goal : or (occ p (Z_bnode p t1 t2)) (eq n p)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c16_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c16_H3 : occ p0 t1",
                    "c14_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c17_goal : or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c2_H1 : INSERT n t2 t'2"
                ],
                "tactic_res": [
                    "c18_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), or (occ p0 (Z_bnode p t1 t2)) (eq n p0)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros H4 H5 H6 .",
                "tactic_args": [
                    "c18_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), or (occ p0 (Z_bnode p t1 t2)) (eq n p0)"
                ],
                "tactic_res": [
                    "c19_goal : forall _ : search_tree t'2, or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c19_H4 : forall (p : Z) (_ : occ p t2), occ p t'2",
                    "c19_H5 : occ n t'2",
                    "c19_H6 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i ) .",
                "tactic_args": [
                    "c19_goal : forall _ : search_tree t'2, or (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c19_H6 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)",
                    "c14_p0 : Z"
                ],
                "tactic_res": [
                    "c20_goal : forall (_ : occ p0 t2) (_ : search_tree t'2),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c21_goal : forall (_ : eq n p0) (_ : search_tree t'2),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c22_goal : occ p0 t'2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c20_goal : forall (_ : occ p0 t2) (_ : search_tree t'2),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c21_goal : forall (_ : eq n p0) (_ : search_tree t'2),\nor (occ p0 (Z_bnode p t1 t2)) (eq n p0)",
                    "c14_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t'2 : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : occ p0 t'2",
                    "c17_H3 : occ p0 t'2",
                    "c14_p0 : Z",
                    "c2_t'2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode p t1 t'2)",
                    "c2_H1 : INSERT n t2 t'2"
                ],
                "tactic_res": [
                    "c23_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), search_tree (Z_bnode p t1 t'2)"
                ]
            },
            {
                "tactic_sig": "constructor 2 .",
                "tactic_sig_no_out_arg": "constructor 2 .",
                "tactic_args": [
                    "c23_goal : forall (_ : forall (p : Z) (_ : occ p t2), occ p t'2) \n  (_ : occ n t'2)\n  (_ : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p))\n  (_ : search_tree t'2), search_tree (Z_bnode p t1 t'2)"
                ],
                "tactic_res": [
                    "c24_goal : search_tree t1",
                    "c24_H5 : search_tree t'2",
                    "c24_H4 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)",
                    "c24_H3 : occ n t'2",
                    "c24_H2 : forall (p : Z) (_ : occ p t2), occ p t'2",
                    "c25_goal : search_tree t'2",
                    "c25_H5 : search_tree t'2",
                    "c25_H4 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)",
                    "c25_H3 : occ n t'2",
                    "c25_H2 : forall (p : Z) (_ : occ p t2), occ p t'2",
                    "c26_goal : maj p t1",
                    "c26_H5 : search_tree t'2",
                    "c26_H4 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)",
                    "c26_H3 : occ n t'2",
                    "c26_H2 : forall (p : Z) (_ : occ p t2), occ p t'2",
                    "c27_goal : min p t'2",
                    "c27_H5 : search_tree t'2",
                    "c27_H4 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)",
                    "c27_H3 : occ n t'2",
                    "c27_H2 : forall (p : Z) (_ : occ p t2), occ p t'2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c25_goal : search_tree t'2",
                    "c25_H5 : search_tree t'2",
                    "c2_t'2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eapply _i .",
                "tactic_sig_no_out_arg": "eapply _i .",
                "tactic_args": [
                    "c24_goal : search_tree t1",
                    "_global_search_tree_l : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       search_tree t1"
                ],
                "tactic_res": [
                    "c28_goal : search_tree (Z_bnode ?n t1 ?t2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c28_goal : search_tree (Z_bnode ?n t1 ?t2)",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c26_goal : maj p t1"
                ],
                "tactic_res": [
                    "c29_goal : forall (z' : Z) (_ : occ z' t1), Z.lt z' p"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c29_goal : forall (z' : Z) (_ : occ z' t1), Z.lt z' p"
                ],
                "tactic_res": [
                    "c30_goal : Z.lt z' p",
                    "c30_z' : Z",
                    "c30_H6 : occ z' t1"
                ]
            },
            {
                "tactic_sig": "elim ( maj_l _i ) .",
                "tactic_sig_no_out_arg": "elim ( maj_l _i ) .",
                "tactic_args": [
                    "c30_goal : Z.lt z' p",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)"
                ],
                "tactic_res": [
                    "c31_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' p, Z.lt z' p"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c31_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' p, Z.lt z' p",
                    "c30_H6 : occ z' t1",
                    "c30_z' : Z",
                    "c2_t1 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c27_goal : min p t'2"
                ],
                "tactic_res": [
                    "c32_goal : forall (z' : Z) (_ : occ z' t'2), Z.lt p z'"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q H6 .",
                "tactic_args": [
                    "c32_goal : forall (z' : Z) (_ : occ z' t'2), Z.lt p z'"
                ],
                "tactic_res": [
                    "c33_goal : Z.lt p q",
                    "c33_q : Z",
                    "c33_H6 : occ q t'2"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i _i ) .",
                "tactic_args": [
                    "c33_goal : Z.lt p q",
                    "c27_H4 : forall (p : Z) (_ : occ p t'2), or (occ p t2) (eq n p)",
                    "c33_q : Z",
                    "c33_H6 : occ q t'2"
                ],
                "tactic_res": [
                    "c34_goal : forall _ : occ q t2, Z.lt p q",
                    "c35_goal : forall _ : eq n q, Z.lt p q"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c34_goal : forall _ : occ q t2, Z.lt p q"
                ],
                "tactic_res": [
                    "c36_goal : Z.lt p q",
                    "c36_H7 : occ q t2"
                ]
            },
            {
                "tactic_sig": "elim ( min_r _i ) .",
                "tactic_sig_no_out_arg": "elim ( min_r _i ) .",
                "tactic_args": [
                    "c36_goal : Z.lt p q",
                    "c2_H0 : search_tree (Z_bnode p t1 t2)"
                ],
                "tactic_res": [
                    "c37_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt p z', Z.lt p q"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c37_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt p z', Z.lt p q",
                    "c36_H7 : occ q t2",
                    "c33_q : Z",
                    "c2_t2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c35_goal : forall _ : eq n q, Z.lt p q"
                ],
                "tactic_res": [
                    "c38_goal : Z.lt p q",
                    "c38_e : eq n q"
                ]
            },
            {
                "tactic_sig": "subst _i .",
                "tactic_sig_no_out_arg": "subst _i .",
                "tactic_args": [
                    "c38_goal : Z.lt p q",
                    "c33_q : Z",
                    "c38_e : eq n q"
                ],
                "tactic_res": [
                    "c39_goal : Z.lt p n",
                    "c39_H6 : occ n t'2"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c39_goal : Z.lt p n",
                    "_global_Z.gt_lt : forall (n m : Z) (_ : Z.gt n m), Z.lt m n"
                ],
                "tactic_res": [
                    "c40_goal : Z.gt n p"
                ]
            },
            {
                "tactic_sig": "assumption .",
                "tactic_sig_no_out_arg": "assumption .",
                "tactic_args": [
                    "c40_goal : Z.gt n p",
                    "c2_H : Z.gt n p",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "insert_eq",
        "proof": [
            {
                "tactic_sig": "Lemma insert_eq : forall ( n : Z ) ( t1 t2 : Z_btree ) , search_tree ( Z_bnode n t1 t2 ) -> INSERT n ( Z_bnode n t1 t2 ) ( Z_bnode n t1 t2 ) .",
                "tactic_sig_no_out_arg": "Lemma insert_eq : forall ( n : Z ) ( t1 t2 : Z_btree ) , search_tree ( Z_bnode n t1 t2 ) -> INSERT n ( Z_bnode n t1 t2 ) ( Z_bnode n t1 t2 ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\nINSERT n (Z_bnode n t1 t2) (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c1_goal : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\nINSERT n (Z_bnode n t1 t2) (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c2_goal : INSERT n (Z_bnode n t1 t2) (Z_bnode n t1 t2)",
                    "c2_n : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_H : search_tree (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c2_goal : INSERT n (Z_bnode n t1 t2) (Z_bnode n t1 t2)",
                    "c2_H : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "insert",
        "proof": [
            {
                "tactic_sig": "Definition insert : forall ( n : Z ) ( t : Z_btree ) , insert_spec n t .",
                "tactic_sig_no_out_arg": "Definition insert : forall ( n : Z ) ( t : Z_btree ) , insert_spec n t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n : Z) (t : Z_btree), insert_spec n t"
                ]
            },
            {
                "tactic_sig": "refine ( fix insert ( n : Z ) ( t : Z_btree ) { struct t } : insert_spec n t := match t return insert_spec n t with | Z_leaf => fun s => exist _ ( Z_bnode n Z_leaf Z_leaf ) _ | Z_bnode p t1 t2 => fun s => match Z_le_gt_dec n p with | left h => match Z_le_lt_eq_dec n p h with | left _ => match insert n t1 _ with | exist _ t3 _ => exist _ ( Z_bnode p t3 t2 ) _ end | right _ => exist _ ( Z_bnode n t1 t2 ) _ end | right _ => match insert n t2 _ with | exist _ t3 _ => exist _ ( Z_bnode p t1 t3 ) _ end end end ) .",
                "tactic_sig_no_out_arg": "refine ( fix insert ( n : Z ) ( t : Z_btree ) { struct t } : insert_spec n t := match t return insert_spec n t with | Z_leaf => fun s => exist _ ( Z_bnode n Z_leaf Z_leaf ) _ | Z_bnode p t1 t2 => fun s => match Z_le_gt_dec n p with | left h => match Z_le_lt_eq_dec n p h with | left _ => match insert n t1 _ with | exist _ t3 _ => exist _ ( Z_bnode p t3 t2 ) _ end | right _ => exist _ ( Z_bnode n t1 t2 ) _ end | right _ => match insert n t2 _ with | exist _ t3 _ => exist _ ( Z_bnode p t1 t3 ) _ end end end ) .",
                "tactic_args": [
                    "c1_goal : forall (n : Z) (t : Z_btree), insert_spec n t"
                ],
                "tactic_res": [
                    "c2_goal : INSERT n Z_leaf (Z_bnode n Z_leaf Z_leaf)",
                    "c2_s : search_tree Z_leaf",
                    "c2_t : Z_btree",
                    "c2_n : Z",
                    "c2_insert : forall (n : Z) (t : Z_btree), insert_spec n t",
                    "c3_goal : search_tree t1",
                    "c3_l : Z.lt n p",
                    "c3_h : Z.le n p",
                    "c3_s : search_tree (Z_bnode p t1 t2)",
                    "c3_t2 : Z_btree",
                    "c3_t1 : Z_btree",
                    "c3_p : Z",
                    "c3_t : Z_btree",
                    "c3_n : Z",
                    "c3_insert : forall (n : Z) (t : Z_btree), insert_spec n t",
                    "c4_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t3 t2)",
                    "c4_i : INSERT n t1 t3",
                    "c4_t3 : Z_btree",
                    "c4_l : Z.lt n p",
                    "c4_h : Z.le n p",
                    "c4_s : search_tree (Z_bnode p t1 t2)",
                    "c4_t2 : Z_btree",
                    "c4_t1 : Z_btree",
                    "c4_p : Z",
                    "c4_t : Z_btree",
                    "c4_n : Z",
                    "c4_insert : forall (n : Z) (t : Z_btree), insert_spec n t",
                    "c5_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode n t1 t2)",
                    "c5_e : eq n p",
                    "c5_h : Z.le n p",
                    "c5_s : search_tree (Z_bnode p t1 t2)",
                    "c5_t2 : Z_btree",
                    "c5_t1 : Z_btree",
                    "c5_p : Z",
                    "c5_t : Z_btree",
                    "c5_n : Z",
                    "c5_insert : forall (n : Z) (t : Z_btree), insert_spec n t",
                    "c6_goal : search_tree t2",
                    "c6_g : Z.gt n p",
                    "c6_s : search_tree (Z_bnode p t1 t2)",
                    "c6_t2 : Z_btree",
                    "c6_t1 : Z_btree",
                    "c6_p : Z",
                    "c6_t : Z_btree",
                    "c6_n : Z",
                    "c6_insert : forall (n : Z) (t : Z_btree), insert_spec n t",
                    "c7_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t1 t3)",
                    "c7_i : INSERT n t2 t3",
                    "c7_t3 : Z_btree",
                    "c7_g : Z.gt n p",
                    "c7_s : search_tree (Z_bnode p t1 t2)",
                    "c7_t2 : Z_btree",
                    "c7_t1 : Z_btree",
                    "c7_p : Z",
                    "c7_t : Z_btree",
                    "c7_n : Z",
                    "c7_insert : forall (n : Z) (t : Z_btree), insert_spec n t"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c2_goal : INSERT n Z_leaf (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c3_goal : search_tree t1",
                    "c3_s : search_tree (Z_bnode p t1 t2)",
                    "c3_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c4_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t3 t2)",
                    "c4_i : INSERT n t1 t3",
                    "c4_t3 : Z_btree",
                    "c4_l : Z.lt n p",
                    "c4_s : search_tree (Z_bnode p t1 t2)",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c4_p : Z",
                    "c4_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c6_goal : search_tree t2",
                    "c6_s : search_tree (Z_bnode p t1 t2)",
                    "c6_t2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c7_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode p t1 t3)",
                    "c7_i : INSERT n t2 t3",
                    "c7_t3 : Z_btree",
                    "c7_g : Z.gt n p",
                    "c7_s : search_tree (Z_bnode p t1 t2)",
                    "c7_t1 : Z_btree",
                    "c7_t2 : Z_btree",
                    "c7_p : Z",
                    "c7_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c5_goal : INSERT n (Z_bnode p t1 t2) (Z_bnode n t1 t2)",
                    "c5_e : eq n p"
                ],
                "tactic_res": [
                    "c8_goal : INSERT p (Z_bnode p t1 t2) (Z_bnode p t1 t2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c8_goal : INSERT p (Z_bnode p t1 t2) (Z_bnode p t1 t2)",
                    "c5_s : search_tree (Z_bnode p t1 t2)",
                    "c5_t1 : Z_btree",
                    "c5_t2 : Z_btree",
                    "c5_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "list2tree_aux",
        "proof": [
            {
                "tactic_sig": "Definition list2tree_aux : forall ( l : list Z ) ( t : Z_btree ) , list2tree_aux_spec l t .",
                "tactic_sig_no_out_arg": "Definition list2tree_aux : forall ( l : list Z ) ( t : Z_btree ) , list2tree_aux_spec l t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (l : list Z) (t : Z_btree), list2tree_aux_spec l t"
                ]
            },
            {
                "tactic_sig": "refine ( fix list2tree_aux ( l : list Z ) : forall t : Z_btree , list2tree_aux_spec l t := fun t => match l return list2tree_aux_spec l t with | nil => fun s => exist _ t _ | cons p l' => fun s => match insert p ( t := t ) s with | exist _ t' _ => match list2tree_aux l' t' _ with | exist _ t'' _ => exist _ t'' _ end end end ) .",
                "tactic_sig_no_out_arg": "refine ( fix list2tree_aux ( l : list Z ) : forall t : Z_btree , list2tree_aux_spec l t := fun t => match l return list2tree_aux_spec l t with | nil => fun s => exist _ t _ | cons p l' => fun s => match insert p ( t := t ) s with | exist _ t' _ => match list2tree_aux l' t' _ with | exist _ t'' _ => exist _ t'' _ end end end ) .",
                "tactic_args": [
                    "c1_goal : forall (l : list Z) (t : Z_btree), list2tree_aux_spec l t"
                ],
                "tactic_res": [
                    "c2_goal : and (search_tree t)\n  (forall p : Z, iff (or (In p nil) (occ p t)) (occ p t))",
                    "c2_s : search_tree t",
                    "c2_t : Z_btree",
                    "c2_l : list Z",
                    "c2_list2tree_aux : forall (l : list Z) (t : Z_btree), list2tree_aux_spec l t",
                    "c3_goal : search_tree t'",
                    "c3_i : INSERT p t t'",
                    "c3_t' : Z_btree",
                    "c3_s : search_tree t",
                    "c3_l' : list Z",
                    "c3_p : Z",
                    "c3_t : Z_btree",
                    "c3_l : list Z",
                    "c3_list2tree_aux : forall (l : list Z) (t : Z_btree), list2tree_aux_spec l t",
                    "c4_goal : and (search_tree t'')\n  (forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t''))",
                    "c4_a : and (search_tree t'')\n  (forall p : Z, iff (or (In p l') (occ p t')) (occ p t''))",
                    "c4_t'' : Z_btree",
                    "c4_i : INSERT p t t'",
                    "c4_t' : Z_btree",
                    "c4_s : search_tree t",
                    "c4_l' : list Z",
                    "c4_p : Z",
                    "c4_t : Z_btree",
                    "c4_l : list Z",
                    "c4_list2tree_aux : forall (l : list Z) (t : Z_btree), list2tree_aux_spec l t"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c2_goal : and (search_tree t)\n  (forall p : Z, iff (or (In p nil) (occ p t)) (occ p t))"
                ],
                "tactic_res": [
                    "c5_goal : search_tree t",
                    "c6_goal : forall p : Z, iff (or (In p nil) (occ p t)) (occ p t)"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c5_goal : search_tree t",
                    "c2_s : search_tree t",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c6_goal : forall p : Z, iff (or (In p nil) (occ p t)) (occ p t)"
                ],
                "tactic_res": [
                    "c7_goal : forall _ : or (In p nil) (occ p t), occ p t",
                    "c7_p : Z",
                    "c8_goal : forall _ : occ p t, or (In p nil) (occ p t)",
                    "c8_p : Z"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c8_goal : forall _ : occ p t, or (In p nil) (occ p t)",
                    "c8_p : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "induction 1 .",
                "tactic_sig_no_out_arg": "induction 1 .",
                "tactic_args": [
                    "c7_goal : forall _ : or (In p nil) (occ p t), occ p t"
                ],
                "tactic_res": [
                    "c9_goal : occ p t",
                    "c9_H : In p nil",
                    "c10_goal : occ p t",
                    "c10_H : occ p t"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c10_goal : occ p t",
                    "c10_H : occ p t",
                    "c7_p : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "inversion _i .",
                "tactic_sig_no_out_arg": "inversion _i .",
                "tactic_args": [
                    "c9_goal : occ p t",
                    "c9_H : In p nil"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c3_goal : search_tree t'",
                    "c3_i : INSERT p t t'"
                ],
                "tactic_res": [
                    "c11_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t'), search_tree t'"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c11_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t'), search_tree t'",
                    "c3_t' : Z_btree",
                    "c3_p : Z",
                    "c3_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c4_goal : and (search_tree t'')\n  (forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t''))",
                    "c4_a : and (search_tree t'')\n  (forall p : Z, iff (or (In p l') (occ p t')) (occ p t''))"
                ],
                "tactic_res": [
                    "c12_goal : forall (_ : search_tree t'')\n  (_ : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')),\nand (search_tree t'')\n  (forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t''))"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c12_goal : forall (_ : search_tree t'')\n  (_ : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')),\nand (search_tree t'')\n  (forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t''))"
                ],
                "tactic_res": [
                    "c13_goal : and (search_tree t'')\n  (forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t''))",
                    "c13_H : search_tree t''",
                    "c13_H0 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c13_goal : and (search_tree t'')\n  (forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t''))"
                ],
                "tactic_res": [
                    "c14_goal : search_tree t''",
                    "c15_goal : forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c14_goal : search_tree t''",
                    "c13_H : search_tree t''",
                    "c4_t'' : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c15_goal : forall p0 : Z, iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')"
                ],
                "tactic_res": [
                    "c16_goal : iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')",
                    "c16_p0 : Z"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c16_goal : iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')",
                    "c4_a : and (search_tree t'')\n  (forall p : Z, iff (or (In p l') (occ p t')) (occ p t''))"
                ],
                "tactic_res": [
                    "c17_goal : forall (_ : search_tree t'')\n  (_ : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')),\niff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c17_goal : forall (_ : search_tree t'')\n  (_ : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')),\niff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')"
                ],
                "tactic_res": [
                    "c18_goal : iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')",
                    "c18_H1 : search_tree t''",
                    "c18_H2 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c18_goal : iff (or (In p0 (cons p l')) (occ p0 t)) (occ p0 t'')"
                ],
                "tactic_res": [
                    "c19_goal : forall _ : or (In p0 (cons p l')) (occ p0 t), occ p0 t''",
                    "c20_goal : forall _ : occ p0 t'', or (In p0 (cons p l')) (occ p0 t)"
                ]
            },
            {
                "tactic_sig": "destruct 1 as [ H3 | H3 ] .",
                "tactic_sig_no_out_arg": "destruct 1 as [ H3 | H3 ] .",
                "tactic_args": [
                    "c19_goal : forall _ : or (In p0 (cons p l')) (occ p0 t), occ p0 t''",
                    "c18_H2 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')",
                    "c18_H1 : search_tree t''",
                    "c16_p0 : Z",
                    "c13_H0 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')",
                    "c13_H : search_tree t''",
                    "c4_a : and (search_tree t'')\n  (forall p : Z, iff (or (In p l') (occ p t')) (occ p t''))",
                    "c4_t'' : Z_btree",
                    "c4_i : INSERT p t t'",
                    "c4_s : search_tree t",
                    "c4_l' : list Z",
                    "c4_p : Z",
                    "c4_t : Z_btree",
                    "c4_l : list Z",
                    "c4_list2tree_aux : forall (l : list Z) (t : Z_btree), list2tree_aux_spec l t"
                ],
                "tactic_res": [
                    "c21_goal : occ p0 t''",
                    "c21_H3 : In p0 (cons p l')",
                    "c22_goal : occ p0 t''",
                    "c22_H3 : occ p0 t"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c21_goal : occ p0 t''",
                    "c21_H3 : In p0 (cons p l')"
                ],
                "tactic_res": [
                    "c23_goal : forall _ : eq p p0, occ p0 t''",
                    "c24_goal : forall _ : In p0 l', occ p0 t''"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c23_goal : forall _ : eq p p0, occ p0 t''"
                ],
                "tactic_res": [
                    "c25_goal : occ p0 t''",
                    "c25_e : eq p p0"
                ]
            },
            {
                "tactic_sig": "rewrite <- _i .",
                "tactic_sig_no_out_arg": "rewrite <- _i .",
                "tactic_args": [
                    "c25_goal : occ p0 t''",
                    "c25_e : eq p p0"
                ],
                "tactic_res": [
                    "c26_goal : occ p t''"
                ]
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c26_goal : occ p t''",
                    "c18_H2 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')",
                    "c4_p : Z"
                ],
                "tactic_res": [
                    "c27_goal : forall (_ : forall _ : or (In p l') (occ p t'), occ p t'')\n  (_ : forall _ : occ p t'', or (In p l') (occ p t')), \nocc p t''"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c27_goal : forall (_ : forall _ : or (In p l') (occ p t'), occ p t'')\n  (_ : forall _ : occ p t'', or (In p l') (occ p t')), \nocc p t''"
                ],
                "tactic_res": [
                    "c28_goal : occ p t''",
                    "c28_H4 : forall _ : or (In p l') (occ p t'), occ p t''",
                    "c28_H5 : forall _ : occ p t'', or (In p l') (occ p t')"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c28_goal : occ p t''",
                    "c28_H4 : forall _ : or (In p l') (occ p t'), occ p t''"
                ],
                "tactic_res": [
                    "c29_goal : or (In p l') (occ p t')"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c29_goal : or (In p l') (occ p t')"
                ],
                "tactic_res": [
                    "c30_goal : occ p t'"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c30_goal : occ p t'",
                    "c4_i : INSERT p t t'"
                ],
                "tactic_res": [
                    "c31_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t'), occ p t'"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c31_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t'), occ p t'",
                    "c4_t' : Z_btree",
                    "c4_p : Z",
                    "c4_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c24_goal : forall _ : In p0 l', occ p0 t''",
                    "c18_H2 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')",
                    "c16_p0 : Z"
                ],
                "tactic_res": [
                    "c32_goal : forall (_ : forall _ : or (In p0 l') (occ p0 t'), occ p0 t'')\n  (_ : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')) \n  (_ : In p0 l'), occ p0 t''"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c32_goal : forall (_ : forall _ : or (In p0 l') (occ p0 t'), occ p0 t'')\n  (_ : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')) \n  (_ : In p0 l'), occ p0 t''",
                    "c16_p0 : Z",
                    "c4_t'' : Z_btree",
                    "c4_t' : Z_btree",
                    "c4_l' : list Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c22_goal : occ p0 t''",
                    "c18_H2 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')",
                    "c16_p0 : Z"
                ],
                "tactic_res": [
                    "c33_goal : forall (_ : forall _ : or (In p0 l') (occ p0 t'), occ p0 t'')\n  (_ : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')), \nocc p0 t''"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros H4 H5 .",
                "tactic_args": [
                    "c33_goal : forall (_ : forall _ : or (In p0 l') (occ p0 t'), occ p0 t'')\n  (_ : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')), \nocc p0 t''"
                ],
                "tactic_res": [
                    "c34_goal : occ p0 t''",
                    "c34_H4 : forall _ : or (In p0 l') (occ p0 t'), occ p0 t''",
                    "c34_H5 : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c34_goal : occ p0 t''",
                    "c34_H4 : forall _ : or (In p0 l') (occ p0 t'), occ p0 t''"
                ],
                "tactic_res": [
                    "c35_goal : or (In p0 l') (occ p0 t')"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c35_goal : or (In p0 l') (occ p0 t')"
                ],
                "tactic_res": [
                    "c36_goal : occ p0 t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c36_goal : occ p0 t'",
                    "c4_i : INSERT p t t'"
                ],
                "tactic_res": [
                    "c37_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t'), occ p0 t'"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c37_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t'), occ p0 t'",
                    "c22_H3 : occ p0 t",
                    "c16_p0 : Z",
                    "c4_t' : Z_btree",
                    "c4_p : Z",
                    "c4_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c20_goal : forall _ : occ p0 t'', or (In p0 (cons p l')) (occ p0 t)"
                ],
                "tactic_res": [
                    "c38_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c38_H3 : occ p0 t''"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c38_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c4_a : and (search_tree t'')\n  (forall p : Z, iff (or (In p l') (occ p t')) (occ p t''))"
                ],
                "tactic_res": [
                    "c39_goal : forall (_ : search_tree t'')\n  (_ : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')),\nor (In p0 (cons p l')) (occ p0 t)"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros H4 H5 .",
                "tactic_args": [
                    "c39_goal : forall (_ : search_tree t'')\n  (_ : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')),\nor (In p0 (cons p l')) (occ p0 t)"
                ],
                "tactic_res": [
                    "c40_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c40_H4 : search_tree t''",
                    "c40_H5 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')"
                ]
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c40_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c40_H5 : forall p : Z, iff (or (In p l') (occ p t')) (occ p t'')",
                    "c16_p0 : Z"
                ],
                "tactic_res": [
                    "c41_goal : forall (_ : forall _ : or (In p0 l') (occ p0 t'), occ p0 t'')\n  (_ : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')),\nor (In p0 (cons p l')) (occ p0 t)"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros H6 H7 .",
                "tactic_args": [
                    "c41_goal : forall (_ : forall _ : or (In p0 l') (occ p0 t'), occ p0 t'')\n  (_ : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')),\nor (In p0 (cons p l')) (occ p0 t)"
                ],
                "tactic_res": [
                    "c42_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c42_H6 : forall _ : or (In p0 l') (occ p0 t'), occ p0 t''",
                    "c42_H7 : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')"
                ]
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c42_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c42_H7 : forall _ : occ p0 t'', or (In p0 l') (occ p0 t')",
                    "c38_H3 : occ p0 t''"
                ],
                "tactic_res": [
                    "c43_goal : forall _ : In p0 l', or (In p0 (cons p l')) (occ p0 t)",
                    "c44_goal : forall _ : occ p0 t', or (In p0 (cons p l')) (occ p0 t)"
                ]
            },
            {
                "tactic_sig": "left .",
                "tactic_sig_no_out_arg": "left .",
                "tactic_args": [
                    "c43_goal : forall _ : In p0 l', or (In p0 (cons p l')) (occ p0 t)"
                ],
                "tactic_res": [
                    "c45_goal : In p0 (cons p l')",
                    "c45_H8 : In p0 l'"
                ]
            },
            {
                "tactic_sig": "cbn .",
                "tactic_sig_no_out_arg": "cbn .",
                "tactic_args": [
                    "c45_goal : In p0 (cons p l')"
                ],
                "tactic_res": [
                    "c46_goal : or (eq p p0) (In p0 l')"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c46_goal : or (eq p p0) (In p0 l')",
                    "c45_H8 : In p0 l'",
                    "c16_p0 : Z",
                    "c4_l' : list Z",
                    "c4_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c44_goal : forall _ : occ p0 t', or (In p0 (cons p l')) (occ p0 t)",
                    "c4_i : INSERT p t t'"
                ],
                "tactic_res": [
                    "c47_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t') (_ : occ p0 t'),\nor (In p0 (cons p l')) (occ p0 t)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H8 H9 H10 H11 H12 .",
                "tactic_args": [
                    "c47_goal : forall (_ : forall (p : Z) (_ : occ p t), occ p t') \n  (_ : occ p t')\n  (_ : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0))\n  (_ : search_tree t') (_ : occ p0 t'),\nor (In p0 (cons p l')) (occ p0 t)"
                ],
                "tactic_res": [
                    "c48_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c48_H8 : forall (p : Z) (_ : occ p t), occ p t'",
                    "c48_H9 : occ p t'",
                    "c48_H10 : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0)",
                    "c48_H11 : search_tree t'",
                    "c48_H12 : occ p0 t'"
                ]
            },
            {
                "tactic_sig": "case ( _i _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i _i ) .",
                "tactic_args": [
                    "c48_goal : or (In p0 (cons p l')) (occ p0 t)",
                    "c48_H10 : forall (p0 : Z) (_ : occ p0 t'), or (occ p0 t) (eq p p0)",
                    "c16_p0 : Z",
                    "c48_H12 : occ p0 t'"
                ],
                "tactic_res": [
                    "c49_goal : forall _ : occ p0 t, or (In p0 (cons p l')) (occ p0 t)",
                    "c50_goal : forall _ : eq p p0, or (In p0 (cons p l')) (occ p0 t)"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c49_goal : forall _ : occ p0 t, or (In p0 (cons p l')) (occ p0 t)",
                    "c16_p0 : Z",
                    "c4_l' : list Z",
                    "c4_p : Z",
                    "c4_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "induction 1 .",
                "tactic_sig_no_out_arg": "induction 1 .",
                "tactic_args": [
                    "c50_goal : forall _ : eq p p0, or (In p0 (cons p l')) (occ p0 t)"
                ],
                "tactic_res": [
                    "c51_goal : or (In p (cons p l')) (occ p t)",
                    "c51_H12 : occ p t'",
                    "c51_H7 : forall _ : occ p t'', or (In p l') (occ p t')",
                    "c51_H6 : forall _ : or (In p l') (occ p t'), occ p t''",
                    "c51_H3 : occ p t''"
                ]
            },
            {
                "tactic_sig": "cbn .",
                "tactic_sig_no_out_arg": "cbn .",
                "tactic_args": [
                    "c51_goal : or (In p (cons p l')) (occ p t)"
                ],
                "tactic_res": [
                    "c52_goal : or (or (eq p p) (In p l')) (occ p t)"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c52_goal : or (or (eq p p) (In p l')) (occ p t)",
                    "c4_l' : list Z",
                    "c4_p : Z",
                    "c4_t : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "list2tree",
        "proof": [
            {
                "tactic_sig": "Definition list2tree : forall l : list Z , list2tree_spec l .",
                "tactic_sig_no_out_arg": "Definition list2tree : forall l : list Z , list2tree_spec l .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall l : list Z, list2tree_spec l"
                ]
            },
            {
                "tactic_sig": "refine ( fun l => match list2tree_aux l ( t := Z_leaf ) _ with | exist _ t _ => exist _ t _ end ) .",
                "tactic_sig_no_out_arg": "refine ( fun l => match list2tree_aux l ( t := Z_leaf ) _ with | exist _ t _ => exist _ t _ end ) .",
                "tactic_args": [
                    "c1_goal : forall l : list Z, list2tree_spec l"
                ],
                "tactic_res": [
                    "c2_goal : search_tree Z_leaf",
                    "c2_l : list Z",
                    "c3_goal : and (search_tree t) (forall p : Z, iff (In p l) (occ p t))",
                    "c3_a : and (search_tree t)\n  (forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t))",
                    "c3_t : Z_btree",
                    "c3_l : list Z"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c2_goal : search_tree Z_leaf"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c3_goal : and (search_tree t) (forall p : Z, iff (In p l) (occ p t))",
                    "c3_a : and (search_tree t)\n  (forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t))"
                ],
                "tactic_res": [
                    "c4_goal : forall (_ : search_tree t)\n  (_ : forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t)),\nand (search_tree t) (forall p : Z, iff (In p l) (occ p t))"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c4_goal : forall (_ : search_tree t)\n  (_ : forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t)),\nand (search_tree t) (forall p : Z, iff (In p l) (occ p t))"
                ],
                "tactic_res": [
                    "c5_goal : search_tree t",
                    "c5_H0 : forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t)",
                    "c5_H : search_tree t",
                    "c6_goal : forall p : Z, iff (In p l) (occ p t)",
                    "c6_H0 : forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t)",
                    "c6_H : search_tree t"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c5_goal : search_tree t",
                    "c5_H : search_tree t",
                    "c3_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro p .",
                "tactic_args": [
                    "c6_goal : forall p : Z, iff (In p l) (occ p t)"
                ],
                "tactic_res": [
                    "c7_goal : iff (In p l) (occ p t)",
                    "c7_p : Z"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c7_goal : iff (In p l) (occ p t)"
                ],
                "tactic_res": [
                    "c8_goal : forall _ : In p l, occ p t",
                    "c9_goal : forall _ : occ p t, In p l"
                ]
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c8_goal : forall _ : In p l, occ p t",
                    "c6_H0 : forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t)",
                    "c7_p : Z"
                ],
                "tactic_res": [
                    "c10_goal : forall (_ : forall _ : or (In p l) (occ p Z_leaf), occ p t)\n  (_ : forall _ : occ p t, or (In p l) (occ p Z_leaf)) \n  (_ : In p l), occ p t"
                ]
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c9_goal : forall _ : occ p t, In p l",
                    "c6_H0 : forall p : Z, iff (or (In p l) (occ p Z_leaf)) (occ p t)",
                    "c7_p : Z"
                ],
                "tactic_res": [
                    "c11_goal : forall (_ : forall _ : or (In p l) (occ p Z_leaf), occ p t)\n  (_ : forall _ : occ p t, or (In p l) (occ p Z_leaf)) \n  (_ : occ p t), In p l"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c10_goal : forall (_ : forall _ : or (In p l) (occ p Z_leaf), occ p t)\n  (_ : forall _ : occ p t, or (In p l) (occ p Z_leaf)) \n  (_ : In p l), occ p t",
                    "c7_p : Z",
                    "c3_t : Z_btree",
                    "c3_l : list Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros H1 H2 H3 .",
                "tactic_args": [
                    "c11_goal : forall (_ : forall _ : or (In p l) (occ p Z_leaf), occ p t)\n  (_ : forall _ : occ p t, or (In p l) (occ p Z_leaf)) \n  (_ : occ p t), In p l"
                ],
                "tactic_res": [
                    "c12_goal : In p l",
                    "c12_H1 : forall _ : or (In p l) (occ p Z_leaf), occ p t",
                    "c12_H2 : forall _ : occ p t, or (In p l) (occ p Z_leaf)",
                    "c12_H3 : occ p t"
                ]
            },
            {
                "tactic_sig": "case ( _i _i ) .",
                "tactic_sig_no_out_arg": "case ( _i _i ) .",
                "tactic_args": [
                    "c12_goal : In p l",
                    "c12_H2 : forall _ : occ p t, or (In p l) (occ p Z_leaf)",
                    "c12_H3 : occ p t"
                ],
                "tactic_res": [
                    "c13_goal : forall _ : In p l, In p l",
                    "c14_goal : forall _ : occ p Z_leaf, In p l"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c13_goal : forall _ : In p l, In p l",
                    "c7_p : Z",
                    "c3_l : list Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "inversion 1 .",
                "tactic_sig_no_out_arg": "inversion 1 .",
                "tactic_args": [
                    "c14_goal : forall _ : occ p Z_leaf, In p l"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_leaf_leaf",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_leaf_leaf : forall n : Z , RMAX ( Z_bnode n Z_leaf Z_leaf ) Z_leaf n .",
                "tactic_sig_no_out_arg": "Lemma rmax_leaf_leaf : forall n : Z , RMAX ( Z_bnode n Z_leaf Z_leaf ) Z_leaf n .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall n : Z, RMAX (Z_bnode n Z_leaf Z_leaf) Z_leaf n"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro n .",
                "tactic_args": [
                    "c1_goal : forall n : Z, RMAX (Z_bnode n Z_leaf Z_leaf) Z_leaf n"
                ],
                "tactic_res": [
                    "c2_goal : RMAX (Z_bnode n Z_leaf Z_leaf) Z_leaf n",
                    "c2_n : Z"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c2_goal : RMAX (Z_bnode n Z_leaf Z_leaf) Z_leaf n"
                ],
                "tactic_res": [
                    "c3_goal : occ n (Z_bnode n Z_leaf Z_leaf)",
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)), Z.le p n",
                    "c5_goal : forall (q : Z) (_ : occ q Z_leaf), occ q (Z_bnode n Z_leaf Z_leaf)",
                    "c6_goal : forall (q : Z) (_ : occ q (Z_bnode n Z_leaf Z_leaf)),\nor (occ q Z_leaf) (eq n q)",
                    "c7_goal : not (occ n Z_leaf)",
                    "c8_goal : search_tree Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : occ n (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : forall (q : Z) (_ : occ q Z_leaf), occ q (Z_bnode n Z_leaf Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : not (occ n Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c8_goal : search_tree Z_leaf"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)), Z.le p n"
                ],
                "tactic_res": [
                    "c9_goal : Z.le p n",
                    "c9_p : Z",
                    "c9_H : occ p (Z_bnode n Z_leaf Z_leaf)"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c9_goal : Z.le p n",
                    "c9_H : occ p (Z_bnode n Z_leaf Z_leaf)"
                ],
                "tactic_res": [
                    "c10_goal : Z.le n n",
                    "c11_goal : Z.le p n",
                    "c11_H0 : occ p Z_leaf",
                    "c12_goal : Z.le p n",
                    "c12_H0 : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c10_goal : Z.le n n",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i Z_leaf ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i Z_leaf ) .",
                "tactic_args": [
                    "c11_goal : Z.le p n",
                    "c9_p : Z"
                ],
                "tactic_res": [
                    "c13_goal : not (occ p Z_leaf)",
                    "c14_goal : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c13_goal : not (occ p Z_leaf)",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c14_goal : occ p Z_leaf",
                    "c11_H0 : occ p Z_leaf",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i Z_leaf ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i Z_leaf ) .",
                "tactic_args": [
                    "c12_goal : Z.le p n",
                    "c9_p : Z"
                ],
                "tactic_res": [
                    "c15_goal : not (occ p Z_leaf)",
                    "c16_goal : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c15_goal : not (occ p Z_leaf)",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c16_goal : occ p Z_leaf",
                    "c12_H0 : occ p Z_leaf",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "inversion_clear 1 .",
                "tactic_sig_no_out_arg": "inversion_clear 1 .",
                "tactic_args": [
                    "c6_goal : forall (q : Z) (_ : occ q (Z_bnode n Z_leaf Z_leaf)),\nor (occ q Z_leaf) (eq n q)"
                ],
                "tactic_res": [
                    "c17_goal : or (occ n Z_leaf) (eq n n)",
                    "c17_q : Z",
                    "c18_goal : or (occ q Z_leaf) (eq n q)",
                    "c18_H0 : occ q Z_leaf",
                    "c18_q : Z",
                    "c19_goal : or (occ q Z_leaf) (eq n q)",
                    "c19_H0 : occ q Z_leaf",
                    "c19_q : Z"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c17_goal : or (occ n Z_leaf) (eq n n)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c18_goal : or (occ q Z_leaf) (eq n q)",
                    "c18_H0 : occ q Z_leaf",
                    "c2_n : Z",
                    "c18_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : or (occ q Z_leaf) (eq n q)",
                    "c19_H0 : occ q Z_leaf",
                    "c2_n : Z",
                    "c19_q : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_t_Z_leaf",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_t_Z_leaf : forall ( t : Z_btree ) ( n : Z ) , search_tree ( Z_bnode n t Z_leaf ) -> RMAX ( Z_bnode n t Z_leaf ) t n .",
                "tactic_sig_no_out_arg": "Lemma rmax_t_Z_leaf : forall ( t : Z_btree ) ( n : Z ) , search_tree ( Z_bnode n t Z_leaf ) -> RMAX ( Z_bnode n t Z_leaf ) t n .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (t : Z_btree) (n : Z) (_ : search_tree (Z_bnode n t Z_leaf)),\nRMAX (Z_bnode n t Z_leaf) t n"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros t n H .",
                "tactic_args": [
                    "c1_goal : forall (t : Z_btree) (n : Z) (_ : search_tree (Z_bnode n t Z_leaf)),\nRMAX (Z_bnode n t Z_leaf) t n"
                ],
                "tactic_res": [
                    "c2_goal : RMAX (Z_bnode n t Z_leaf) t n",
                    "c2_t : Z_btree",
                    "c2_n : Z",
                    "c2_H : search_tree (Z_bnode n t Z_leaf)"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c2_goal : RMAX (Z_bnode n t Z_leaf) t n"
                ],
                "tactic_res": [
                    "c3_goal : occ n (Z_bnode n t Z_leaf)",
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t Z_leaf)), Z.le p n",
                    "c5_goal : forall (q : Z) (_ : occ q t), occ q (Z_bnode n t Z_leaf)",
                    "c6_goal : forall (q : Z) (_ : occ q (Z_bnode n t Z_leaf)), or (occ q t) (eq n q)",
                    "c7_goal : not (occ n t)",
                    "c8_goal : search_tree t"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : occ n (Z_bnode n t Z_leaf)",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : forall (q : Z) (_ : occ q t), occ q (Z_bnode n t Z_leaf)",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H0 .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t Z_leaf)), Z.le p n"
                ],
                "tactic_res": [
                    "c9_goal : Z.le p n",
                    "c9_p : Z",
                    "c9_H0 : occ p (Z_bnode n t Z_leaf)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c9_goal : Z.le p n",
                    "c9_H0 : occ p (Z_bnode n t Z_leaf)"
                ],
                "tactic_res": [
                    "c10_goal : forall _ : eq n p, Z.le p n",
                    "c11_goal : forall _ : or (occ p t) (occ p Z_leaf), Z.le p n"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H1 .",
                "tactic_args": [
                    "c10_goal : forall _ : eq n p, Z.le p n"
                ],
                "tactic_res": [
                    "c12_goal : Z.le p n",
                    "c12_H1 : eq n p"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H1 .",
                "tactic_args": [
                    "c11_goal : forall _ : or (occ p t) (occ p Z_leaf), Z.le p n"
                ],
                "tactic_res": [
                    "c13_goal : Z.le p n",
                    "c13_H1 : or (occ p t) (occ p Z_leaf)"
                ]
            },
            {
                "tactic_sig": "subst _i .",
                "tactic_sig_no_out_arg": "subst _i .",
                "tactic_args": [
                    "c12_goal : Z.le p n",
                    "c9_p : Z",
                    "c12_H1 : eq n p"
                ],
                "tactic_res": [
                    "c14_goal : Z.le n n",
                    "c14_H0 : occ n (Z_bnode n t Z_leaf)"
                ]
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c14_goal : Z.le n n",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c13_goal : Z.le p n",
                    "c13_H1 : or (occ p t) (occ p Z_leaf)"
                ],
                "tactic_res": [
                    "c15_goal : forall _ : occ p t, Z.le p n",
                    "c16_goal : forall _ : occ p Z_leaf, Z.le p n"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c15_goal : forall _ : occ p t, Z.le p n"
                ],
                "tactic_res": [
                    "c17_goal : Z.le p n",
                    "c17_H2 : occ p t"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c16_goal : forall _ : occ p Z_leaf, Z.le p n"
                ],
                "tactic_res": [
                    "c18_goal : Z.le p n",
                    "c18_H2 : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c17_goal : Z.le p n",
                    "_global_Zlt_le_weak : forall (n m : Z) (_ : Z.lt n m), Z.le n m"
                ],
                "tactic_res": [
                    "c19_goal : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "elim ( maj_l _i ) .",
                "tactic_sig_no_out_arg": "elim ( maj_l _i ) .",
                "tactic_args": [
                    "c19_goal : Z.lt p n",
                    "c2_H : search_tree (Z_bnode n t Z_leaf)"
                ],
                "tactic_res": [
                    "c20_goal : forall _ : forall (z' : Z) (_ : occ z' t), Z.lt z' n, Z.lt p n"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c20_goal : forall _ : forall (z' : Z) (_ : occ z' t), Z.lt z' n, Z.lt p n",
                    "c17_H2 : occ p t",
                    "c9_p : Z",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i Z_leaf ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i Z_leaf ) .",
                "tactic_args": [
                    "c18_goal : Z.le p n",
                    "c9_p : Z"
                ],
                "tactic_res": [
                    "c21_goal : not (occ p Z_leaf)",
                    "c22_goal : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c21_goal : not (occ p Z_leaf)",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : occ p Z_leaf",
                    "c18_H2 : occ p Z_leaf",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q H1 .",
                "tactic_args": [
                    "c6_goal : forall (q : Z) (_ : occ q (Z_bnode n t Z_leaf)), or (occ q t) (eq n q)"
                ],
                "tactic_res": [
                    "c23_goal : or (occ q t) (eq n q)",
                    "c23_q : Z",
                    "c23_H1 : occ q (Z_bnode n t Z_leaf)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c23_goal : or (occ q t) (eq n q)",
                    "c23_H1 : occ q (Z_bnode n t Z_leaf)"
                ],
                "tactic_res": [
                    "c24_goal : forall _ : eq n q, or (occ q t) (eq n q)",
                    "c25_goal : forall _ : or (occ q t) (occ q Z_leaf), or (occ q t) (eq n q)"
                ]
            },
            {
                "tactic_sig": "intros _o .",
                "tactic_sig_no_out_arg": "intros H0 .",
                "tactic_args": [
                    "c24_goal : forall _ : eq n q, or (occ q t) (eq n q)"
                ],
                "tactic_res": [
                    "c26_goal : or (occ q t) (eq n q)",
                    "c26_H0 : eq n q"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c26_goal : or (occ q t) (eq n q)",
                    "c26_H0 : eq n q",
                    "c23_q : Z",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o .",
                "tactic_sig_no_out_arg": "intros H0 .",
                "tactic_args": [
                    "c25_goal : forall _ : or (occ q t) (occ q Z_leaf), or (occ q t) (eq n q)"
                ],
                "tactic_res": [
                    "c27_goal : or (occ q t) (eq n q)",
                    "c27_H0 : or (occ q t) (occ q Z_leaf)"
                ]
            },
            {
                "tactic_sig": "destruct _i as [  _o | _o ] .",
                "tactic_sig_no_out_arg": "destruct _i .",
                "tactic_args": [
                    "c27_goal : or (occ q t) (eq n q)",
                    "c27_H0 : or (occ q t) (occ q Z_leaf)",
                    "c23_H1 : occ q (Z_bnode n t Z_leaf)",
                    "c23_q : Z",
                    "c2_H : search_tree (Z_bnode n t Z_leaf)",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": [
                    "c28_goal : or (occ q t) (eq n q)",
                    "c28_H0 : occ q t",
                    "c29_goal : or (occ q t) (eq n q)",
                    "c29_H0 : occ q Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c28_goal : or (occ q t) (eq n q)",
                    "c28_H0 : occ q t",
                    "c23_q : Z",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "inversion _i .",
                "tactic_sig_no_out_arg": "inversion _i .",
                "tactic_args": [
                    "c29_goal : or (occ q t) (eq n q)",
                    "c29_H0 : occ q Z_leaf"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H' .",
                "tactic_args": [
                    "c7_goal : not (occ n t)"
                ],
                "tactic_res": [
                    "c30_goal : False",
                    "c30_H' : occ n t"
                ]
            },
            {
                "tactic_sig": "absurd ( occ _i Z_leaf ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i Z_leaf ) .",
                "tactic_args": [
                    "c30_goal : False",
                    "c2_n : Z"
                ],
                "tactic_res": [
                    "c31_goal : not (occ n Z_leaf)",
                    "c32_goal : occ n Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c31_goal : not (occ n Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "destruct ( not_left _i ( p := _i ) ) as [  | ] .",
                "tactic_sig_no_out_arg": "destruct ( not_left _i ( p := _i ) ) .",
                "tactic_args": [
                    "c32_goal : occ n Z_leaf",
                    "c2_H : search_tree (Z_bnode n t Z_leaf)",
                    "c2_n : Z",
                    "c30_H' : occ n t"
                ],
                "tactic_res": [
                    "c33_goal : Z.ge n n",
                    "c34_goal : occ n t"
                ]
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c33_goal : Z.ge n n",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c34_goal : occ n t",
                    "c30_H' : occ n t",
                    "c2_n : Z",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c8_goal : search_tree t",
                    "c2_H : search_tree (Z_bnode n t Z_leaf)",
                    "c2_t : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_1",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_1 : occ q ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) .",
                "tactic_sig_no_out_arg": "Lemma rmax_1 : occ q ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : occ q (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c1_goal : occ q (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c2_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), occ q (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c2_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), occ q (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_2",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_2 : n < p .",
                "tactic_sig_no_out_arg": "Lemma rmax_2 : n < p .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : Z.lt n p",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "elim ( min_r _i ) .",
                "tactic_sig_no_out_arg": "elim ( min_r _i ) .",
                "tactic_args": [
                    "c1_goal : Z.lt n p",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c2_goal : forall _ : forall (z' : Z) (_ : occ z' (Z_bnode p t2 t3)), Z.lt n z',\nZ.lt n p"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c2_goal : forall _ : forall (z' : Z) (_ : occ z' (Z_bnode p t2 t3)), Z.lt n z',\nZ.lt n p",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_3",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_3 : min n t' .",
                "tactic_sig_no_out_arg": "Lemma rmax_3 : min n t' .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : min n t'",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c1_goal : min n t'",
                    "_global_min_intro : forall (z : Z) (t : Z_btree)\n         (_ : forall (z' : Z) (_ : occ z' t), Z.lt z z'), \n       min z t"
                ],
                "tactic_res": [
                    "c2_goal : forall (z' : Z) (_ : occ z' t'), Z.lt n z'"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q' H .",
                "tactic_args": [
                    "c2_goal : forall (z' : Z) (_ : occ z' t'), Z.lt n z'"
                ],
                "tactic_res": [
                    "c3_goal : Z.lt n q'",
                    "c3_q' : Z",
                    "c3_H : occ q' t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c3_goal : Z.lt n q'",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c4_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), Z.lt n q'"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c4_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), Z.lt n q'"
                ],
                "tactic_res": [
                    "c5_goal : Z.lt n q'",
                    "c5_H0 : occ q (Z_bnode p t2 t3)",
                    "c5_H1 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                    "c5_H2 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                    "c5_H3 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                    "c5_H4 : not (occ q t')",
                    "c5_H5 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "elim ( min_r _i ) .",
                "tactic_sig_no_out_arg": "elim ( min_r _i ) .",
                "tactic_args": [
                    "c5_goal : Z.lt n q'",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c6_goal : forall _ : forall (z' : Z) (_ : occ z' (Z_bnode p t2 t3)), Z.lt n z',\nZ.lt n q'"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : forall _ : forall (z' : Z) (_ : occ z' (Z_bnode p t2 t3)), Z.lt n z',\nZ.lt n q'",
                    "c5_H2 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                    "c3_H : occ q' t'",
                    "c3_q' : Z",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_4",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_4 : search_tree ( Z_bnode n t1 t' ) .",
                "tactic_sig_no_out_arg": "Lemma rmax_4 : search_tree ( Z_bnode n t1 t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : search_tree (Z_bnode n t1 t')",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c1_goal : search_tree (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c2_goal : search_tree t1",
                    "c3_goal : search_tree t'",
                    "c4_goal : maj n t1",
                    "c5_goal : min n t'"
                ]
            },
            {
                "tactic_sig": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_sig_no_out_arg": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_args": [
                    "c2_goal : search_tree t1",
                    "_global_search_tree_l : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       search_tree t1",
                    "c1_n : Z",
                    "_global_Z_bnode : forall (_ : Z) (_ : Z_btree) (_ : Z_btree), Z_btree",
                    "c1_p : Z",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree"
                ],
                "tactic_res": [
                    "c6_goal : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c3_goal : search_tree t'",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c7_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), search_tree t'"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), search_tree t'",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_p : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with ( _i _i _i _i ) .",
                "tactic_sig_no_out_arg": "apply _i with ( _i _i _i _i ) .",
                "tactic_args": [
                    "c4_goal : maj n t1",
                    "_global_maj_l : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       maj n t1",
                    "_global_Z_bnode : forall (_ : Z) (_ : Z_btree) (_ : Z_btree), Z_btree",
                    "c1_p : Z",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree"
                ],
                "tactic_res": [
                    "c8_goal : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c8_goal : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : min n t'",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_5",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_5 : n < q .",
                "tactic_sig_no_out_arg": "Lemma rmax_5 : n < q .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : Z.lt n q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c1_goal : Z.lt n q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c2_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), Z.lt n q"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c2_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), Z.lt n q"
                ],
                "tactic_res": [
                    "c3_goal : Z.lt n q",
                    "c3_H : occ q (Z_bnode p t2 t3)",
                    "c3_H0 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                    "c3_H1 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                    "c3_H2 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                    "c3_H3 : not (occ q t')",
                    "c3_H4 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "apply _i with _i .",
                "tactic_sig_no_out_arg": "apply _i with _i .",
                "tactic_args": [
                    "c3_goal : Z.lt n q",
                    "_global_Z.lt_le_trans : forall (n m p : Z) (_ : Z.lt n m) (_ : Z.le m p), Z.lt n p",
                    "c1_p : Z"
                ],
                "tactic_res": [
                    "c4_goal : Z.lt n p",
                    "c5_goal : Z.le p q"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c4_goal : Z.lt n p",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : Z.le p q",
                    "c3_H0 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                    "c1_p : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_6",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_6 : forall p0 : Z , occ p0 ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) -> p0 <= q .",
                "tactic_sig_no_out_arg": "Lemma rmax_6 : forall p0 : Z , occ p0 ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) -> p0 <= q .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n t1 (Z_bnode p t2 t3))),\nZ.le p0 q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H .",
                "tactic_args": [
                    "c1_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n t1 (Z_bnode p t2 t3))),\nZ.le p0 q"
                ],
                "tactic_res": [
                    "c2_goal : Z.le p0 q",
                    "c2_p0 : Z",
                    "c2_H : occ p0 (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c2_goal : Z.le p0 q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c3_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), Z.le p0 q"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H0 H1 H2 H3 H4 H5 .",
                "tactic_args": [
                    "c3_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), Z.le p0 q"
                ],
                "tactic_res": [
                    "c4_goal : Z.le p0 q",
                    "c4_H0 : occ q (Z_bnode p t2 t3)",
                    "c4_H1 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                    "c4_H2 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                    "c4_H3 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                    "c4_H4 : not (occ q t')",
                    "c4_H5 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c4_goal : Z.le p0 q",
                    "c2_H : occ p0 (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c5_goal : forall _ : eq n p0, Z.le p0 q",
                    "c6_goal : forall _ : or (occ p0 t1) (occ p0 (Z_bnode p t2 t3)), Z.le p0 q"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H6 .",
                "tactic_args": [
                    "c5_goal : forall _ : eq n p0, Z.le p0 q"
                ],
                "tactic_res": [
                    "c7_goal : Z.le p0 q",
                    "c7_H6 : eq n p0"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H6 .",
                "tactic_args": [
                    "c6_goal : forall _ : or (occ p0 t1) (occ p0 (Z_bnode p t2 t3)), Z.le p0 q"
                ],
                "tactic_res": [
                    "c8_goal : Z.le p0 q",
                    "c8_H6 : or (occ p0 t1) (occ p0 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c7_goal : Z.le p0 q",
                    "c7_H6 : eq n p0"
                ],
                "tactic_res": [
                    "c9_goal : Z.le n q"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c9_goal : Z.le n q",
                    "_global_Zlt_le_weak : forall (n m : Z) (_ : Z.lt n m), Z.le n m"
                ],
                "tactic_res": [
                    "c10_goal : Z.lt n q"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "auto with searchtrees zarith .",
                "tactic_args": [
                    "c10_goal : Z.lt n q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_n : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c8_goal : Z.le p0 q",
                    "c8_H6 : or (occ p0 t1) (occ p0 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c11_goal : forall _ : occ p0 t1, Z.le p0 q",
                    "c12_goal : forall _ : occ p0 (Z_bnode p t2 t3), Z.le p0 q"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H7 .",
                "tactic_args": [
                    "c11_goal : forall _ : occ p0 t1, Z.le p0 q"
                ],
                "tactic_res": [
                    "c13_goal : Z.le p0 q",
                    "c13_H7 : occ p0 t1"
                ]
            },
            {
                "tactic_sig": "elim ( maj_l _i ) .",
                "tactic_sig_no_out_arg": "elim ( maj_l _i ) .",
                "tactic_args": [
                    "c13_goal : Z.le p0 q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c14_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, Z.le p0 q"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H7 .",
                "tactic_args": [
                    "c12_goal : forall _ : occ p0 (Z_bnode p t2 t3), Z.le p0 q"
                ],
                "tactic_res": [
                    "c15_goal : Z.le p0 q",
                    "c15_H7 : occ p0 (Z_bnode p t2 t3)"
                ]
            },
            {
                "tactic_sig": "elim ( maj_l _i ) .",
                "tactic_sig_no_out_arg": "elim ( maj_l _i ) .",
                "tactic_args": [
                    "c15_goal : Z.le p0 q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c16_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, Z.le p0 q"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H8 .",
                "tactic_args": [
                    "c14_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, Z.le p0 q"
                ],
                "tactic_res": [
                    "c17_goal : Z.le p0 q",
                    "c17_H8 : forall (z' : Z) (_ : occ z' t1), Z.lt z' n"
                ]
            },
            {
                "tactic_sig": "cut ( _i < _i ) .",
                "tactic_sig_no_out_arg": "cut ( _i < _i ) .",
                "tactic_args": [
                    "c17_goal : Z.le p0 q",
                    "c2_p0 : Z",
                    "c1_n : Z"
                ],
                "tactic_res": [
                    "c18_goal : forall _ : Z.lt p0 n, Z.le p0 q",
                    "c19_goal : Z.lt p0 n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : Z.lt p0 n",
                    "c17_H8 : forall (z' : Z) (_ : occ z' t1), Z.lt z' n",
                    "c13_H7 : occ p0 t1",
                    "c2_p0 : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c18_goal : forall _ : Z.lt p0 n, Z.le p0 q"
                ],
                "tactic_res": [
                    "c20_goal : Z.le p0 q",
                    "c20_H9 : Z.lt p0 n"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c20_goal : Z.le p0 q",
                    "_global_Zlt_le_weak : forall (n m : Z) (_ : Z.lt n m), Z.le n m"
                ],
                "tactic_res": [
                    "c21_goal : Z.lt p0 q"
                ]
            },
            {
                "tactic_sig": "apply _i with _i .",
                "tactic_sig_no_out_arg": "apply _i with _i .",
                "tactic_args": [
                    "c21_goal : Z.lt p0 q",
                    "_global_Z.lt_trans : forall (n m p : Z) (_ : Z.lt n m) (_ : Z.lt m p), Z.lt n p",
                    "c1_n : Z"
                ],
                "tactic_res": [
                    "c22_goal : Z.lt p0 n",
                    "c23_goal : Z.lt n q"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : Z.lt p0 n",
                    "c2_p0 : Z",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c23_goal : Z.lt n q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_n : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim ( min_r _i ) .",
                "tactic_sig_no_out_arg": "elim ( min_r _i ) .",
                "tactic_args": [
                    "c16_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, Z.le p0 q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c24_goal : forall (_ : forall (z' : Z) (_ : occ z' (Z_bnode p t2 t3)), Z.lt n z')\n  (_ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n), \nZ.le p0 q"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c24_goal : forall (_ : forall (z' : Z) (_ : occ z' (Z_bnode p t2 t3)), Z.lt n z')\n  (_ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n), \nZ.le p0 q",
                    "c15_H7 : occ p0 (Z_bnode p t2 t3)",
                    "c4_H1 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                    "c2_p0 : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_7",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_7 : forall q' : Z , occ q' ( Z_bnode n t1 t' ) -> occ q' ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) .",
                "tactic_sig_no_out_arg": "Lemma rmax_7 : forall q' : Z , occ q' ( Z_bnode n t1 t' ) -> occ q' ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (q' : Z) (_ : occ q' (Z_bnode n t1 t')),\nocc q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q' H .",
                "tactic_args": [
                    "c1_goal : forall (q' : Z) (_ : occ q' (Z_bnode n t1 t')),\nocc q' (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c2_q' : Z",
                    "c2_H : occ q' (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c2_H : occ q' (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c4_goal : forall _ : or (occ q' t1) (occ q' t'),\nocc q' (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H0 .",
                "tactic_args": [
                    "c3_goal : forall _ : eq n q', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c5_H0 : eq n q'"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H0 .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ q' t1) (occ q' t'),\nocc q' (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c6_H0 : or (occ q' t1) (occ q' t')"
                ]
            },
            {
                "tactic_sig": "custom_tac32 _i .",
                "tactic_sig_no_out_arg": "custom_tac32 _i .",
                "tactic_args": [
                    "c5_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c5_H0 : eq n q'"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "custom_tac32 _i .",
                "tactic_sig_no_out_arg": "custom_tac32 _i .",
                "tactic_args": [
                    "c6_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c6_H0 : or (occ q' t1) (occ q' t')"
                ],
                "tactic_res": [
                    "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H1 .",
                "tactic_args": [
                    "c7_goal : forall _ : occ q' t', occ q' (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c8_H1 : occ q' t'"
                ]
            },
            {
                "tactic_sig": "custom_tac32 _i .",
                "tactic_sig_no_out_arg": "custom_tac32 _i .",
                "tactic_args": [
                    "c8_goal : occ q' (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_8",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_8 : ~ occ q ( Z_bnode n t1 t' ) .",
                "tactic_sig_no_out_arg": "Lemma rmax_8 : ~ occ q ( Z_bnode n t1 t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : not (occ q (Z_bnode n t1 t'))",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro F .",
                "tactic_args": [
                    "c1_goal : not (occ q (Z_bnode n t1 t'))"
                ],
                "tactic_res": [
                    "c2_goal : False",
                    "c2_F : occ q (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "case ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "case ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : False",
                    "c2_F : occ q (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq n q, False",
                    "c4_goal : forall _ : or (occ q t1) (occ q t'), False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro eg .",
                "tactic_args": [
                    "c3_goal : forall _ : eq n q, False"
                ],
                "tactic_res": [
                    "c5_goal : False",
                    "c5_eg : eq n q"
                ]
            },
            {
                "tactic_sig": "absurd ( _i < _i ) .",
                "tactic_sig_no_out_arg": "absurd ( _i < _i ) .",
                "tactic_args": [
                    "c5_goal : False",
                    "c1_n : Z",
                    "c1_q : Z"
                ],
                "tactic_res": [
                    "c6_goal : not (Z.lt n q)",
                    "c7_goal : Z.lt n q"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c6_goal : not (Z.lt n q)",
                    "c5_eg : eq n q"
                ],
                "tactic_res": [
                    "c8_goal : not (Z.lt q q)"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c8_goal : not (Z.lt q q)",
                    "_global_Z.lt_irrefl : forall x : Z, not (Z.lt x x)"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : Z.lt n q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_n : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H1 .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ q t1) (occ q t'), False"
                ],
                "tactic_res": [
                    "c9_goal : False",
                    "c9_H1 : or (occ q t1) (occ q t')"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c9_goal : False",
                    "c9_H1 : or (occ q t1) (occ q t')"
                ],
                "tactic_res": [
                    "c10_goal : forall _ : occ q t1, False",
                    "c11_goal : forall _ : occ q t', False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c10_goal : forall _ : occ q t1, False"
                ],
                "tactic_res": [
                    "c12_goal : False",
                    "c12_H2 : occ q t1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c11_goal : forall _ : occ q t', False"
                ],
                "tactic_res": [
                    "c13_goal : False",
                    "c13_H2 : occ q t'"
                ]
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c12_goal : False",
                    "c1_q : Z",
                    "c1_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c14_goal : not (occ q t1)",
                    "c15_goal : occ q t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c15_goal : occ q t1",
                    "c12_H2 : occ q t1",
                    "c1_t1 : Z_btree",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_sig_no_out_arg": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_args": [
                    "c14_goal : not (occ q t1)",
                    "_global_not_left : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2))\n         (p : Z) (_ : Z.ge p n), not (occ p t1)",
                    "c1_n : Z",
                    "_global_Z_bnode : forall (_ : Z) (_ : Z_btree) (_ : Z_btree), Z_btree",
                    "c1_p : Z",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree"
                ],
                "tactic_res": [
                    "c16_goal : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c17_goal : Z.ge q n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c16_goal : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c17_goal : Z.ge q n",
                    "_global_Z.le_ge : forall (n m : Z) (_ : Z.le n m), Z.ge m n"
                ],
                "tactic_res": [
                    "c18_goal : Z.le n q"
                ]
            },
            {
                "tactic_sig": "custom_tac32 _i .",
                "tactic_sig_no_out_arg": "custom_tac32 _i .",
                "tactic_args": [
                    "c18_goal : Z.le n q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c13_goal : False",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c19_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), False"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c19_goal : forall (_ : occ q (Z_bnode p t2 t3))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\n       or (occ q0 t') (eq q q0)) (_ : not (occ q t'))\n  (_ : search_tree t'), False",
                    "c13_H2 : occ q t'",
                    "c1_t2 : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_p : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_9",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_9 : forall q0 : Z , occ q0 ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) -> occ q0 ( Z_bnode n t1 t' ) \\/ q = q0 .",
                "tactic_sig_no_out_arg": "Lemma rmax_9 : forall q0 : Z , occ q0 ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) -> occ q0 ( Z_bnode n t1 t' ) \\/ q = q0 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (q0 : Z) (_ : occ q0 (Z_bnode n t1 (Z_bnode p t2 t3))),\nor (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q0 H .",
                "tactic_args": [
                    "c1_goal : forall (q0 : Z) (_ : occ q0 (Z_bnode n t1 (Z_bnode p t2 t3))),\nor (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ],
                "tactic_res": [
                    "c2_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c2_q0 : Z",
                    "c2_H : occ q0 (Z_bnode n t1 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c2_H : occ q0 (Z_bnode n t1 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq n q0, or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c4_goal : forall _ : or (occ q0 t1) (occ q0 (Z_bnode p t2 t3)),\nor (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c3_goal : forall _ : eq n q0, or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ],
                "tactic_res": [
                    "c5_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c5_e : eq n q0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c5_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c5_e : eq n q0"
                ],
                "tactic_res": [
                    "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
                ]
            },
            {
                "tactic_sig": "custom_tac3 .",
                "tactic_sig_no_out_arg": "custom_tac3 .",
                "tactic_args": [
                    "c6_goal : or (occ n (Z_bnode n t1 t')) (eq q n)"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro d .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ q0 t1) (occ q0 (Z_bnode p t2 t3)),\nor (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ],
                "tactic_res": [
                    "c7_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c7_d : or (occ q0 t1) (occ q0 (Z_bnode p t2 t3))"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c7_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c7_d : or (occ q0 t1) (occ q0 (Z_bnode p t2 t3))"
                ],
                "tactic_res": [
                    "c8_goal : forall _ : occ q0 t1, or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c9_goal : forall _ : occ q0 (Z_bnode p t2 t3),\nor (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H' .",
                "tactic_args": [
                    "c8_goal : forall _ : occ q0 t1, or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ],
                "tactic_res": [
                    "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c10_H' : occ q0 t1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H' .",
                "tactic_args": [
                    "c9_goal : forall _ : occ q0 (Z_bnode p t2 t3),\nor (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ],
                "tactic_res": [
                    "c11_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c11_H' : occ q0 (Z_bnode p t2 t3)"
                ]
            },
            {
                "tactic_sig": "custom_tac3 .",
                "tactic_sig_no_out_arg": "custom_tac3 .",
                "tactic_args": [
                    "c10_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
                "tactic_sig_no_out_arg": "custom_tac56 _i H1 H2 H3 H4 H5 H6 .",
                "tactic_args": [
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q"
                ],
                "tactic_res": [
                    "c11_H6 : search_tree t'",
                    "c11_H5 : not (occ q t')",
                    "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                    "c11_H3 : forall (q : Z) (_ : occ q t'), occ q (Z_bnode p t2 t3)",
                    "c11_H2 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t2 t3)), Z.le p0 q",
                    "c11_H1 : occ q (Z_bnode p t2 t3)"
                ]
            },
            {
                "tactic_sig": "elim ( _i _ _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _ _i ) .",
                "tactic_args": [
                    "c11_goal : or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c11_H4 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t2 t3)),\nor (occ q0 t') (eq q q0)",
                    "c11_H' : occ q0 (Z_bnode p t2 t3)"
                ],
                "tactic_res": [
                    "c12_goal : forall _ : occ q0 t', or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c13_goal : forall _ : eq q q0, or (occ q0 (Z_bnode n t1 t')) (eq q q0)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c12_goal : forall _ : occ q0 t', or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c2_q0 : Z",
                    "c1_t1 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c13_goal : forall _ : eq q q0, or (occ q0 (Z_bnode n t1 t')) (eq q q0)",
                    "c2_q0 : Z",
                    "c1_t1 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax_t1_t2t3",
        "proof": [
            {
                "tactic_sig": "Lemma rmax_t1_t2t3 : RMAX ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) ( Z_bnode n t1 t' ) q .",
                "tactic_sig_no_out_arg": "Lemma rmax_t1_t2t3 : RMAX ( Z_bnode n t1 ( Z_bnode p t2 t3 ) ) ( Z_bnode n t1 t' ) q .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q",
                    "c1_R1 : RMAX (Z_bnode p t2 t3) t' q",
                    "c1_S1 : search_tree (Z_bnode n t1 (Z_bnode p t2 t3))",
                    "c1_t' : Z_btree",
                    "c1_t3 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_q : Z",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "custom_tac65 rmax_intro .",
                "tactic_sig_no_out_arg": "custom_tac65 rmax_intro .",
                "tactic_args": [
                    "c1_goal : RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rmax",
        "proof": [
            {
                "tactic_sig": "Definition rmax : forall t : Z_btree , rmax_spec t .",
                "tactic_sig_no_out_arg": "Definition rmax : forall t : Z_btree , rmax_spec t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall t : Z_btree, rmax_spec t"
                ]
            },
            {
                "tactic_sig": "refine ( fix rmax ( t : Z_btree ) : rmax_spec t := match t as x return rmax_spec x with | Z_leaf => fun h h' => False_rec _ _ | Z_bnode r t1 t2 => match t2 as z return rmax_spec z -> z = t2 -> rmax_spec ( Z_bnode r t1 z ) with | Z_leaf => fun h h' h'' h''' => existT ( fun q : Z => rmax_sig ( Z_bnode r t1 Z_leaf ) q ) r ( exist _ t1 _ ) | Z_bnode n' t'1 t'2 => fun h h' h'' h''' => match rmax t2 _ _ with | existT _ num ( exist _ t' _ ) => existT ( fun q : Z => rmax_sig ( Z_bnode r t1 ( Z_bnode n' t'1 t'2 ) ) q ) num ( exist _ ( Z_bnode r t1 t' ) _ ) end end _ _ end ) .",
                "tactic_sig_no_out_arg": "refine ( fix rmax ( t : Z_btree ) : rmax_spec t := match t as x return rmax_spec x with | Z_leaf => fun h h' => False_rec _ _ | Z_bnode r t1 t2 => match t2 as z return rmax_spec z -> z = t2 -> rmax_spec ( Z_bnode r t1 z ) with | Z_leaf => fun h h' h'' h''' => existT ( fun q : Z => rmax_sig ( Z_bnode r t1 Z_leaf ) q ) r ( exist _ t1 _ ) | Z_bnode n' t'1 t'2 => fun h h' h'' h''' => match rmax t2 _ _ with | existT _ num ( exist _ t' _ ) => existT ( fun q : Z => rmax_sig ( Z_bnode r t1 ( Z_bnode n' t'1 t'2 ) ) q ) num ( exist _ ( Z_bnode r t1 t' ) _ ) end end _ _ end ) .",
                "tactic_args": [
                    "c1_goal : forall t : Z_btree, rmax_spec t"
                ],
                "tactic_res": [
                    "c2_goal : False",
                    "c2_h' : is_bnode Z_leaf",
                    "c2_h : search_tree Z_leaf",
                    "c2_t : Z_btree",
                    "c2_rmax : forall t : Z_btree, rmax_spec t",
                    "c3_goal : RMAX (Z_bnode r t1 Z_leaf) t1 r",
                    "c3_h''' : is_bnode (Z_bnode r t1 Z_leaf)",
                    "c3_h'' : search_tree (Z_bnode r t1 Z_leaf)",
                    "c3_h' : eq Z_leaf t2",
                    "c3_h : rmax_spec Z_leaf",
                    "c3_t2 : Z_btree",
                    "c3_t1 : Z_btree",
                    "c3_r : Z",
                    "c3_t : Z_btree",
                    "c3_rmax : forall t : Z_btree, rmax_spec t",
                    "c4_goal : search_tree t2",
                    "c4_h''' : is_bnode (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c4_h'' : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c4_h' : eq (Z_bnode n' t'1 t'2) t2",
                    "c4_h : rmax_spec (Z_bnode n' t'1 t'2)",
                    "c4_t'2 : Z_btree",
                    "c4_t'1 : Z_btree",
                    "c4_n' : Z",
                    "c4_t2 : Z_btree",
                    "c4_t1 : Z_btree",
                    "c4_r : Z",
                    "c4_t : Z_btree",
                    "c4_rmax : forall t : Z_btree, rmax_spec t",
                    "c5_goal : is_bnode t2",
                    "c5_h''' : is_bnode (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c5_h'' : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c5_h' : eq (Z_bnode n' t'1 t'2) t2",
                    "c5_h : rmax_spec (Z_bnode n' t'1 t'2)",
                    "c5_t'2 : Z_btree",
                    "c5_t'1 : Z_btree",
                    "c5_n' : Z",
                    "c5_t2 : Z_btree",
                    "c5_t1 : Z_btree",
                    "c5_r : Z",
                    "c5_t : Z_btree",
                    "c5_rmax : forall t : Z_btree, rmax_spec t",
                    "c6_goal : RMAX (Z_bnode r t1 (Z_bnode n' t'1 t'2)) (Z_bnode r t1 t') num",
                    "c6_r1 : RMAX t2 t' num",
                    "c6_t' : Z_btree",
                    "c6_r0 : rmax_sig t2 num",
                    "c6_num : Z",
                    "c6_h''' : is_bnode (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c6_h'' : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c6_h' : eq (Z_bnode n' t'1 t'2) t2",
                    "c6_h : rmax_spec (Z_bnode n' t'1 t'2)",
                    "c6_t'2 : Z_btree",
                    "c6_t'1 : Z_btree",
                    "c6_n' : Z",
                    "c6_t2 : Z_btree",
                    "c6_t1 : Z_btree",
                    "c6_r : Z",
                    "c6_t : Z_btree",
                    "c6_rmax : forall t : Z_btree, rmax_spec t",
                    "c7_goal : rmax_spec t2",
                    "c7_t2 : Z_btree",
                    "c7_t1 : Z_btree",
                    "c7_r : Z",
                    "c7_t : Z_btree",
                    "c7_rmax : forall t : Z_btree, rmax_spec t",
                    "c8_goal : eq t2 t2",
                    "c8_t2 : Z_btree",
                    "c8_t1 : Z_btree",
                    "c8_r : Z",
                    "c8_t : Z_btree",
                    "c8_rmax : forall t : Z_btree, rmax_spec t"
                ]
            },
            {
                "tactic_sig": "inversion _i .",
                "tactic_sig_no_out_arg": "inversion _i .",
                "tactic_args": [
                    "c2_goal : False",
                    "c2_h' : is_bnode Z_leaf"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : RMAX (Z_bnode r t1 Z_leaf) t1 r",
                    "c3_h'' : search_tree (Z_bnode r t1 Z_leaf)",
                    "c3_t1 : Z_btree",
                    "c3_r : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c4_goal : search_tree t2",
                    "c4_h' : eq (Z_bnode n' t'1 t'2) t2"
                ],
                "tactic_res": [
                    "c9_goal : search_tree (Z_bnode n' t'1 t'2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c9_goal : search_tree (Z_bnode n' t'1 t'2)",
                    "c4_h'' : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c4_t'1 : Z_btree",
                    "c4_t'2 : Z_btree",
                    "c4_n' : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c5_goal : is_bnode t2",
                    "c5_h' : eq (Z_bnode n' t'1 t'2) t2"
                ],
                "tactic_res": [
                    "c10_goal : is_bnode (Z_bnode n' t'1 t'2)"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c10_goal : is_bnode (Z_bnode n' t'1 t'2)",
                    "c5_h''' : is_bnode (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c5_t'1 : Z_btree",
                    "c5_t'2 : Z_btree",
                    "c5_n' : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c6_goal : RMAX (Z_bnode r t1 (Z_bnode n' t'1 t'2)) (Z_bnode r t1 t') num",
                    "c6_h' : eq (Z_bnode n' t'1 t'2) t2"
                ],
                "tactic_res": [
                    "c11_goal : RMAX (Z_bnode r t1 t2) (Z_bnode r t1 t') num"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c11_goal : RMAX (Z_bnode r t1 t2) (Z_bnode r t1 t') num",
                    "c6_h' : eq (Z_bnode n' t'1 t'2) t2"
                ],
                "tactic_res": [
                    "c12_goal : RMAX (Z_bnode r t1 (Z_bnode n' t'1 t'2)) (Z_bnode r t1 t') num"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c12_goal : RMAX (Z_bnode r t1 (Z_bnode n' t'1 t'2)) (Z_bnode r t1 t') num",
                    "_global_rmax_t1_t2t3 : forall (n p q : Z) (t1 t2 t3 t' : Z_btree)\n         (_ : search_tree (Z_bnode n t1 (Z_bnode p t2 t3)))\n         (_ : RMAX (Z_bnode p t2 t3) t' q),\n       RMAX (Z_bnode n t1 (Z_bnode p t2 t3)) (Z_bnode n t1 t') q"
                ],
                "tactic_res": [
                    "c13_goal : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c14_goal : RMAX (Z_bnode n' t'1 t'2) t' num"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c13_goal : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c6_h'' : search_tree (Z_bnode r t1 (Z_bnode n' t'1 t'2))",
                    "c6_t'1 : Z_btree",
                    "c6_t'2 : Z_btree",
                    "c6_n' : Z",
                    "c6_t1 : Z_btree",
                    "c6_r : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c14_goal : RMAX (Z_bnode n' t'1 t'2) t' num",
                    "c6_h' : eq (Z_bnode n' t'1 t'2) t2"
                ],
                "tactic_res": [
                    "c15_goal : RMAX t2 t' num"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c15_goal : RMAX t2 t' num",
                    "c6_r1 : RMAX t2 t' num",
                    "c6_t' : Z_btree",
                    "c6_num : Z",
                    "c6_t2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c7_goal : rmax_spec t2",
                    "c7_t2 : Z_btree",
                    "c7_rmax : forall t : Z_btree, rmax_spec t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c8_goal : eq t2 t2",
                    "c8_t2 : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "RM_0",
        "proof": [
            {
                "tactic_sig": "Lemma RM_0 : forall n : Z , RM n Z_leaf Z_leaf .",
                "tactic_sig_no_out_arg": "Lemma RM_0 : forall n : Z , RM n Z_leaf Z_leaf .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall n : Z, RM n Z_leaf Z_leaf"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro n .",
                "tactic_args": [
                    "c1_goal : forall n : Z, RM n Z_leaf Z_leaf"
                ],
                "tactic_res": [
                    "c2_goal : RM n Z_leaf Z_leaf",
                    "c2_n : Z"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c2_goal : RM n Z_leaf Z_leaf",
                    "_global_rm_intro : forall (n : Z) (t t' : Z_btree) (_ : not (occ n t'))\n         (_ : forall (p : Z) (_ : occ p t'), occ p t)\n         (_ : forall (p : Z) (_ : occ p t), or (occ p t') (eq n p))\n         (_ : search_tree t'), RM n t t'"
                ],
                "tactic_res": [
                    "c3_goal : not (occ n Z_leaf)",
                    "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p Z_leaf",
                    "c5_goal : forall (p : Z) (_ : occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                    "c6_goal : search_tree Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : not (occ n Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p Z_leaf), occ p Z_leaf"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : forall (p : Z) (_ : occ p Z_leaf), or (occ p Z_leaf) (eq n p)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : search_tree Z_leaf"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "RM_1",
        "proof": [
            {
                "tactic_sig": "Lemma RM_1 : forall n : Z , RM n ( Z_bnode n Z_leaf Z_leaf ) Z_leaf .",
                "tactic_sig_no_out_arg": "Lemma RM_1 : forall n : Z , RM n ( Z_bnode n Z_leaf Z_leaf ) Z_leaf .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
                ]
            },
            {
                "tactic_sig": "custom_tac42 rm_intro .",
                "tactic_sig_no_out_arg": "custom_tac42 rm_intro .",
                "tactic_args": [
                    "c1_goal : forall n : Z, RM n (Z_bnode n Z_leaf Z_leaf) Z_leaf"
                ],
                "tactic_res": [
                    "c2_goal : not (occ n Z_leaf)",
                    "c2_n : Z",
                    "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                    "c3_n : Z",
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)",
                    "c4_n : Z",
                    "c5_goal : search_tree Z_leaf",
                    "c5_n : Z"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c2_goal : not (occ n Z_leaf)",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : forall (p : Z) (_ : occ p Z_leaf), occ p (Z_bnode n Z_leaf Z_leaf)",
                    "c3_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : search_tree Z_leaf"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf Z_leaf)),\nor (occ p Z_leaf) (eq n p)"
                ],
                "tactic_res": [
                    "c6_goal : or (occ p Z_leaf) (eq n p)",
                    "c6_p : Z",
                    "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c6_goal : or (occ p Z_leaf) (eq n p)",
                    "c6_H : occ p (Z_bnode n Z_leaf Z_leaf)"
                ],
                "tactic_res": [
                    "c7_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                    "c8_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : forall _ : eq n p, or (occ p Z_leaf) (eq n p)",
                    "c4_n : Z",
                    "c6_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "tauto .",
                "tactic_sig_no_out_arg": "tauto .",
                "tactic_args": [
                    "c8_goal : forall _ : or (occ p Z_leaf) (occ p Z_leaf), or (occ p Z_leaf) (eq n p)"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_left",
        "proof": [
            {
                "tactic_sig": "Lemma rm_left : forall ( n p : Z ) ( t1 t2 t' : Z_btree ) , p < n -> search_tree ( Z_bnode n t1 t2 ) -> RM p t1 t' -> RM p ( Z_bnode n t1 t2 ) ( Z_bnode n t' t2 ) .",
                "tactic_sig_no_out_arg": "Lemma rm_left : forall ( n p : Z ) ( t1 t2 t' : Z_btree ) , p < n -> search_tree ( Z_bnode n t1 t2 ) -> RM p t1 t' -> RM p ( Z_bnode n t1 t2 ) ( Z_bnode n t' t2 ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n p : Z) (t1 t2 t' : Z_btree) (_ : Z.lt p n)\n  (_ : search_tree (Z_bnode n t1 t2)) (_ : RM p t1 t'),\nRM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros n p t1 t2 t' H H0 H1 .",
                "tactic_args": [
                    "c1_goal : forall (n p : Z) (t1 t2 t' : Z_btree) (_ : Z.lt p n)\n  (_ : search_tree (Z_bnode n t1 t2)) (_ : RM p t1 t'),\nRM p (Z_bnode n t1 t2) (Z_bnode n t' t2)"
                ],
                "tactic_res": [
                    "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)",
                    "c2_n : Z",
                    "c2_p : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_H : Z.lt p n",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_H1 : RM p t1 t'"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t' t2)",
                    "_global_rm_intro : forall (n : Z) (t t' : Z_btree) (_ : not (occ n t'))\n         (_ : forall (p : Z) (_ : occ p t'), occ p t)\n         (_ : forall (p : Z) (_ : occ p t), or (occ p t') (eq n p))\n         (_ : search_tree t'), RM n t t'"
                ],
                "tactic_res": [
                    "c3_goal : not (occ p (Z_bnode n t' t2))",
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)",
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n t1 t2)),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c6_goal : search_tree (Z_bnode n t' t2)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c3_goal : not (occ p (Z_bnode n t' t2))"
                ],
                "tactic_res": [
                    "c7_goal : False",
                    "c7_H2 : occ p (Z_bnode n t' t2)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c7_goal : False",
                    "c7_H2 : occ p (Z_bnode n t' t2)"
                ],
                "tactic_res": [
                    "c8_goal : forall _ : eq n p, False",
                    "c9_goal : forall _ : or (occ p t') (occ p t2), False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro eg .",
                "tactic_args": [
                    "c8_goal : forall _ : eq n p, False"
                ],
                "tactic_res": [
                    "c10_goal : False",
                    "c10_eg : eq n p"
                ]
            },
            {
                "tactic_sig": "apply _i with _i .",
                "tactic_sig_no_out_arg": "apply _i with _i .",
                "tactic_args": [
                    "c10_goal : False",
                    "_global_Z.lt_irrefl : forall x : Z, not (Z.lt x x)",
                    "c2_n : Z"
                ],
                "tactic_res": [
                    "c11_goal : Z.lt n n"
                ]
            },
            {
                "tactic_sig": "pattern _i at 1 .",
                "tactic_sig_no_out_arg": "pattern _i at 1 .",
                "tactic_args": [
                    "c11_goal : Z.lt n n",
                    "c2_n : Z"
                ],
                "tactic_res": [
                    "c12_goal : (fun z : Z => Z.lt z n) n"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c12_goal : (fun z : Z => Z.lt z n) n",
                    "c10_eg : eq n p"
                ],
                "tactic_res": [
                    "c13_goal : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c13_goal : Z.lt p n",
                    "c2_H : Z.lt p n",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro D .",
                "tactic_args": [
                    "c9_goal : forall _ : or (occ p t') (occ p t2), False"
                ],
                "tactic_res": [
                    "c14_goal : False",
                    "c14_D : or (occ p t') (occ p t2)"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c14_goal : False",
                    "c14_D : or (occ p t') (occ p t2)"
                ],
                "tactic_res": [
                    "c15_goal : forall _ : occ p t', False",
                    "c16_goal : forall _ : occ p t2, False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H3 .",
                "tactic_args": [
                    "c15_goal : forall _ : occ p t', False"
                ],
                "tactic_res": [
                    "c17_goal : False",
                    "c17_H3 : occ p t'"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H3 .",
                "tactic_args": [
                    "c16_goal : forall _ : occ p t2, False"
                ],
                "tactic_res": [
                    "c18_goal : False",
                    "c18_H3 : occ p t2"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c17_goal : False",
                    "c2_H1 : RM p t1 t'"
                ],
                "tactic_res": [
                    "c19_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), False"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), False",
                    "c17_H3 : occ p t'",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c18_goal : False",
                    "c2_p : Z",
                    "c2_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c20_goal : not (occ p t2)",
                    "c21_goal : occ p t2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c21_goal : occ p t2",
                    "c18_H3 : occ p t2",
                    "c2_t2 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i _i .",
                "tactic_sig_no_out_arg": "apply _i with _i _i .",
                "tactic_args": [
                    "c20_goal : not (occ p t2)",
                    "_global_not_right : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2))\n         (p : Z) (_ : Z.le p n), not (occ p t2)",
                    "c2_n : Z",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c22_goal : search_tree (Z_bnode n t1 t2)",
                    "c23_goal : Z.le p n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : search_tree (Z_bnode n t1 t2)",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c23_goal : Z.le p n",
                    "_global_Zlt_le_weak : forall (n m : Z) (_ : Z.lt n m), Z.le n m"
                ],
                "tactic_res": [
                    "c24_goal : Z.lt p n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c24_goal : Z.lt p n",
                    "c2_H : Z.lt p n",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t' t2)), occ p (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c25_goal : occ p0 (Z_bnode n t1 t2)",
                    "c25_p0 : Z",
                    "c25_H2 : occ p0 (Z_bnode n t' t2)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c25_goal : occ p0 (Z_bnode n t1 t2)",
                    "c25_H2 : occ p0 (Z_bnode n t' t2)"
                ],
                "tactic_res": [
                    "c26_goal : forall _ : eq n p0, occ p0 (Z_bnode n t1 t2)",
                    "c27_goal : forall _ : or (occ p0 t') (occ p0 t2), occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c26_goal : forall _ : eq n p0, occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c28_goal : occ p0 (Z_bnode n t1 t2)",
                    "c28_e : eq n p0"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c28_goal : occ p0 (Z_bnode n t1 t2)",
                    "c28_e : eq n p0"
                ],
                "tactic_res": [
                    "c29_goal : occ n (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c29_goal : occ n (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro d .",
                "tactic_args": [
                    "c27_goal : forall _ : or (occ p0 t') (occ p0 t2), occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c30_goal : occ p0 (Z_bnode n t1 t2)",
                    "c30_d : or (occ p0 t') (occ p0 t2)"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c30_goal : occ p0 (Z_bnode n t1 t2)",
                    "c30_d : or (occ p0 t') (occ p0 t2)"
                ],
                "tactic_res": [
                    "c31_goal : forall _ : occ p0 t', occ p0 (Z_bnode n t1 t2)",
                    "c32_goal : forall _ : occ p0 t2, occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c32_goal : forall _ : occ p0 t2, occ p0 (Z_bnode n t1 t2)",
                    "c25_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c31_goal : forall _ : occ p0 t', occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c33_goal : occ p0 (Z_bnode n t1 t2)",
                    "c33_H3 : occ p0 t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c33_goal : occ p0 (Z_bnode n t1 t2)",
                    "c2_H1 : RM p t1 t'"
                ],
                "tactic_res": [
                    "c34_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c34_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ p0 (Z_bnode n t1 t2)",
                    "c33_H3 : occ p0 t'",
                    "c25_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n t1 t2)),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ],
                "tactic_res": [
                    "c35_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c35_p0 : Z",
                    "c35_H2 : occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c35_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c35_H2 : occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c36_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c37_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c36_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ],
                "tactic_res": [
                    "c38_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c38_e : eq n p0"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c38_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c38_e : eq n p0"
                ],
                "tactic_res": [
                    "c39_goal : or (occ n (Z_bnode n t' t2)) (eq p n)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c39_goal : or (occ n (Z_bnode n t' t2)) (eq p n)",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro d .",
                "tactic_args": [
                    "c37_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ],
                "tactic_res": [
                    "c40_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c40_d : or (occ p0 t1) (occ p0 t2)"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c40_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c40_d : or (occ p0 t1) (occ p0 t2)"
                ],
                "tactic_res": [
                    "c41_goal : forall _ : occ p0 t1, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c42_goal : forall _ : occ p0 t2, or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H4 .",
                "tactic_args": [
                    "c41_goal : forall _ : occ p0 t1, or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ],
                "tactic_res": [
                    "c43_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c43_H4 : occ p0 t1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H4 .",
                "tactic_args": [
                    "c42_goal : forall _ : occ p0 t2, or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ],
                "tactic_res": [
                    "c44_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c44_H4 : occ p0 t2"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c43_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c2_H1 : RM p t1 t'"
                ],
                "tactic_res": [
                    "c45_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H5 H6 H7 H8 .",
                "tactic_args": [
                    "c45_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ],
                "tactic_res": [
                    "c46_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c46_H5 : not (occ p t')",
                    "c46_H6 : forall (p : Z) (_ : occ p t'), occ p t1",
                    "c46_H7 : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0)",
                    "c46_H8 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i _i ) .",
                "tactic_args": [
                    "c46_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c46_H7 : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0)",
                    "c35_p0 : Z",
                    "c43_H4 : occ p0 t1"
                ],
                "tactic_res": [
                    "c47_goal : forall _ : occ p0 t', or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c48_goal : forall _ : eq p p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c47_goal : forall _ : occ p0 t', or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c35_p0 : Z",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c48_goal : forall _ : eq p p0, or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c35_p0 : Z",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c44_goal : or (occ p0 (Z_bnode n t' t2)) (eq p p0)",
                    "c44_H4 : occ p0 t2",
                    "c35_p0 : Z",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode n t' t2)"
                ],
                "tactic_res": [
                    "c49_goal : search_tree t'",
                    "c50_goal : search_tree t2",
                    "c51_goal : maj n t'",
                    "c52_goal : min n t2"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c49_goal : search_tree t'",
                    "c2_H1 : RM p t1 t'"
                ],
                "tactic_res": [
                    "c53_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), search_tree t'"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c53_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), search_tree t'",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i _i .",
                "tactic_sig_no_out_arg": "apply _i with _i _i .",
                "tactic_args": [
                    "c50_goal : search_tree t2",
                    "_global_search_tree_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       search_tree t2",
                    "c2_n : Z",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c54_goal : search_tree (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c54_goal : search_tree (Z_bnode n t1 t2)",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c51_goal : maj n t'",
                    "_global_maj_intro : forall (z : Z) (t : Z_btree)\n         (_ : forall (z' : Z) (_ : occ z' t), Z.lt z' z), \n       maj z t"
                ],
                "tactic_res": [
                    "c55_goal : forall (z' : Z) (_ : occ z' t'), Z.lt z' n"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q H2 .",
                "tactic_args": [
                    "c55_goal : forall (z' : Z) (_ : occ z' t'), Z.lt z' n"
                ],
                "tactic_res": [
                    "c56_goal : Z.lt q n",
                    "c56_q : Z",
                    "c56_H2 : occ q t'"
                ]
            },
            {
                "tactic_sig": "cut ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "cut ( occ _i _i ) .",
                "tactic_args": [
                    "c56_goal : Z.lt q n",
                    "c56_q : Z",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c57_goal : forall _ : occ q t1, Z.lt q n",
                    "c58_goal : occ q t1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c57_goal : forall _ : occ q t1, Z.lt q n"
                ],
                "tactic_res": [
                    "c59_goal : Z.lt q n",
                    "c59_H3 : occ q t1"
                ]
            },
            {
                "tactic_sig": "elim ( maj_l _i ) .",
                "tactic_sig_no_out_arg": "elim ( maj_l _i ) .",
                "tactic_args": [
                    "c59_goal : Z.lt q n",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c60_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, Z.lt q n"
                ]
            },
            {
                "tactic_sig": "intros _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c60_goal : forall _ : forall (z' : Z) (_ : occ z' t1), Z.lt z' n, Z.lt q n"
                ],
                "tactic_res": [
                    "c61_goal : Z.lt q n",
                    "c61_H4 : forall (z' : Z) (_ : occ z' t1), Z.lt z' n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c61_goal : Z.lt q n",
                    "c61_H4 : forall (z' : Z) (_ : occ z' t1), Z.lt z' n",
                    "c59_H3 : occ q t1",
                    "c56_q : Z",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c58_goal : occ q t1",
                    "c2_H1 : RM p t1 t'"
                ],
                "tactic_res": [
                    "c62_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ q t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c62_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t1)\n  (_ : forall (p0 : Z) (_ : occ p0 t1), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ q t1",
                    "c56_H2 : occ q t'",
                    "c56_q : Z",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i .",
                "tactic_sig_no_out_arg": "apply _i with _i .",
                "tactic_args": [
                    "c52_goal : min n t2",
                    "_global_min_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       min n t2",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c63_goal : search_tree (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c63_goal : search_tree (Z_bnode n t1 t2)",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_right",
        "proof": [
            {
                "tactic_sig": "Lemma rm_right : forall ( n p : Z ) ( t1 t2 t' : Z_btree ) , n < p -> search_tree ( Z_bnode n t1 t2 ) -> RM p t2 t' -> RM p ( Z_bnode n t1 t2 ) ( Z_bnode n t1 t' ) .",
                "tactic_sig_no_out_arg": "Lemma rm_right : forall ( n p : Z ) ( t1 t2 t' : Z_btree ) , n < p -> search_tree ( Z_bnode n t1 t2 ) -> RM p t2 t' -> RM p ( Z_bnode n t1 t2 ) ( Z_bnode n t1 t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n p : Z) (t1 t2 t' : Z_btree) (_ : Z.lt n p)\n  (_ : search_tree (Z_bnode n t1 t2)) (_ : RM p t2 t'),\nRM p (Z_bnode n t1 t2) (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros n p t1 t2 t' H H0 H1 .",
                "tactic_args": [
                    "c1_goal : forall (n p : Z) (t1 t2 t' : Z_btree) (_ : Z.lt n p)\n  (_ : search_tree (Z_bnode n t1 t2)) (_ : RM p t2 t'),\nRM p (Z_bnode n t1 t2) (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t1 t')",
                    "c2_n : Z",
                    "c2_p : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_H : Z.lt n p",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_H1 : RM p t2 t'"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c2_goal : RM p (Z_bnode n t1 t2) (Z_bnode n t1 t')",
                    "_global_rm_intro : forall (n : Z) (t t' : Z_btree) (_ : not (occ n t'))\n         (_ : forall (p : Z) (_ : occ p t'), occ p t)\n         (_ : forall (p : Z) (_ : occ p t), or (occ p t') (eq n p))\n         (_ : search_tree t'), RM n t t'"
                ],
                "tactic_res": [
                    "c3_goal : not (occ p (Z_bnode n t1 t'))",
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t1 t')), occ p (Z_bnode n t1 t2)",
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n t1 t2)),\nor (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c6_goal : search_tree (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c3_goal : not (occ p (Z_bnode n t1 t'))"
                ],
                "tactic_res": [
                    "c7_goal : False",
                    "c7_H2 : occ p (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c7_goal : False",
                    "c7_H2 : occ p (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c8_goal : forall _ : eq n p, False",
                    "c9_goal : forall _ : or (occ p t1) (occ p t'), False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro eg .",
                "tactic_args": [
                    "c8_goal : forall _ : eq n p, False"
                ],
                "tactic_res": [
                    "c10_goal : False",
                    "c10_eg : eq n p"
                ]
            },
            {
                "tactic_sig": "apply _i with _i .",
                "tactic_sig_no_out_arg": "apply _i with _i .",
                "tactic_args": [
                    "c10_goal : False",
                    "_global_Z.lt_irrefl : forall x : Z, not (Z.lt x x)",
                    "c2_p : Z"
                ],
                "tactic_res": [
                    "c11_goal : Z.lt p p"
                ]
            },
            {
                "tactic_sig": "pattern _i at 1 .",
                "tactic_sig_no_out_arg": "pattern _i at 1 .",
                "tactic_args": [
                    "c11_goal : Z.lt p p",
                    "c2_p : Z"
                ],
                "tactic_res": [
                    "c12_goal : (fun z : Z => Z.lt z p) p"
                ]
            },
            {
                "tactic_sig": "rewrite <- _i .",
                "tactic_sig_no_out_arg": "rewrite <- _i .",
                "tactic_args": [
                    "c12_goal : (fun z : Z => Z.lt z p) p",
                    "c10_eg : eq n p"
                ],
                "tactic_res": [
                    "c13_goal : Z.lt n p"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c13_goal : Z.lt n p",
                    "c2_H : Z.lt n p",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro D .",
                "tactic_args": [
                    "c9_goal : forall _ : or (occ p t1) (occ p t'), False"
                ],
                "tactic_res": [
                    "c14_goal : False",
                    "c14_D : or (occ p t1) (occ p t')"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c14_goal : False",
                    "c14_D : or (occ p t1) (occ p t')"
                ],
                "tactic_res": [
                    "c15_goal : forall _ : occ p t1, False",
                    "c16_goal : forall _ : occ p t', False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H3 .",
                "tactic_args": [
                    "c15_goal : forall _ : occ p t1, False"
                ],
                "tactic_res": [
                    "c17_goal : False",
                    "c17_H3 : occ p t1"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c17_goal : False",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c18_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H3 .",
                "tactic_args": [
                    "c16_goal : forall _ : occ p t', False"
                ],
                "tactic_res": [
                    "c19_goal : False",
                    "c19_H3 : occ p t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c19_goal : False",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c20_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), False"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c20_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), False",
                    "c19_H3 : occ p t'",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c18_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), False",
                    "c2_p : Z",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c21_goal : not (occ p t1)",
                    "c22_goal : occ p t1"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : occ p t1",
                    "c17_H3 : occ p t1",
                    "c2_t1 : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i _i .",
                "tactic_sig_no_out_arg": "apply _i with _i _i .",
                "tactic_args": [
                    "c21_goal : not (occ p t1)",
                    "_global_not_left : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2))\n         (p : Z) (_ : Z.ge p n), not (occ p t1)",
                    "c2_n : Z",
                    "c2_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c23_goal : search_tree (Z_bnode n t1 t2)",
                    "c24_goal : Z.ge p n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c23_goal : search_tree (Z_bnode n t1 t2)",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c24_goal : Z.ge p n",
                    "_global_Z.le_ge : forall (n m : Z) (_ : Z.le n m), Z.ge m n"
                ],
                "tactic_res": [
                    "c25_goal : Z.le n p"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c25_goal : Z.le n p",
                    "_global_Zlt_le_weak : forall (n m : Z) (_ : Z.lt n m), Z.le n m"
                ],
                "tactic_res": [
                    "c26_goal : Z.lt n p"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c26_goal : Z.lt n p",
                    "c2_H : Z.lt n p",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p (Z_bnode n t1 t')), occ p (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c27_goal : occ p0 (Z_bnode n t1 t2)",
                    "c27_p0 : Z",
                    "c27_H2 : occ p0 (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c27_goal : occ p0 (Z_bnode n t1 t2)",
                    "c27_H2 : occ p0 (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c28_goal : forall _ : eq n p0, occ p0 (Z_bnode n t1 t2)",
                    "c29_goal : forall _ : or (occ p0 t1) (occ p0 t'), occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c28_goal : forall _ : eq n p0, occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c30_goal : occ p0 (Z_bnode n t1 t2)",
                    "c30_e : eq n p0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c30_goal : occ p0 (Z_bnode n t1 t2)",
                    "c30_e : eq n p0"
                ],
                "tactic_res": [
                    "c31_goal : occ n (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c31_goal : occ n (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro d .",
                "tactic_args": [
                    "c29_goal : forall _ : or (occ p0 t1) (occ p0 t'), occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c32_goal : occ p0 (Z_bnode n t1 t2)",
                    "c32_d : or (occ p0 t1) (occ p0 t')"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c32_goal : occ p0 (Z_bnode n t1 t2)",
                    "c32_d : or (occ p0 t1) (occ p0 t')"
                ],
                "tactic_res": [
                    "c33_goal : forall _ : occ p0 t1, occ p0 (Z_bnode n t1 t2)",
                    "c34_goal : forall _ : occ p0 t', occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c33_goal : forall _ : occ p0 t1, occ p0 (Z_bnode n t1 t2)",
                    "c27_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c34_goal : forall _ : occ p0 t', occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c35_goal : occ p0 (Z_bnode n t1 t2)",
                    "c35_H3 : occ p0 t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c35_goal : occ p0 (Z_bnode n t1 t2)",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c36_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c36_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ p0 (Z_bnode n t1 t2)",
                    "c35_H3 : occ p0 t'",
                    "c27_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H2 .",
                "tactic_args": [
                    "c5_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n t1 t2)),\nor (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c37_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c37_p0 : Z",
                    "c37_H2 : occ p0 (Z_bnode n t1 t2)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c37_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c37_H2 : occ p0 (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c38_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c39_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c38_goal : forall _ : eq n p0, or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c40_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c40_e : eq n p0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c40_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c40_e : eq n p0"
                ],
                "tactic_res": [
                    "c41_goal : or (occ n (Z_bnode n t1 t')) (eq p n)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c41_goal : or (occ n (Z_bnode n t1 t')) (eq p n)",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro d .",
                "tactic_args": [
                    "c39_goal : forall _ : or (occ p0 t1) (occ p0 t2),\nor (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c42_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c42_d : or (occ p0 t1) (occ p0 t2)"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c42_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c42_d : or (occ p0 t1) (occ p0 t2)"
                ],
                "tactic_res": [
                    "c43_goal : forall _ : occ p0 t1, or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c44_goal : forall _ : occ p0 t2, or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H4 .",
                "tactic_args": [
                    "c43_goal : forall _ : occ p0 t1, or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c45_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c45_H4 : occ p0 t1"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H4 .",
                "tactic_args": [
                    "c44_goal : forall _ : occ p0 t2, or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c46_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c46_H4 : occ p0 t2"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c45_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c47_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H5 H6 H7 H8 .",
                "tactic_args": [
                    "c47_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c48_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c48_H5 : not (occ p t')",
                    "c48_H6 : forall (p : Z) (_ : occ p t'), occ p t2",
                    "c48_H7 : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0)",
                    "c48_H8 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "left .",
                "tactic_sig_no_out_arg": "left .",
                "tactic_args": [
                    "c48_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c49_goal : occ p0 (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c49_goal : occ p0 (Z_bnode n t1 t')",
                    "c45_H4 : occ p0 t1",
                    "c37_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c46_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c50_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H5 H6 H7 H8 .",
                "tactic_args": [
                    "c50_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ],
                "tactic_res": [
                    "c51_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c51_H5 : not (occ p t')",
                    "c51_H6 : forall (p : Z) (_ : occ p t'), occ p t2",
                    "c51_H7 : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0)",
                    "c51_H8 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i _i ) .",
                "tactic_args": [
                    "c51_goal : or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c51_H7 : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0)",
                    "c37_p0 : Z",
                    "c46_H4 : occ p0 t2"
                ],
                "tactic_res": [
                    "c52_goal : forall _ : occ p0 t', or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c53_goal : forall _ : eq p p0, or (occ p0 (Z_bnode n t1 t')) (eq p p0)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c52_goal : forall _ : occ p0 t', or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c37_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c53_goal : forall _ : eq p p0, or (occ p0 (Z_bnode n t1 t')) (eq p p0)",
                    "c37_p0 : Z",
                    "c2_t1 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_n : Z",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c54_goal : search_tree t1",
                    "c55_goal : search_tree t'",
                    "c56_goal : maj n t1",
                    "c57_goal : min n t'"
                ]
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c54_goal : search_tree t1",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c55_goal : search_tree t'",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c58_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), search_tree t'"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c58_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), search_tree t'",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees .",
                "tactic_sig_no_out_arg": "eauto with searchtrees .",
                "tactic_args": [
                    "c56_goal : maj n t1",
                    "c2_H0 : search_tree (Z_bnode n t1 t2)",
                    "c2_t1 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eapply _i with _i .",
                "tactic_sig_no_out_arg": "eapply _i with _i .",
                "tactic_args": [
                    "c57_goal : min n t'",
                    "_global_min_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       min n t2",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": [
                    "c59_goal : search_tree (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c59_goal : search_tree (Z_bnode n t1 t')",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c60_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), search_tree (Z_bnode n t1 t')"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H2 H3 H4 H5 .",
                "tactic_args": [
                    "c60_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), search_tree (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c61_goal : search_tree (Z_bnode n t1 t')",
                    "c61_H2 : not (occ p t')",
                    "c61_H3 : forall (p : Z) (_ : occ p t'), occ p t2",
                    "c61_H4 : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0)",
                    "c61_H5 : search_tree t'"
                ]
            },
            {
                "tactic_sig": "inversion_clear _i .",
                "tactic_sig_no_out_arg": "inversion_clear _i .",
                "tactic_args": [
                    "c2_H0 : search_tree (Z_bnode n t1 t2)"
                ],
                "tactic_res": [
                    "c61_H9 : min n t2",
                    "c61_H8 : maj n t1",
                    "c61_H7 : search_tree t2",
                    "c61_H6 : search_tree t1"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c61_goal : search_tree (Z_bnode n t1 t')"
                ],
                "tactic_res": [
                    "c62_goal : search_tree t1",
                    "c63_goal : search_tree t'",
                    "c64_goal : maj n t1",
                    "c65_goal : min n t'"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c62_goal : search_tree t1",
                    "c61_H6 : search_tree t1",
                    "c2_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c63_goal : search_tree t'",
                    "c61_H5 : search_tree t'",
                    "c2_t' : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c64_goal : maj n t1",
                    "c61_H8 : maj n t1",
                    "c2_t1 : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c65_goal : min n t'",
                    "c61_H9 : min n t2"
                ],
                "tactic_res": [
                    "c66_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', min n t'"
                ]
            },
            {
                "tactic_sig": "split .",
                "tactic_sig_no_out_arg": "split .",
                "tactic_args": [
                    "c66_goal : forall _ : forall (z' : Z) (_ : occ z' t2), Z.lt n z', min n t'"
                ],
                "tactic_res": [
                    "c67_goal : forall (z' : Z) (_ : occ z' t'), Z.lt n z'",
                    "c67_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c67_goal : forall (z' : Z) (_ : occ z' t'), Z.lt n z'"
                ],
                "tactic_res": [
                    "c68_goal : Z.lt n z'",
                    "c68_z' : Z",
                    "c68_H10 : occ z' t'"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c68_goal : Z.lt n z'",
                    "c67_H0 : forall (z' : Z) (_ : occ z' t2), Z.lt n z'"
                ],
                "tactic_res": [
                    "c69_goal : occ z' t2"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c69_goal : occ z' t2",
                    "c2_H1 : RM p t2 t'"
                ],
                "tactic_res": [
                    "c70_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ z' t2"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c70_goal : forall (_ : not (occ p t'))\n  (_ : forall (p : Z) (_ : occ p t'), occ p t2)\n  (_ : forall (p0 : Z) (_ : occ p0 t2), or (occ p0 t') (eq p p0))\n  (_ : search_tree t'), occ z' t2",
                    "c68_H10 : occ z' t'",
                    "c68_z' : Z",
                    "c2_t2 : Z_btree",
                    "c2_t' : Z_btree",
                    "c2_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_root_base_case",
        "proof": [
            {
                "tactic_sig": "Lemma rm_root_base_case : forall ( n : Z ) ( t : Z_btree ) , search_tree ( Z_bnode n Z_leaf t ) -> RM n ( Z_bnode n Z_leaf t ) t .",
                "tactic_sig_no_out_arg": "Lemma rm_root_base_case : forall ( n : Z ) ( t : Z_btree ) , search_tree ( Z_bnode n Z_leaf t ) -> RM n ( Z_bnode n Z_leaf t ) t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n : Z) (t : Z_btree) (_ : search_tree (Z_bnode n Z_leaf t)),\nRM n (Z_bnode n Z_leaf t) t"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o .",
                "tactic_sig_no_out_arg": "intros .",
                "tactic_args": [
                    "c1_goal : forall (n : Z) (t : Z_btree) (_ : search_tree (Z_bnode n Z_leaf t)),\nRM n (Z_bnode n Z_leaf t) t"
                ],
                "tactic_res": [
                    "c2_goal : RM n (Z_bnode n Z_leaf t) t",
                    "c2_n : Z",
                    "c2_t : Z_btree",
                    "c2_H : search_tree (Z_bnode n Z_leaf t)"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c2_goal : RM n (Z_bnode n Z_leaf t) t",
                    "_global_rm_intro : forall (n : Z) (t t' : Z_btree) (_ : not (occ n t'))\n         (_ : forall (p : Z) (_ : occ p t'), occ p t)\n         (_ : forall (p : Z) (_ : occ p t), or (occ p t') (eq n p))\n         (_ : search_tree t'), RM n t t'"
                ],
                "tactic_res": [
                    "c3_goal : not (occ n t)",
                    "c4_goal : forall (p : Z) (_ : occ p t), occ p (Z_bnode n Z_leaf t)",
                    "c5_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf t)), or (occ p t) (eq n p)",
                    "c6_goal : search_tree t"
                ]
            },
            {
                "tactic_sig": "apply _i with _i _i .",
                "tactic_sig_no_out_arg": "apply _i with _i _i .",
                "tactic_args": [
                    "c3_goal : not (occ n t)",
                    "_global_not_right : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2))\n         (p : Z) (_ : Z.le p n), not (occ p t2)",
                    "c2_n : Z",
                    "_global_Z_leaf : Z_btree"
                ],
                "tactic_res": [
                    "c7_goal : search_tree (Z_bnode n Z_leaf t)",
                    "c8_goal : Z.le n n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : search_tree (Z_bnode n Z_leaf t)",
                    "c2_H : search_tree (Z_bnode n Z_leaf t)",
                    "c2_t : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "reflexivity .",
                "tactic_sig_no_out_arg": "reflexivity .",
                "tactic_args": [
                    "c8_goal : Z.le n n"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c4_goal : forall (p : Z) (_ : occ p t), occ p (Z_bnode n Z_leaf t)",
                    "c2_t : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p H1 .",
                "tactic_args": [
                    "c5_goal : forall (p : Z) (_ : occ p (Z_bnode n Z_leaf t)), or (occ p t) (eq n p)"
                ],
                "tactic_res": [
                    "c9_goal : or (occ p t) (eq n p)",
                    "c9_p : Z",
                    "c9_H1 : occ p (Z_bnode n Z_leaf t)"
                ]
            },
            {
                "tactic_sig": "elim ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "elim ( occ_inv _i ) .",
                "tactic_args": [
                    "c9_goal : or (occ p t) (eq n p)",
                    "c9_H1 : occ p (Z_bnode n Z_leaf t)"
                ],
                "tactic_res": [
                    "c10_goal : forall _ : eq n p, or (occ p t) (eq n p)",
                    "c11_goal : forall _ : or (occ p Z_leaf) (occ p t), or (occ p t) (eq n p)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c10_goal : forall _ : eq n p, or (occ p t) (eq n p)"
                ],
                "tactic_res": [
                    "c12_goal : or (occ p t) (eq n p)",
                    "c12_H2 : eq n p"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H2 .",
                "tactic_args": [
                    "c11_goal : forall _ : or (occ p Z_leaf) (occ p t), or (occ p t) (eq n p)"
                ],
                "tactic_res": [
                    "c13_goal : or (occ p t) (eq n p)",
                    "c13_H2 : or (occ p Z_leaf) (occ p t)"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c12_goal : or (occ p t) (eq n p)"
                ],
                "tactic_res": [
                    "c14_goal : eq n p"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c14_goal : eq n p",
                    "c12_H2 : eq n p",
                    "c9_p : Z",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c13_goal : or (occ p t) (eq n p)",
                    "c13_H2 : or (occ p Z_leaf) (occ p t)"
                ],
                "tactic_res": [
                    "c15_goal : forall _ : occ p Z_leaf, or (occ p t) (eq n p)",
                    "c16_goal : forall _ : occ p t, or (occ p t) (eq n p)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c15_goal : forall _ : occ p Z_leaf, or (occ p t) (eq n p)"
                ],
                "tactic_res": [
                    "c17_goal : or (occ p t) (eq n p)",
                    "c17_H0 : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro .",
                "tactic_args": [
                    "c16_goal : forall _ : occ p t, or (occ p t) (eq n p)"
                ],
                "tactic_res": [
                    "c18_goal : or (occ p t) (eq n p)",
                    "c18_H0 : occ p t"
                ]
            },
            {
                "tactic_sig": "absurd ( occ _i Z_leaf ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i Z_leaf ) .",
                "tactic_args": [
                    "c17_goal : or (occ p t) (eq n p)",
                    "c9_p : Z"
                ],
                "tactic_res": [
                    "c19_goal : not (occ p Z_leaf)",
                    "c20_goal : occ p Z_leaf"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : not (occ p Z_leaf)",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c20_goal : occ p Z_leaf",
                    "c17_H0 : occ p Z_leaf",
                    "c9_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "now left .",
                "tactic_sig_no_out_arg": "now left .",
                "tactic_args": [
                    "c18_goal : or (occ p t) (eq n p)"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i _i .",
                "tactic_sig_no_out_arg": "apply _i with _i _i .",
                "tactic_args": [
                    "c6_goal : search_tree t",
                    "_global_search_tree_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       search_tree t2",
                    "c2_n : Z",
                    "_global_Z_leaf : Z_btree"
                ],
                "tactic_res": [
                    "c21_goal : search_tree (Z_bnode n Z_leaf t)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c21_goal : search_tree (Z_bnode n Z_leaf t)",
                    "c2_H : search_tree (Z_bnode n Z_leaf t)",
                    "c2_t : Z_btree",
                    "c2_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_2",
        "proof": [
            {
                "tactic_sig": "Lemma rm_2 : q < n .",
                "tactic_sig_no_out_arg": "Lemma rm_2 : q < n .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : Z.lt q n",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c1_goal : Z.lt q n",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c2_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), Z.lt q n"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H H0 H1 H2 H3 H4 .",
                "tactic_args": [
                    "c2_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), Z.lt q n"
                ],
                "tactic_res": [
                    "c3_goal : Z.lt q n",
                    "c3_H : occ q (Z_bnode p t1 t2)",
                    "c3_H0 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q",
                    "c3_H1 : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2)",
                    "c3_H2 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\nor (occ q0 t0) (eq q q0)",
                    "c3_H3 : not (occ q t0)",
                    "c3_H4 : search_tree t0"
                ]
            },
            {
                "tactic_sig": "elim ( maj_l ( _i := _i ) ( _i := ( Z_bnode _i _i _i ) ) ( _i := _i ) ) .",
                "tactic_sig_no_out_arg": "elim ( maj_l ( _i := _i ) ( _i := ( Z_bnode _i _i _i ) ) ( _i := _i ) ) .",
                "tactic_args": [
                    "c3_goal : Z.lt q n",
                    "c1_n : Z",
                    "c1_n : Z",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": [
                    "c4_goal : forall _ : forall (z' : Z) (_ : occ z' (Z_bnode p t1 t2)), Z.lt z' n,\nZ.lt q n",
                    "c5_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c4_goal : forall _ : forall (z' : Z) (_ : occ z' (Z_bnode p t1 t2)), Z.lt z' n,\nZ.lt q n",
                    "c3_H : occ q (Z_bnode p t1 t2)",
                    "c1_q : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c5_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_3",
        "proof": [
            {
                "tactic_sig": "Lemma rm_3 : ~ occ n ( Z_bnode q t0 t' ) .",
                "tactic_sig_no_out_arg": "Lemma rm_3 : ~ occ n ( Z_bnode q t0 t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : not (occ n (Z_bnode q t0 t'))",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H .",
                "tactic_args": [
                    "c1_goal : not (occ n (Z_bnode q t0 t'))"
                ],
                "tactic_res": [
                    "c2_goal : False",
                    "c2_H : occ n (Z_bnode q t0 t')"
                ]
            },
            {
                "tactic_sig": "case ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "case ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : False",
                    "c2_H : occ n (Z_bnode q t0 t')"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq q n, False",
                    "c4_goal : forall _ : or (occ n t0) (occ n t'), False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro eg .",
                "tactic_args": [
                    "c3_goal : forall _ : eq q n, False"
                ],
                "tactic_res": [
                    "c5_goal : False",
                    "c5_eg : eq q n"
                ]
            },
            {
                "tactic_sig": "absurd ( _i < _i ) .",
                "tactic_sig_no_out_arg": "absurd ( _i < _i ) .",
                "tactic_args": [
                    "c5_goal : False",
                    "c1_q : Z",
                    "c1_q : Z"
                ],
                "tactic_res": [
                    "c6_goal : not (Z.lt q q)",
                    "c7_goal : Z.lt q q"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c6_goal : not (Z.lt q q)",
                    "_global_Z.lt_irrefl : forall x : Z, not (Z.lt x x)"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "pattern _i at 2 .",
                "tactic_sig_no_out_arg": "pattern _i at 2 .",
                "tactic_args": [
                    "c7_goal : Z.lt q q",
                    "c1_q : Z"
                ],
                "tactic_res": [
                    "c8_goal : (fun z : Z => Z.lt q z) q"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c8_goal : (fun z : Z => Z.lt q z) q",
                    "c5_eg : eq q n"
                ],
                "tactic_res": [
                    "c9_goal : Z.lt q n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c9_goal : Z.lt q n",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro D .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ n t0) (occ n t'), False"
                ],
                "tactic_res": [
                    "c10_goal : False",
                    "c10_D : or (occ n t0) (occ n t')"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c10_goal : False",
                    "c10_D : or (occ n t0) (occ n t')"
                ],
                "tactic_res": [
                    "c11_goal : forall _ : occ n t0, False",
                    "c12_goal : forall _ : occ n t', False"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H' .",
                "tactic_args": [
                    "c11_goal : forall _ : occ n t0, False"
                ],
                "tactic_res": [
                    "c13_goal : False",
                    "c13_H' : occ n t0"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H' .",
                "tactic_args": [
                    "c12_goal : forall _ : occ n t', False"
                ],
                "tactic_res": [
                    "c14_goal : False",
                    "c14_H' : occ n t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c13_goal : False",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c15_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), False"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H0 H1 H2 H3 H4 H5 .",
                "tactic_args": [
                    "c15_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), False"
                ],
                "tactic_res": [
                    "c16_goal : False",
                    "c16_H0 : occ q (Z_bnode p t1 t2)",
                    "c16_H1 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q",
                    "c16_H2 : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2)",
                    "c16_H3 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\nor (occ q0 t0) (eq q q0)",
                    "c16_H4 : not (occ q t0)",
                    "c16_H5 : search_tree t0"
                ]
            },
            {
                "tactic_sig": "absurd ( occ _i ( Z_bnode _i _i _i ) ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i ( Z_bnode _i _i _i ) ) .",
                "tactic_args": [
                    "c16_goal : False",
                    "c1_n : Z",
                    "c1_p : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c17_goal : not (occ n (Z_bnode p t1 t2))",
                    "c18_goal : occ n (Z_bnode p t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c18_goal : occ n (Z_bnode p t1 t2)",
                    "c16_H2 : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2)",
                    "c13_H' : occ n t0",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i _i .",
                "tactic_sig_no_out_arg": "apply _i with _i _i .",
                "tactic_args": [
                    "c17_goal : not (occ n (Z_bnode p t1 t2))",
                    "_global_not_left : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2))\n         (p : Z) (_ : Z.ge p n), not (occ p t1)",
                    "c1_n : Z",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": [
                    "c19_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c20_goal : Z.ge n n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c20_goal : Z.ge n n",
                    "_global_Z.le_ge : forall (n m : Z) (_ : Z.le n m), Z.ge m n"
                ],
                "tactic_res": [
                    "c21_goal : Z.le n n"
                ]
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c21_goal : Z.le n n",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c14_goal : False",
                    "c1_n : Z",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": [
                    "c22_goal : not (occ n t')",
                    "c23_goal : occ n t'"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c23_goal : occ n t'",
                    "c14_H' : occ n t'",
                    "c1_t' : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_sig_no_out_arg": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_args": [
                    "c22_goal : not (occ n t')",
                    "_global_not_right : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2))\n         (p : Z) (_ : Z.le p n), not (occ p t2)",
                    "c1_n : Z",
                    "_global_Z_bnode : forall (_ : Z) (_ : Z_btree) (_ : Z_btree), Z_btree",
                    "c1_p : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c24_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c25_goal : Z.le n n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c24_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with zarith .",
                "tactic_sig_no_out_arg": "auto with zarith .",
                "tactic_args": [
                    "c25_goal : Z.le n n",
                    "c1_n : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_4",
        "proof": [
            {
                "tactic_sig": "Lemma rm_4 : forall p0 : Z , occ p0 ( Z_bnode q t0 t' ) -> occ p0 ( Z_bnode n ( Z_bnode p t1 t2 ) t' ) .",
                "tactic_sig_no_out_arg": "Lemma rm_4 : forall p0 : Z , occ p0 ( Z_bnode q t0 t' ) -> occ p0 ( Z_bnode n ( Z_bnode p t1 t2 ) t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode q t0 t')),\nocc p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H .",
                "tactic_args": [
                    "c1_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode q t0 t')),\nocc p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ],
                "tactic_res": [
                    "c2_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c2_p0 : Z",
                    "c2_H : occ p0 (Z_bnode q t0 t')"
                ]
            },
            {
                "tactic_sig": "case ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "case ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c2_H : occ p0 (Z_bnode q t0 t')"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq q p0, occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c4_goal : forall _ : or (occ p0 t0) (occ p0 t'),\nocc p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro eg .",
                "tactic_args": [
                    "c3_goal : forall _ : eq q p0, occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ],
                "tactic_res": [
                    "c5_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c5_eg : eq q p0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c5_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c5_eg : eq q p0"
                ],
                "tactic_res": [
                    "c7_goal : forall (_ : occ p0 (Z_bnode p t1 t2))\n  (_ : forall (p1 : Z) (_ : occ p1 (Z_bnode p t1 t2)), Z.le p1 p0)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q : Z) (_ : occ q (Z_bnode p t1 t2)),\n       or (occ q t0) (eq p0 q)) (_ : not (occ p0 t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : forall (_ : occ p0 (Z_bnode p t1 t2))\n  (_ : forall (p1 : Z) (_ : occ p1 (Z_bnode p t1 t2)), Z.le p1 p0)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q : Z) (_ : occ q (Z_bnode p t1 t2)),\n       or (occ q t0) (eq p0 q)) (_ : not (occ p0 t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c2_p0 : Z",
                    "c1_t0 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro D .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ p0 t0) (occ p0 t'),\nocc p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ],
                "tactic_res": [
                    "c8_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c8_D : or (occ p0 t0) (occ p0 t')"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c8_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c8_D : or (occ p0 t0) (occ p0 t')"
                ],
                "tactic_res": [
                    "c9_goal : forall _ : occ p0 t0, occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c10_goal : forall _ : occ p0 t', occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c10_goal : forall _ : occ p0 t', occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c2_p0 : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H' .",
                "tactic_args": [
                    "c9_goal : forall _ : occ p0 t0, occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ],
                "tactic_res": [
                    "c11_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c11_H' : occ p0 t0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c11_goal : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c12_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c12_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), occ p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c11_H' : occ p0 t0",
                    "c2_p0 : Z",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_5",
        "proof": [
            {
                "tactic_sig": "Lemma rm_5 : forall p0 : Z , occ p0 ( Z_bnode n ( Z_bnode p t1 t2 ) t' ) -> occ p0 ( Z_bnode q t0 t' ) \\/ n = p0 .",
                "tactic_sig_no_out_arg": "Lemma rm_5 : forall p0 : Z , occ p0 ( Z_bnode n ( Z_bnode p t1 t2 ) t' ) -> occ p0 ( Z_bnode q t0 t' ) \\/ n = p0 .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros p0 H .",
                "tactic_args": [
                    "c1_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c2_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c2_p0 : Z",
                    "c2_H : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "case ( occ_inv _i ) .",
                "tactic_sig_no_out_arg": "case ( occ_inv _i ) .",
                "tactic_args": [
                    "c2_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c2_H : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')"
                ],
                "tactic_res": [
                    "c3_goal : forall _ : eq n p0, or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c4_goal : forall _ : or (occ p0 (Z_bnode p t1 t2)) (occ p0 t'),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro e .",
                "tactic_args": [
                    "c3_goal : forall _ : eq n p0, or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c5_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c5_e : eq n p0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c5_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c5_e : eq n p0"
                ],
                "tactic_res": [
                    "c6_goal : or (occ n (Z_bnode q t0 t')) (eq n n)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : or (occ n (Z_bnode q t0 t')) (eq n n)",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t' : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H1 .",
                "tactic_args": [
                    "c4_goal : forall _ : or (occ p0 (Z_bnode p t1 t2)) (occ p0 t'),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c7_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c7_H1 : or (occ p0 (Z_bnode p t1 t2)) (occ p0 t')"
                ]
            },
            {
                "tactic_sig": "case _i .",
                "tactic_sig_no_out_arg": "case _i .",
                "tactic_args": [
                    "c7_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c7_H1 : or (occ p0 (Z_bnode p t1 t2)) (occ p0 t')"
                ],
                "tactic_res": [
                    "c8_goal : forall _ : occ p0 (Z_bnode p t1 t2),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c9_goal : forall _ : occ p0 t', or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H'1 .",
                "tactic_args": [
                    "c8_goal : forall _ : occ p0 (Z_bnode p t1 t2),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c10_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c10_H'1 : occ p0 (Z_bnode p t1 t2)"
                ]
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro H'1 .",
                "tactic_args": [
                    "c9_goal : forall _ : occ p0 t', or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c11_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c11_H'1 : occ p0 t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c10_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c12_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H2 H3 H4 H5 H6 H7 .",
                "tactic_args": [
                    "c12_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c13_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c13_H2 : occ q (Z_bnode p t1 t2)",
                    "c13_H3 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q",
                    "c13_H4 : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2)",
                    "c13_H5 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\nor (occ q0 t0) (eq q q0)",
                    "c13_H6 : not (occ q t0)",
                    "c13_H7 : search_tree t0"
                ]
            },
            {
                "tactic_sig": "elim ( _i _i _i ) .",
                "tactic_sig_no_out_arg": "elim ( _i _i _i ) .",
                "tactic_args": [
                    "c13_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c13_H5 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\nor (occ q0 t0) (eq q q0)",
                    "c2_p0 : Z",
                    "c10_H'1 : occ p0 (Z_bnode p t1 t2)"
                ],
                "tactic_res": [
                    "c14_goal : forall _ : occ p0 t0, or (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c15_goal : forall _ : eq q p0, or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ]
            },
            {
                "tactic_sig": "left .",
                "tactic_sig_no_out_arg": "left .",
                "tactic_args": [
                    "c14_goal : forall _ : occ p0 t0, or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c16_goal : occ p0 (Z_bnode q t0 t')",
                    "c16_H0 : occ p0 t0"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c16_goal : occ p0 (Z_bnode q t0 t')",
                    "c16_H0 : occ p0 t0",
                    "c2_p0 : Z",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "left .",
                "tactic_sig_no_out_arg": "left .",
                "tactic_args": [
                    "c15_goal : forall _ : eq q p0, or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c17_goal : occ p0 (Z_bnode q t0 t')",
                    "c17_H0 : eq q p0"
                ]
            },
            {
                "tactic_sig": "subst _i .",
                "tactic_sig_no_out_arg": "subst _i .",
                "tactic_args": [
                    "c17_goal : occ p0 (Z_bnode q t0 t')",
                    "c2_p0 : Z",
                    "c17_H0 : eq q p0"
                ],
                "tactic_res": [
                    "c18_goal : occ q (Z_bnode q t0 t')",
                    "c18_H : occ q (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c18_H1 : or (occ q (Z_bnode p t1 t2)) (occ q t')",
                    "c18_H'1 : occ q (Z_bnode p t1 t2)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c18_goal : occ q (Z_bnode q t0 t')",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "left .",
                "tactic_sig_no_out_arg": "left .",
                "tactic_args": [
                    "c11_goal : or (occ p0 (Z_bnode q t0 t')) (eq n p0)"
                ],
                "tactic_res": [
                    "c19_goal : occ p0 (Z_bnode q t0 t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c19_goal : occ p0 (Z_bnode q t0 t')",
                    "c11_H'1 : occ p0 t'",
                    "c2_p0 : Z",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_6",
        "proof": [
            {
                "tactic_sig": "Lemma rm_6 : search_tree ( Z_bnode q t0 t' ) .",
                "tactic_sig_no_out_arg": "Lemma rm_6 : search_tree ( Z_bnode q t0 t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : search_tree (Z_bnode q t0 t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "right .",
                "tactic_sig_no_out_arg": "right .",
                "tactic_args": [
                    "c1_goal : search_tree (Z_bnode q t0 t')"
                ],
                "tactic_res": [
                    "c2_goal : search_tree t0",
                    "c3_goal : search_tree t'",
                    "c4_goal : maj q t0",
                    "c5_goal : min q t'"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c2_goal : search_tree t0",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), search_tree t0"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c6_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), search_tree t0",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_sig_no_out_arg": "apply _i with _i ( _i _i _i _i ) .",
                "tactic_args": [
                    "c3_goal : search_tree t'",
                    "_global_search_tree_r : forall (n : Z) (t1 t2 : Z_btree) (_ : search_tree (Z_bnode n t1 t2)),\n       search_tree t2",
                    "c1_n : Z",
                    "_global_Z_bnode : forall (_ : Z) (_ : Z_btree) (_ : Z_btree), Z_btree",
                    "c1_p : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree"
                ],
                "tactic_res": [
                    "c7_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c7_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c4_goal : maj q t0",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c8_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), maj q t0"
                ]
            },
            {
                "tactic_sig": "intros _o _o _o _o _o _o .",
                "tactic_sig_no_out_arg": "intros H H0 H1 H2 H3 H4 .",
                "tactic_args": [
                    "c8_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), maj q t0"
                ],
                "tactic_res": [
                    "c9_goal : maj q t0",
                    "c9_H : occ q (Z_bnode p t1 t2)",
                    "c9_H0 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q",
                    "c9_H1 : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2)",
                    "c9_H2 : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\nor (occ q0 t0) (eq q q0)",
                    "c9_H3 : not (occ q t0)",
                    "c9_H4 : search_tree t0"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c9_goal : maj q t0",
                    "_global_maj_intro : forall (z : Z) (t : Z_btree)\n         (_ : forall (z' : Z) (_ : occ z' t), Z.lt z' z), \n       maj z t"
                ],
                "tactic_res": [
                    "c10_goal : forall (z' : Z) (_ : occ z' t0), Z.lt z' q"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q0 H5 .",
                "tactic_args": [
                    "c10_goal : forall (z' : Z) (_ : occ z' t0), Z.lt z' q"
                ],
                "tactic_res": [
                    "c11_goal : Z.lt q0 q",
                    "c11_q0 : Z",
                    "c11_H5 : occ q0 t0"
                ]
            },
            {
                "tactic_sig": "elim ( Zle_lt_or_eq _ _ ( _i _i ( _i _i _i ) ) ) .",
                "tactic_sig_no_out_arg": "elim ( Zle_lt_or_eq _ _ ( _i _i ( _i _i _i ) ) ) .",
                "tactic_args": [
                    "c11_goal : Z.lt q0 q",
                    "c9_H0 : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q",
                    "c11_q0 : Z",
                    "c9_H1 : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2)",
                    "c11_q0 : Z",
                    "c11_H5 : occ q0 t0"
                ],
                "tactic_res": [
                    "c12_goal : forall _ : Z.lt q0 q, Z.lt q0 q",
                    "c13_goal : forall _ : eq q0 q, Z.lt q0 q"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c12_goal : forall _ : Z.lt q0 q, Z.lt q0 q",
                    "c11_q0 : Z",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "intro _o .",
                "tactic_sig_no_out_arg": "intro eg .",
                "tactic_args": [
                    "c13_goal : forall _ : eq q0 q, Z.lt q0 q"
                ],
                "tactic_res": [
                    "c14_goal : Z.lt q0 q",
                    "c14_eg : eq q0 q"
                ]
            },
            {
                "tactic_sig": "absurd ( occ _i _i ) .",
                "tactic_sig_no_out_arg": "absurd ( occ _i _i ) .",
                "tactic_args": [
                    "c14_goal : Z.lt q0 q",
                    "c11_q0 : Z",
                    "c1_t0 : Z_btree"
                ],
                "tactic_res": [
                    "c15_goal : not (occ q0 t0)",
                    "c16_goal : occ q0 t0"
                ]
            },
            {
                "tactic_sig": "auto .",
                "tactic_sig_no_out_arg": "auto .",
                "tactic_args": [
                    "c16_goal : occ q0 t0",
                    "c11_H5 : occ q0 t0",
                    "c11_q0 : Z",
                    "c1_t0 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "rewrite _i .",
                "tactic_sig_no_out_arg": "rewrite _i .",
                "tactic_args": [
                    "c15_goal : not (occ q0 t0)",
                    "c14_eg : eq q0 q"
                ],
                "tactic_res": [
                    "c17_goal : not (occ q t0)"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c17_goal : not (occ q t0)",
                    "c9_H3 : not (occ q t0)",
                    "c1_t0 : Z_btree",
                    "c1_q : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c5_goal : min q t'",
                    "_global_min_intro : forall (z : Z) (t : Z_btree)\n         (_ : forall (z' : Z) (_ : occ z' t), Z.lt z z'), \n       min z t"
                ],
                "tactic_res": [
                    "c18_goal : forall (z' : Z) (_ : occ z' t'), Z.lt q z'"
                ]
            },
            {
                "tactic_sig": "intros _o _o .",
                "tactic_sig_no_out_arg": "intros q0 H .",
                "tactic_args": [
                    "c18_goal : forall (z' : Z) (_ : occ z' t'), Z.lt q z'"
                ],
                "tactic_res": [
                    "c19_goal : Z.lt q q0",
                    "c19_q0 : Z",
                    "c19_H : occ q0 t'"
                ]
            },
            {
                "tactic_sig": "apply _i with _i .",
                "tactic_sig_no_out_arg": "apply _i with _i .",
                "tactic_args": [
                    "c19_goal : Z.lt q q0",
                    "_global_Z.lt_trans : forall (n m p : Z) (_ : Z.lt n m) (_ : Z.lt m p), Z.lt n p",
                    "c1_n : Z"
                ],
                "tactic_res": [
                    "c20_goal : Z.lt q n",
                    "c21_goal : Z.lt n q0"
                ]
            },
            {
                "tactic_sig": "elim _i .",
                "tactic_sig_no_out_arg": "elim _i .",
                "tactic_args": [
                    "c20_goal : Z.lt q n",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q"
                ],
                "tactic_res": [
                    "c22_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), Z.lt q n"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c22_goal : forall (_ : occ q (Z_bnode p t1 t2))\n  (_ : forall (p0 : Z) (_ : occ p0 (Z_bnode p t1 t2)), Z.le p0 q)\n  (_ : forall (q : Z) (_ : occ q t0), occ q (Z_bnode p t1 t2))\n  (_ : forall (q0 : Z) (_ : occ q0 (Z_bnode p t1 t2)),\n       or (occ q0 t0) (eq q q0)) (_ : not (occ q t0))\n  (_ : search_tree t0), Z.lt q n",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "elim ( min_r ( _i := _i ) ( _i := ( Z_bnode _i _i _i ) ) ( _i := _i ) ) .",
                "tactic_sig_no_out_arg": "elim ( min_r ( _i := _i ) ( _i := ( Z_bnode _i _i _i ) ) ( _i := _i ) ) .",
                "tactic_args": [
                    "c21_goal : Z.lt n q0",
                    "c1_n : Z",
                    "c1_n : Z",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": [
                    "c23_goal : forall _ : forall (z' : Z) (_ : occ z' t'), Z.lt n z', Z.lt n q0",
                    "c24_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c23_goal : forall _ : forall (z' : Z) (_ : occ z' t'), Z.lt n z', Z.lt n q0",
                    "c19_H : occ q0 t'",
                    "c19_q0 : Z",
                    "c1_t' : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c24_goal : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm_root_lemma",
        "proof": [
            {
                "tactic_sig": "Lemma rm_root_lemma : RM n ( Z_bnode n ( Z_bnode p t1 t2 ) t' ) ( Z_bnode q t0 t' ) .",
                "tactic_sig_no_out_arg": "Lemma rm_root_lemma : RM n ( Z_bnode n ( Z_bnode p t1 t2 ) t' ) ( Z_bnode q t0 t' ) .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : RM n (Z_bnode n (Z_bnode p t1 t2) t') (Z_bnode q t0 t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t1 : Z_btree",
                    "c1_p : Z",
                    "c1_n : Z"
                ]
            },
            {
                "tactic_sig": "apply _i .",
                "tactic_sig_no_out_arg": "apply _i .",
                "tactic_args": [
                    "c1_goal : RM n (Z_bnode n (Z_bnode p t1 t2) t') (Z_bnode q t0 t')",
                    "_global_rm_intro : forall (n : Z) (t t' : Z_btree) (_ : not (occ n t'))\n         (_ : forall (p : Z) (_ : occ p t'), occ p t)\n         (_ : forall (p : Z) (_ : occ p t), or (occ p t') (eq n p))\n         (_ : search_tree t'), RM n t t'"
                ],
                "tactic_res": [
                    "c2_goal : not (occ n (Z_bnode q t0 t'))",
                    "c3_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode q t0 t')),\nocc p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c4_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c5_goal : search_tree (Z_bnode q t0 t')"
                ]
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c2_goal : not (occ n (Z_bnode q t0 t'))",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree",
                    "c1_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c3_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode q t0 t')),\nocc p0 (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c4_goal : forall (p0 : Z) (_ : occ p0 (Z_bnode n (Z_bnode p t1 t2) t')),\nor (occ p0 (Z_bnode q t0 t')) (eq n p0)",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_t1 : Z_btree",
                    "c1_t2 : Z_btree",
                    "c1_t' : Z_btree",
                    "c1_n : Z",
                    "c1_p : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "auto with searchtrees .",
                "tactic_sig_no_out_arg": "auto with searchtrees .",
                "tactic_args": [
                    "c5_goal : search_tree (Z_bnode q t0 t')",
                    "c1_R : RMAX (Z_bnode p t1 t2) t0 q",
                    "c1_t0 : Z_btree",
                    "c1_q : Z",
                    "c1_S : search_tree (Z_bnode n (Z_bnode p t1 t2) t')",
                    "c1_t' : Z_btree"
                ],
                "tactic_res": []
            }
        ]
    },
    {
        "lemma_name": "rm",
        "proof": [
            {
                "tactic_sig": "Definition rm : forall ( n : Z ) ( t : Z_btree ) , rm_spec n t .",
                "tactic_sig_no_out_arg": "Definition rm : forall ( n : Z ) ( t : Z_btree ) , rm_spec n t .",
                "tactic_args": [
                    "c0_goal : "
                ],
                "tactic_res": [
                    "c1_goal : forall (n : Z) (t : Z_btree), rm_spec n t"
                ]
            },
            {
                "tactic_sig": "refine ( fix rm ( n : Z ) ( t : Z_btree ) { struct t } : rm_spec n t := match t return rm_spec n t with | Z_leaf => fun h => exist _ Z_leaf _ | Z_bnode z t1 t2 => match Z_le_gt_dec n z with | left H0 => match Z_le_lt_eq_dec _ _ H0 with | left H1 => fun h => match rm n t1 _ with | exist _ t'1 H'1 => exist _ ( Z_bnode z t'1 t2 ) _ end | right H1 => match H1 in ( _ = x ) return rm_spec n ( Z_bnode x t1 t2 ) with | refl_equal => match t1 as t return rm_spec n ( Z_bnode n t t2 ) with | Z_leaf => fun h => exist _ t2 _ | Z_bnode p' t'1 t'2 => fun h => match rmax ( t := ( Z_bnode p' t'1 t'2 ) ) _ _ with existT _ q ( exist _ t'' H3 ) => exist _ ( Z_bnode q t'' t2 ) _ end end end end | right H0 => fun h => match rm n t2 _ with | exist _ t'2 H'2 => exist _ ( Z_bnode z t1 t'2 ) _ end end end ) .",
                "tactic_sig_no_out_arg": "refine ( fix rm ( n : Z ) ( t : Z_btree ) { struct t } : rm_spec n t := match t return rm_spec n t with | Z_leaf => fun h => exist _ Z_leaf _ | Z_bnode z t1 t2 => match Z_le_gt_dec n z with | left H0 => match Z_le_lt_eq_dec _ _ H0 with | left H1 => fun h => match rm n t1 _ with | exist _ t'1 H'1 => exist _ ( Z_bnode z t'1 t2 ) _ end | right H1 => match H1 in ( _ = x ) return rm_spec n ( Z_bnode x t1 t2 ) with | refl_equal => match t1 as t return rm_spec n ( Z_bnode n t t2 ) with | Z_leaf => fun h => exist _ t2 _ | Z_bnode p' t'1 t'2 => fun h => match rmax ( t := ( Z_bnode p' t'1 t'2 ) ) _ _ with existT _ q ( exist _ t'' H3 ) => exist _ ( Z_bnode q t'' t2 ) _ end end end end | right H0 => fun h => match rm n t2 _ with | exist _ t'2 H'2 => exist _ ( Z_bnode z t1 t'2 ) _ end end end ) .",
                "tactic_args": [
                    "c1_goal : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": [
                    "c2_goal : RM n Z_leaf Z_leaf",
                    "c2_h : search_tree Z_leaf",
                    "c2_t : Z_btree",
                    "c2_n : Z",
                    "c2_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c3_goal : search_tree t1",
                    "c3_h : search_tree (Z_bnode z t1 t2)",
                    "c3_H1 : Z.lt n z",
                    "c3_H0 : Z.le n z",
                    "c3_t2 : Z_btree",
                    "c3_t1 : Z_btree",
                    "c3_z : Z",
                    "c3_t : Z_btree",
                    "c3_n : Z",
                    "c3_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c4_goal : RM n (Z_bnode z t1 t2) (Z_bnode z t'1 t2)",
                    "c4_H'1 : RM n t1 t'1",
                    "c4_t'1 : Z_btree",
                    "c4_h : search_tree (Z_bnode z t1 t2)",
                    "c4_H1 : Z.lt n z",
                    "c4_H0 : Z.le n z",
                    "c4_t2 : Z_btree",
                    "c4_t1 : Z_btree",
                    "c4_z : Z",
                    "c4_t : Z_btree",
                    "c4_n : Z",
                    "c4_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c5_goal : RM n (Z_bnode n Z_leaf t2) t2",
                    "c5_h : search_tree (Z_bnode n Z_leaf t2)",
                    "c5_H1 : eq n z",
                    "c5_H0 : Z.le n z",
                    "c5_t2 : Z_btree",
                    "c5_t1 : Z_btree",
                    "c5_z : Z",
                    "c5_t : Z_btree",
                    "c5_n : Z",
                    "c5_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c6_goal : search_tree (Z_bnode p' t'1 t'2)",
                    "c6_h : search_tree (Z_bnode n (Z_bnode p' t'1 t'2) t2)",
                    "c6_t'2 : Z_btree",
                    "c6_t'1 : Z_btree",
                    "c6_p' : Z",
                    "c6_H1 : eq n z",
                    "c6_H0 : Z.le n z",
                    "c6_t2 : Z_btree",
                    "c6_t1 : Z_btree",
                    "c6_z : Z",
                    "c6_t : Z_btree",
                    "c6_n : Z",
                    "c6_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c7_goal : is_bnode (Z_bnode p' t'1 t'2)",
                    "c7_h : search_tree (Z_bnode n (Z_bnode p' t'1 t'2) t2)",
                    "c7_t'2 : Z_btree",
                    "c7_t'1 : Z_btree",
                    "c7_p' : Z",
                    "c7_H1 : eq n z",
                    "c7_H0 : Z.le n z",
                    "c7_t2 : Z_btree",
                    "c7_t1 : Z_btree",
                    "c7_z : Z",
                    "c7_t : Z_btree",
                    "c7_n : Z",
                    "c7_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c8_goal : RM n (Z_bnode n (Z_bnode p' t'1 t'2) t2) (Z_bnode q t'' t2)",
                    "c8_H3 : RMAX (Z_bnode p' t'1 t'2) t'' q",
                    "c8_t'' : Z_btree",
                    "c8_r : rmax_sig (Z_bnode p' t'1 t'2) q",
                    "c8_q : Z",
                    "c8_h : search_tree (Z_bnode n (Z_bnode p' t'1 t'2) t2)",
                    "c8_t'2 : Z_btree",
                    "c8_t'1 : Z_btree",
                    "c8_p' : Z",
                    "c8_H1 : eq n z",
                    "c8_H0 : Z.le n z",
                    "c8_t2 : Z_btree",
                    "c8_t1 : Z_btree",
                    "c8_z : Z",
                    "c8_t : Z_btree",
                    "c8_n : Z",
                    "c8_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c9_goal : search_tree t2",
                    "c9_h : search_tree (Z_bnode z t1 t2)",
                    "c9_H0 : Z.gt n z",
                    "c9_t2 : Z_btree",
                    "c9_t1 : Z_btree",
                    "c9_z : Z",
                    "c9_t : Z_btree",
                    "c9_n : Z",
                    "c9_rm : forall (n : Z) (t : Z_btree), rm_spec n t",
                    "c10_goal : RM n (Z_bnode z t1 t2) (Z_bnode z t1 t'2)",
                    "c10_H'2 : RM n t2 t'2",
                    "c10_t'2 : Z_btree",
                    "c10_h : search_tree (Z_bnode z t1 t2)",
                    "c10_H0 : Z.gt n z",
                    "c10_t2 : Z_btree",
                    "c10_t1 : Z_btree",
                    "c10_z : Z",
                    "c10_t : Z_btree",
                    "c10_n : Z",
                    "c10_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ]
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c2_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c2_goal : RM n Z_leaf Z_leaf",
                    "c2_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c3_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c3_goal : search_tree t1",
                    "c3_h : search_tree (Z_bnode z t1 t2)",
                    "c3_t1 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c4_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c4_goal : RM n (Z_bnode z t1 t2) (Z_bnode z t'1 t2)",
                    "c4_H'1 : RM n t1 t'1",
                    "c4_t'1 : Z_btree",
                    "c4_h : search_tree (Z_bnode z t1 t2)",
                    "c4_H1 : Z.lt n z",
                    "c4_t1 : Z_btree",
                    "c4_t2 : Z_btree",
                    "c4_z : Z",
                    "c4_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c5_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c5_goal : RM n (Z_bnode n Z_leaf t2) t2",
                    "c5_h : search_tree (Z_bnode n Z_leaf t2)",
                    "c5_t2 : Z_btree",
                    "c5_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c6_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c6_goal : search_tree (Z_bnode p' t'1 t'2)",
                    "c6_h : search_tree (Z_bnode n (Z_bnode p' t'1 t'2) t2)",
                    "c6_t'1 : Z_btree",
                    "c6_t'2 : Z_btree",
                    "c6_p' : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c7_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c8_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c8_goal : RM n (Z_bnode n (Z_bnode p' t'1 t'2) t2) (Z_bnode q t'' t2)",
                    "c8_H3 : RMAX (Z_bnode p' t'1 t'2) t'' q",
                    "c8_t'' : Z_btree",
                    "c8_q : Z",
                    "c8_h : search_tree (Z_bnode n (Z_bnode p' t'1 t'2) t2)",
                    "c8_t'1 : Z_btree",
                    "c8_t'2 : Z_btree",
                    "c8_p' : Z",
                    "c8_t2 : Z_btree",
                    "c8_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c9_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c9_goal : search_tree t2",
                    "c9_h : search_tree (Z_bnode z t1 t2)",
                    "c9_t2 : Z_btree"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "clear _i .",
                "tactic_sig_no_out_arg": "clear _i .",
                "tactic_args": [
                    "c10_rm : forall (n : Z) (t : Z_btree), rm_spec n t"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "eauto with searchtrees zarith .",
                "tactic_sig_no_out_arg": "eauto with searchtrees zarith .",
                "tactic_args": [
                    "c10_goal : RM n (Z_bnode z t1 t2) (Z_bnode z t1 t'2)",
                    "c10_H'2 : RM n t2 t'2",
                    "c10_t'2 : Z_btree",
                    "c10_h : search_tree (Z_bnode z t1 t2)",
                    "c10_H0 : Z.gt n z",
                    "c10_t1 : Z_btree",
                    "c10_t2 : Z_btree",
                    "c10_z : Z",
                    "c10_n : Z"
                ],
                "tactic_res": []
            },
            {
                "tactic_sig": "now cbn .",
                "tactic_sig_no_out_arg": "now cbn .",
                "tactic_args": [
                    "c7_goal : is_bnode (Z_bnode p' t'1 t'2)"
                ],
                "tactic_res": []
            }
        ]
    }
]