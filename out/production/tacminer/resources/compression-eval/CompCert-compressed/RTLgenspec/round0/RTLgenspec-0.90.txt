extracted tactics -----------
Ltac custom0 H0 :=  econstructor; [eapply H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom2  :=  econstructor; [eauto | eauto | eauto | .. ].
Ltac custom4 H0 H1 :=  apply H0 with H1; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom5 H0 H1 H3 :=  apply H0 with H1; [auto | eapply H3; [eauto 2 with rtlg | eauto 2 with rtlg |  |  | eauto 2 with rtlg | .. ] | .. ].
Ltac custom6 H0 :=  eapply H0; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom7  :=  econstructor; [eauto | .. ].
Ltac custom8 H0 :=  econstructor; [eapply H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | eauto with rtlg | .. ].
Ltac custom9 H0 H1 H4 :=  apply H0 with H1; [auto | eapply H4; [ | .. ] | .. ].
Ltac custom10 H0 :=  eapply H0; [eauto with rtlg | eauto with rtlg |  | eauto with rtlg | .. ].
Ltac custom12 H0 H8 :=  intros until H0; [unfold H8 | .. ].
Ltac custom13 H0 :=  eapply H0; [eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | .. ].
Ltac custom14 H0 H1 H2 H3 H4 H5 H6 :=  simpl; [intros H0 H1 H2 H3 H4 H5 H6 | .. ].
Ltac custom15 H0 H1 H2 H3 H4 H5 H6 H7 H8 :=  generalize H0; [unfold H1; [caseEq ( nth_error ( map_letvars H2 ) H3 ); [intros H4 H5 H6 | intros H7 H8 | .. ] | .. ] | .. ].
Ltac custom16  :=  custom7 ; [eauto | .. ].
Ltac custom17 H0 :=  apply H0; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom19 H0 :=  eapply H0; [eauto | .. ].
Ltac custom20 H0 :=  custom16 ; [custom19 H0; [eauto | .. ] | .. ].
Ltac custom21  :=  econstructor; [eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom22  :=  split; [ | auto | .. ].
Ltac custom23  :=  split; [ | congruence | .. ].
Ltac custom24 H0 H1 H2 :=  custom9 H0 H1 H2; [eauto with rtlg | .. ].
Ltac custom25 H0 :=  apply H0; [ | eauto 3 with rtlg | .. ].
Ltac custom26  :=  constructor; [ | auto | .. ].
Ltac custom27 H0 :=  apply H0; [auto with coqlib | .. ].
Ltac custom28 H0 :=  left; [exists H0; [auto | .. ] | .. ].
Ltac custom29 H0 :=  custom18 H0; [eauto with rtlg | .. ].
Ltac custom30  :=  constructor; [eauto with rtlg | .. ].
Ltac custom31 H0 :=  intro H0; [induction H0 | .. ].
Ltac custom32 H0 H1 H2 :=  intros H0 H1 H2; [left; [eauto with rtlg | .. ] | .. ].
Ltac custom33 H0 :=  monadInv H0; [eauto with rtlg]. eauto with rtlg.
Ltac custom34  :=  right; [eauto with rtlg | .. ].
Ltac custom35 H0 H1 :=  apply H0 with H1; [eauto 3 with rtlg | .. ].
Ltac custom36 H0 :=  inv H0; [ | custom34  | .. ].
Ltac custom37 H0 :=  inv H0; [eauto with rtlg].
Ltac custom38 H0 :=  custom19 H0; [eauto | .. ].
Ltac custom39  :=  custom2 ; [eauto | .. ].
Ltac custom40 H0 H1 :=  generalize H0; [unfold H1 | .. ].
Ltac custom41  :=  constructor; [auto | .. ].
Ltac custom42  :=  induction 1; [econstructor | .. ].
Ltac custom43  :=  econstructor; [eauto with rtlg | .. ].
Ltac custom44 H0 H1 H2 H3 H4 H5 H6 H7 :=  intros H0 H1 H2 H3 H4 H5 H6 H7; [monadInv H7 | .. ].
Ltac custom45 H0 H1 :=  intros H0 H1; [inv H1 | .. ].
Ltac custom46 H0 H1 :=  intros H0 H1; [induction H1 | .. ].
Ltac custom47 H0 H1 H2 :=  intros H0 H1 H2; [inv H2 | .. ].
Ltac custom48 H0 H1 H2 :=  intros H0 H1 H2; [pose ( AT := fun pc i => instr_at_incr H0 H1 pc i H2 ) | .. ].
Ltac custom49 H0 :=  monadInv H0; [eauto with rtlg].
---------------------------
Num proofs: 36
Num training proofs: 20
Original size: 1276
Compressed total size: 862
Training size: 918
(2) (3) Testing size: 358
(2) (3) Compressed testing size: 226
(2) (3) Compression rate: 158.41
Compressed size + lib: 1020 ( 862 corpus / 158 library )
[1] numTactics: 46
[1] avrgTacticSize: 2.85
[1] maxTacSize: 10
[1] numProofsCompressed/total: 13 / 16
[1] numAvgApplications: 4.41
[1] numTotalApplications: 203
Compression rate: 1.2509803921568627
Num tactics in library: 46