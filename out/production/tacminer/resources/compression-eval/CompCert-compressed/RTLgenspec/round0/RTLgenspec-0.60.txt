extracted tactics -----------
Ltac custom0 H0 :=  econstructor; [eapply H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom2  :=  econstructor; [eauto | eauto | eauto | .. ].
Ltac custom3 H3 :=  econstructor; [eapply H3; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom4 H0 :=  eapply H0; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom5  :=  econstructor; [eauto | .. ].
Ltac custom6 H0 H1 H3 :=  apply H0 with H1; [auto | eapply H3; [eauto 2 with rtlg | eauto 2 with rtlg | .. ] | .. ].
Ltac custom7 H0 :=  econstructor; [custom4 H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | eauto with rtlg | .. ].
Ltac custom8 H0 :=  eapply H0; [eauto | .. ].
Ltac custom9 H0 :=  eapply H0; [eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | .. ].
Ltac custom10 H0 H1 :=  apply H0 with H1; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom11 H0 :=  apply H0; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom12  :=  custom5 ; [eauto | .. ].
Ltac custom13 H0 :=  custom12 ; [custom8 H0; [eauto | .. ] | .. ].
Ltac custom14 H0 :=  econstructor; [custom4 H0; [ |  | eauto with rtlg | .. ] | .. ].
Ltac custom15  :=  split; [ | auto | .. ].
Ltac custom16  :=  split; [ | congruence | .. ].
Ltac custom17 H0 :=  apply H0; [ | eauto 3 with rtlg | .. ].
Ltac custom18  :=  constructor; [ | auto | .. ].
Ltac custom19 H0 H1 :=  generalize H0; [unfold H1 | .. ].
Ltac custom20 H0 :=  intro H0; [induction H0 | .. ].
Ltac custom21 H0 :=  apply H0; [auto with coqlib | .. ].
Ltac custom22 H0 H1 :=  apply H0 with H1; [auto | .. ].
Ltac custom23 H0 :=  econstructor; [custom4 H0; [eauto with rtlg | .. ] | .. ].
Ltac custom24 H0 H1 H2 :=  intros H0 H1 H2; [econstructor; [monadInv H2 | .. ] | .. ].
Ltac custom25 H0 :=  inv H0; [auto].
Ltac custom26 H0 :=  exists H0; [auto | .. ].
Ltac custom27 H0 H1 :=  apply H0 with H1; [eauto 3 with rtlg | .. ].
Ltac custom28  :=  custom2 ; [eauto | .. ].
Ltac custom29  :=  right; [eauto with rtlg | .. ].
Ltac custom30 H0 :=  custom4 H0; [eauto with rtlg | .. ].
Ltac custom31 H0 H1 :=  intros H0 H1; [monadInv H1 | .. ].
Ltac custom32 H0 H1 :=  intros H0 H1; [induction H1 | .. ].
Ltac custom33 H0 H1 H2 :=  intros H0 H1 H2; [pose ( AT := fun pc i => instr_at_incr H0 H1 pc i H2 ) | .. ].
Ltac custom34 H0 H7 H5 :=  monadInv H0; [custom22 H7 H5].
---------------------------
Num proofs: 21
Num training proofs: 5
Original size: 1000
Compressed total size: 641
Training size: 642
(2) (3) Testing size: 358
(2) (3) Compressed testing size: 239
(2) (3) Compression rate: 149.79
Compressed size + lib: 755 ( 641 corpus / 114 library )
[1] numTactics: 34
[1] avrgTacticSize: 3.06
[1] maxTacSize: 10
[1] numProofsCompressed/total: 9 / 16
[1] numAvgApplications: 4.44
[1] numTotalApplications: 151
Compression rate: 1.3245033112582782
Num tactics in library: 34