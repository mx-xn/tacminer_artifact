extracted tactics -----------
Ltac custom0 H0 H21 H20 H4 :=  destruct H0; [simpl in *; [auto | .. ] | simpl in * | simpl in *; [inv H21; [inv H20; [auto | destruct H4; [auto | auto | auto | auto | auto | auto | .. ] | .. ] | auto | .. ] | .. ] | .. ].
Ltac custom1 H0 :=  apply H0; [auto | .. ].
Ltac custom2 H0 H1 H2 H3 H4 H5 H6 H32 H33 H34 :=  unfold H0; [intros H1 H2 H3 H4 H5; [unfold H6; [destruct ( Int.ltu H4 Int.iwordsize ); [destruct H3; [simpl in *; [auto | .. ] | simpl in *; [InvAgree; [custom1 H32 | .. ] | .. ] | simpl in *; [InvAgree; [apply H33; [f_equal; [apply H34; [custom1 H32 | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | destruct H1; [auto with na | auto with na | auto with na | auto with na | auto with na | auto with na | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom3 H0 H1 H2 H3 H4 H5 H6 H14 H21 H22 H23 H24 :=  unfold H0; [intros H1 H2 H3 H4 H5 H6; [destruct H3; [simpl in *; [auto | .. ] | simpl in *; [unfold H14; [InvAgree; [red; [intros H22 H23 H24; [autorewrite with ints; [ | try lia | try lia | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | simpl in *; [unfold H14; [InvAgree; [apply H21; [f_equal; [Int.bit_solve; [ | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom4 H0 H1 H2 H3 H4 H5 H6 H7 H19 H20 H21 H22 H16 H25 H26 :=  unfold H0; [intros H1 H2 H3 H4 H5 H6 H7; [destruct H3; [auto | simpl in *; [InvAgree; [simpl; [rewrite <- H19; [red; [intros H20 H21 H22; [autorewrite with ints; [destruct ( zlt H20 H4 ); [custom1 H16 | discriminate | .. ] | try lia | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | try discriminate | .. ] | .. ] | .. ]. rewrite H25 in H26 by auto.
Ltac custom5 H0 H1 H2 H3 H4 H11 H10 H19 H20 H21 H22 H23 H24 H25 H27 H28 H9 :=  intros H0 H1 H2 H3 H4; [inversion H4; [subst H11 H10 H0; [destruct H1; [simpl; [auto | .. ] | simpl; [constructor; [intros H19; [rewrite H24; [intros [ H27 H28 ]; [eelim H9; [eauto | eauto | .. ] | .. ] | .. ] | .. ] | intros H20 H21 H22 H23; [rewrite H25 in H23 by auto | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom6 H0 H1 H2 H7 H8 H9 H10 H11 H12 H13 :=  intros H0 H1; [unfold H2; [destruct H0, H1; [simpl; [split; [apply H7 | intros H8 H9 H10 H11 H12; [custom1 H13 | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom7 H0 H1 H2 H9 H10 H11 :=  intros H0 H1; [unfold H2; [destruct H0, H1; [auto with na | auto with na | auto with na | auto with na | constructor; [intros H9 H10 H11; [autorewrite with ints; [rewrite H11 | auto | .. ] | .. ] | .. ] |  | auto with na |  | auto with na | .. ] | .. ] | .. ].
Ltac custom8 H0 H1 H2 H3 H4 :=  intros H0 H1 H2 H3 H4; [destruct H2; [simpl in *; [auto | .. ] | simpl in * | simpl in * | .. ] | .. ].
Ltac custom9 H0 H1 H2 H3 H10 H11 H12 H13 H14 :=  intros H0 H1 H2; [unfold H3; [destruct H0, H1, H2; [simpl; [intros [ H10 H11 ] [ H12 H13 ]; [split; [eapply H14; [eauto | eauto | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom10 H0 :=  destruct H0; [auto | auto | auto | auto | auto | auto | .. ].
Ltac custom11 H0 H1 H2 H3 H4 :=  constructor; [intros H0 | intros H1 H2 H3 H4 | .. ].
Ltac custom12 H4 H5 :=  InvAgree; [apply H4; [simpl; [f_equal; [apply H5 | .. ] | .. ] | .. ] | .. ].
Ltac custom14 H0 H1 H2 H3 :=  rewrite H0; [intros [ H1 H2 ]; [eelim H3; [eauto |  | eauto | .. ] | .. ] | .. ].
Ltac custom15 H0 H1 H2 H3 H8 H9 H10 H11 H12 H13 H14 :=  intros H0 H1; [unfold H2, H3; [destruct H0, H1; [simpl; [intros H8; [split; [custom1 H9 | intros H10 H11 H12 H13; [custom1 H14 | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom16 H0 H1 H2 H3 H8 H9 H10 H11 H12 H13 H14 H15 :=  intros H0 H1; [unfold H2, H3; [destruct H0, H1; [simpl; [intros [ H8 H9 ]; [split; [custom1 H10 | intros H11 H12 H13 H14 H15; [custom1 H9 | .. ] | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom17 H0 :=  rewrite H0; [auto | .. ].
Ltac custom18 H0 :=  destruct H0; [simpl; [auto | .. ] | simpl | simpl; [auto | .. ] | .. ].
Ltac custom19 H0 H1 H2 :=  red; [intros H0 H1 H2; [exploit ( eq_same_bits H0 ); [eauto | autorewrite with ints; [rewrite H2 | auto | auto | .. ] | .. ] | .. ] | .. ].
Ltac custom20  :=  constructor; [auto with na | auto with na | .. ].
Ltac custom21 H0 H1 H2 H5 H6 H7 H8 H9 H10 :=  intro H0; [unfold H1, H2; [destruct H0; [simpl; [split; [apply H5 | intros H6 H7 H8 H9 H10; [inv H10 | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom22 H0 H1 H2 H3 H4 H5 H6 H7 H8 H26 H33 H34 H35 :=  intros H0 H1 H2 H3 H4 H5 H6; [custom0 H4 H7 H8 H1; [unfold H26; [InvAgree; [apply H33; [apply H34; [custom1 H35 | custom1 H35 | .. ] | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom23 H0 H1 H2 H3 H4 H5 H6 H13 H17 :=  unfold H0, H1; [custom8 H2 H3 H4 H5 H6; [InvAgree; [custom1 H17 | .. ] | inv H13; [auto | auto | .. ] | .. ] | .. ].
Ltac custom24 H0 H1 H2 :=  red; [intros H0 H1 H2; [autorewrite with ints; [ | auto | auto | .. ] | .. ] | .. ].
Ltac custom25 H0 H1 H2 H3 :=  rewrite H0; [intros [ H1 H2 ]; [eelim H3; [eauto | eauto | .. ] | .. ] | .. ].
Ltac custom26  :=  destruct Archi.ptr64; [auto | auto | .. ].
Ltac custom27 H0 H1 H10 H11 H2 H4 :=  set ( j := if zlt H0 H1 then H10 else H11 - 1 ); [assert ( 0 <= H2 < Int.zwordsize ); [unfold H2; [destruct ( zlt H0 H1 ); [lia | lia | .. ] | .. ] | custom1 H4 | .. ] | .. ].
Ltac custom28 H0 :=  eelim H0; [eauto | eauto | eauto | .. ].
Ltac custom30 H0 H1 H2 H4 :=  generalize ( Int.size_range H0 ); [intros H1; [assert ( EQ : Int.size H0 = Z.of_nat H2 ); [symmetry; [apply H4; [lia | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom31 H0 H1 H2 H3 H4 H5 H6 H15 :=  unfold H0; [intros H1 H2 H3 H4 H5 H6; [destruct H3; [ | simpl in *; [unfold H15 | .. ] | try discriminate | .. ] | .. ] | .. ].
Ltac custom32 H0 H1 H2 H3 H4 H6 H14 :=  split; [ | intros H0 H1 H2 H3; [rewrite H4 in H3; [destruct ( peq H0 H6 ); [inv H14 | eauto | .. ] | .. ] | .. ] | .. ].
Ltac custom33 H0 H1 H2 H3 H4 H5 H6 H8 :=  unfold H0; [intros H1 H2 H3 H4 H5 H6; [inv H5; [rewrite H8 | .. ] | .. ] | .. ].
Ltac custom34 H0 H1 H2 H3 H4 H5 H6 H7 H8 H9 H10 H12 H11 :=  intros H0 H1 H2 H3 H4 H5 H6; [apply ( H7 H8 ( H9 H10 H12 H11 ) ); [auto | auto | .. ] | .. ].
Ltac custom35 H0 H1 H2 H3 H4 H5 :=  custom11 H0 H1 H2 H3 H4; [congruence | assert ( H1 = H5 ) by ( eapply Genv.genv_vars_inj ; eauto ); [subst H1] | .. ].
Ltac custom36 H0 H1 H2 H3 H4 H5 H13 H17 :=  unfold H0; [custom8 H1 H2 H3 H4 H5; [unfold H13; [InvAgree; [custom1 H17 | .. ] | .. ] | .. ] | .. ].
Ltac custom37 H0 :=  red; [intros H0 | .. ].
Ltac custom38 H0 H1 H2 H3 :=  red; [intros H0 H1 H2; [rewrite ! H3 by auto | .. ] | .. ].
Ltac custom39 H0 :=  eapply H0; [eauto | eauto | .. ].
Ltac custom40 H0 H1 :=  apply H0; [custom1 H1 | .. ].
Ltac custom41 H0 H1 H5 :=  destruct ( zlt H0 H1 ); [custom1 H5; [autorewrite with ints; [ | try lia | .. ] | .. ] | auto | .. ].
Ltac custom42 H0 :=  split; [intros H0 | .. ].
Ltac custom43  :=  InvAgree; [simpl | .. ].
Ltac custom44 H0 H1 H6 :=  custom12 H0 H1; [change 8 with ( Int.size ( Int.repr 255 ) ); [custom1 H6 | .. ] | .. ].
Ltac custom45 H0 H1 H2 :=  generalize ( Int.unsigned_range H0 ); [intros H1; [apply H2; [lia | .. ] | .. ] | .. ].
Ltac custom46 H0 H1 H2 :=  unfold H0; [destruct ( zlt H1 H2 ); [lia | lia | .. ] | .. ].
Ltac custom47 H3 :=  constructor; [auto with na | inv H3; [constructor | .. ] | .. ].
Ltac custom48 H0 H1 :=  apply H0; [custom17 H1 | .. ].
Ltac custom49 H0 H1 H2 :=  rewrite H0; [intros [ H1 H2 ]; [elim H1; [auto | .. ] | .. ] | .. ].
Ltac custom50 H0 :=  destruct H0; [auto |  | auto | auto | .. ].
Ltac custom51 H0 H1 H2 H3 H4 :=  inv H0; [rewrite H1; [intros [ H2 H3 ]; [custom28 H4 | .. ] | .. ] | .. ].
Ltac custom52 H0 H1 :=  intros H0 H1; [inv H1 | .. ].
Ltac custom53 H0 H1 :=  unfold H0; [destruct H1; [ | .. ] | .. ].
Ltac custom54 H0 H1 H2 :=  rewrite H0 in H1; [rewrite <- H2; [eauto | .. ] | .. ].
Ltac custom55 H0 H1 H6 :=  custom12 H0 H1; [change 16 with ( Int.size ( Int.repr 65535 ) ); [custom1 H6 | .. ] | .. ].
Ltac custom56 H0 H1 :=  rewrite H0 by lia; [apply H1; [lia | .. ] | .. ].
Ltac custom57 H0 :=  rewrite ! H0; [auto | .. ].
Ltac custom58  :=  red; [auto | .. ].
Ltac custom59 H0 :=  custom1 H0; [autorewrite with ints; [ | auto | .. ] | .. ].
Ltac custom60  :=  simpl; [auto | .. ].
Ltac custom61 H0 H1 :=  apply H0; [generalize ( Int.unsigned_range H1 ); [lia | .. ] | .. ].
Ltac custom62 H6 H7 H8 :=  InvAgree; [apply H6; [custom40 H7 H8 | .. ] | .. ].
Ltac custom63 H0 H1 H2 H6 H3 H4 :=  apply H0 with ( v := H1 H2 ) ( w := H6 H3 ) ( x := H4 ) ( n := 8 ); [auto | lia | .. ].
Ltac custom64 H0 :=  rewrite H0; [intros [ P|P ]; [lia | .. ] | .. ].
Ltac custom65 H3 H4 H2 H6 H1 H5 :=  custom43 ; [apply H3 with ( v := H4 H2 ) ( w := H6 H1 ) ( x := H5 ) ( n := 16 ); [auto | .. ] | .. ].
Ltac custom66 H0 H1 H2 H3 H4 :=  custom42 H0; [ | intros H1 H2 H3 H4; [eauto | .. ] | .. ].
Ltac custom67 H0 H1 H2 H3 H4 H5 :=  custom11 H0 H1 H2 H3 H4; [ | rewrite H5 in H4; [discriminate] | .. ].
Ltac custom68 H0 H1 H2 H3 H4 H5 H6 H7 :=  custom11 H0 H1 H2 H3 H4; [ | assert ( H5 H6 = BCglob H1 ) by ( eapply H7 ; eauto ); [congruence] | .. ].
Ltac custom69 H0 H1 H2 H3 H4 H5 H6 :=  custom11 H0 H1 H2 H3 H4; [ | specialize ( H5 H1 ); [rewrite H4 in H6] | .. ].
Ltac custom70 H0 H10 :=  destruct H0; [inv H10; [constructor | .. ] | .. ].
Ltac custom71 H0 H1 H2 :=  intros H0 H1; [apply H2 | .. ].
Ltac custom72 H0 H1 :=  custom52 H0 H1; [eauto with na | .. ].
Ltac custom73 H0 :=  f_equal; [apply H0; [ | .. ] | .. ].
Ltac custom74 H0 :=  rewrite H0 by lia; [auto | .. ].
Ltac custom75 H0 H1 :=  custom37 H0; [rewrite H1 | .. ].
Ltac custom76 H0 H1 :=  rewrite H0; [custom1 H1 | .. ].
Ltac custom77 H0 H1 :=  custom42 H0; [ | intros H1 | .. ].
Ltac custom78 H0 H7 H6 H10 :=  inversion H0; [subst H7 H6 H10 | .. ].
Ltac custom79 H0 H1 H2 :=  rewrite ! H0; [custom40 H1 H2 | .. ].
Ltac custom80 H0 H1 :=  apply H0; [rewrite H1 | .. ].
Ltac custom81 H0 H1 :=  rewrite H0 in H1; [auto].
Ltac custom82 H0 H1 H2 :=  rewrite H0 in H1; [custom17 H2].
Ltac custom84 H0 H3 H1 H2 :=  set ( p := Z.to_nat ( Int.size H0 ) ); [custom30 H0 H3 H1 H2].
Ltac custom85  :=  compute; [auto | .. ].
Ltac custom86  :=  autorewrite with ints; [ | try lia | .. ].
Ltac custom87 H0 H1 :=  destruct ( peq H0 H1 ); [ | auto | .. ].
Ltac custom88 H0 H1 :=  unfold H0; [rewrite H1 | .. ].
Ltac custom89 H0 H1 H2 H3 H4 H5 H6 :=  unfold H0; [intros H1 H2 H3 H4 H5 H6 | .. ].
Ltac custom90 H0 :=  custom17 H0; [auto | .. ].
Ltac custom91  :=  f_equal; [auto | .. ].
Ltac custom92 H2 H3 H4 H0 H5 H6 H7 H8 H1 :=  custom9 H2 H3 H4 H0 H5 H6 H7 H8 H1; [auto | .. ].
Ltac custom93 H0 H16 H1 H2 :=  destruct ( ISet.contains ( Ptrofs.unsigned H0 ) ( Ptrofs.unsigned H16 + H1 ) H2 ) eqn : IC; [ | try discriminate | .. ].
Ltac custom94 H1 H2 H3 H4 H5 H0 :=  custom35 H1 H2 H3 H4 H5 H0; [congruence | .. ].
Ltac custom95 H0 :=  eapply H0; [eauto | .. ].
Ltac custom96 H0 :=  rewrite H0; [eauto | .. ].
Ltac custom97 H0 :=  intros H0; [constructor | .. ].
Ltac custom98 H0 :=  intros H0; [auto | .. ].
Ltac custom99 H3 :=  custom43 ; [apply H3 | .. ].
Ltac custom100 H0 H1 H2 H3 H4 H5 H6 H7 :=  intros H0 H1 H2 H3 H4; [custom24 H5 H6 H7 | .. ].
Ltac custom101 H0 H1 H2 H3 H4 H6 H7 H8 H5 :=  intros H0 H1 H2 H3 H4; [custom38 H6 H7 H8 H5 | .. ].
---------------------------
 , , 1.0
NeedDomain, Number of Tactics, 99
 , Average Tactic Size, 4.33
 , Total Tactic Size, 429
 , Max Tactic Size, 23
 , Overall CP, 0.00