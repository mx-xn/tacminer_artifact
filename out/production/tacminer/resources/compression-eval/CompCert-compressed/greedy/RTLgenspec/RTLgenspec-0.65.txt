extracted tactics -----------
Ltac custom0 H0 :=  econstructor; [eapply H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom2 H0 H1 H2 :=  apply H0 with H1; [auto | eapply H2; [ |  | eauto with rtlg | .. ] | .. ].
Ltac custom3 H0 :=  eapply H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom6 H0 :=  econstructor; [eapply H0; [eauto with rtlg | eauto with rtlg | .. ] | .. ].
Ltac custom8 H0 :=  apply H0; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom9 H0 H1 H2 :=  apply H0 with H1; [auto | eapply H2; [eauto 2 with rtlg | eauto 2 with rtlg | .. ] | .. ].
Ltac custom10 H0 H1 H2 H3 H4 H5 H6 :=  simpl; [intros H0 H1 H2 H3 H4 H5 H6 | .. ].
Ltac custom11 H0 H1 :=  apply H0 with H1; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom12 H0 H1 H2 :=  apply H0 with H1; [auto | eapply H2; [ | .. ] | .. ].
Ltac custom14  :=  econstructor; [eauto |  |  | eauto | .. ].
Ltac custom15 H0 H1 H2 H3 :=  intros H0 H1 H2; [econstructor; [ |  | eapply H3; [eauto | .. ] | .. ] | .. ].
Ltac custom16 H0 :=  eapply H0; [eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | eauto 3 with rtlg | .. ].
Ltac custom17 H0 :=  left; [exists H0; [auto | .. ] | .. ].
Ltac custom18 H0 :=  custom6 H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom19 H0 :=  econstructor; [ | eapply H0; [eauto with rtlg | eauto with rtlg | eauto with rtlg | .. ] | .. ].
Ltac custom20 H0 H1 :=  intros H0 H1; [induction H1 | .. ].
Ltac custom21 H0 :=  eapply H0; [eauto | eauto | .. ].
Ltac custom22 H0 H8 :=  intros until H0; [unfold H8 | .. ].
Ltac custom23 H0 H1 H2 H3 H4 H5 :=  generalize H0; [unfold H1; [caseEq ( nth_error ( map_letvars H2 ) H3 ); [ | intros H4 H5 | .. ] | .. ] | .. ].
Ltac custom24 H0 :=  apply H0; [ | eauto 3 with rtlg | .. ].
Ltac custom25  :=  constructor; [ | auto | .. ].
Ltac custom26 H0 H1 H2 :=  apply H0 with H1; [ | eapply H2; [ |  | eauto with rtlg | .. ] | .. ].
Ltac custom27 H0 :=  eapply H0; [ |  | eauto with rtlg | .. ].
Ltac custom28 H0 H1 :=  exists H0; [exists H1 | .. ].
Ltac custom29 H0 H1 H2 H3 H4 :=  intros H0 H1 H2 H3 H4; [monadInv H4 | .. ].
Ltac custom30  :=  right; [eauto with rtlg | .. ].
Ltac custom31 H0 H1 H2 H3 H4 H5 H6 H7 :=  simpl; [intros H0 H1 H2 H3 H4 H5 H6 H7 | .. ].
Ltac custom32 H0 :=  apply H0; [auto with coqlib | .. ].
Ltac custom33 H1 H2 :=  exploit transl_exit_charact; [eauto | intros [ H1 H2 ] | .. ].
Ltac custom34  :=  constructor; [eauto with rtlg | .. ].
Ltac custom36 H0 H1 :=  apply H0 with H1; [eauto 3 with rtlg | .. ].
Ltac custom37 H0 :=  inv H0; [ | custom30  | .. ].
Ltac custom38 H0 :=  inv H0; [eauto with rtlg].
Ltac custom39  :=  econstructor; [eauto | .. ].
Ltac custom40  :=  custom39 ; [ | eauto | .. ].
Ltac custom41 H0 :=  custom39 ; [ | custom21 H0 | .. ].
Ltac custom42  :=  custom39 ; [eauto | .. ].
Ltac custom43  :=  econstructor; [eauto with rtlg | eauto with rtlg | .. ].
Ltac custom44  :=  custom43 ; [eauto with rtlg | .. ].
Ltac custom45  :=  econstructor; [ | eauto with rtlg | eauto with rtlg | .. ].
Ltac custom46 H0 :=  custom6 H0; [eauto with rtlg | .. ].
Ltac custom47 H0 H1 H2 :=  intros H0 H1 H2; [left; [eauto with rtlg | .. ] | .. ].
Ltac custom48 H0 :=  monadInv H0; [constructor | .. ].
Ltac custom49 H0 :=  exists H0; [auto | .. ].
Ltac custom50  :=  right; [auto | .. ].
Ltac custom51 H0 :=  intro H0; [induction H0 | .. ].
Ltac custom52 H0 H1 :=  generalize H0; [unfold H1 | .. ].
Ltac custom53 H0 :=  inv H0; [auto].
Ltac custom54 H0 :=  constructor; [custom53 H0 | .. ].
Ltac custom55 H0 H1 :=  apply H0 with H1; [eauto with rtlg | .. ].
Ltac custom56 H0 H1 :=  intros H0 H1; [inv H1 | .. ].
Ltac custom57  :=  econstructor; [eauto with rtlg | .. ].
Ltac custom58 H0 :=  econstructor; [custom16 H0 | .. ].
Ltac custom59 H0 :=  try ( monadInv H0 ); [eauto with rtlg].
---------------------------
Num proofs: 55
Num training proofs: 17
Original size: 1413
Compressed total size: 980
Training size: 924
(2) (3) Testing size: 489
(2) (3) Compressed testing size: 348
(2) (3) Compression rate: 140.52
Compressed size + lib: 1163 ( 980 corpus / 183 library )
[1] numTactics: 54
[1] avrgTacticSize: 2.81
[1] maxTacSize: 10
[1] numProofsCompressed/total: 17 / 38
[1] numAvgApplications: 3.87
[1] numTotalApplications: 209
Compression rate: 1.2149613069647462
Num tactics in library: 54