extracted tactics -----------
Ltac custom0 H0 H1 H2 H3 H4 :=  apply H0; [unfold H1; [congruence | .. ] | cbn | intros H2 H3 H4 | .. ].
Ltac custom1 H0 :=  apply H0; [auto | .. ].
Ltac custom2  :=  split; [auto | auto | .. ].
Ltac custom3 H0 H1 H2 H3 H4 H11 :=  custom0 H0 H1 H2 H3 H4; [ | inv H4; [apply H11; [ | custom2  | .. ] | .. ] | .. ].
Ltac custom4 H0 H1 :=  apply H0; [intros H1 | .. ].
Ltac custom5  :=  split; [auto | auto | .. ].
Ltac custom6 H0 :=  eapply H0; [eauto | eauto | .. ].
Ltac custom7  :=  red; [auto | .. ].
Ltac custom8 H0 H1 H2 H4 H3 :=  custom4 H0 H1; [tauto | .. ]. specialize ( H2 H1 ); [apply H4 in H3].
Ltac custom9 H0 :=  apply H0; [split; [auto | auto | .. ] | .. ].
Ltac custom10 H0 H1 :=  apply H0 with H1; [auto | auto | .. ].
Ltac custom11 H0 H1 H2 H3 H4 H5 :=  custom0 H0 H1 H2 H3 H4; [ | inv H4; [apply H5 | .. ] | .. ].
Ltac custom12 H0 :=  exists H0; [split | .. ].
Ltac custom13 H0 H1 :=  apply H0; [eapply H1; [eauto | .. ] | eapply H1; [eauto | .. ] | .. ].
Ltac custom14  :=  split; [auto | congruence | .. ].
Ltac custom15 H0 H6 H1 H3 H4 H5 :=  assert ( H' : exists R : H0 -> assertion, forall x : H6, H1 x ( R x ) ); [custom4 H3 H4; [custom1 H5 | .. ] | .. ].
Ltac custom16 H0 :=  eapply H0; [eauto |  | eauto | .. ].
Ltac custom17 H0 H1 :=  eapply H0; [apply H1 | .. ].
Ltac custom18 H0 :=  eapply H0; [ |  | Tauto | .. ].
Ltac custom19 H0 H1 H2 :=  custom4 H0 H1; [apply H2 | .. ].
Ltac custom20  :=  split; [auto | .. ].
Ltac custom21 H0 :=  custom1 H0; [auto | .. ].
Ltac custom22 H0 H1 H2 :=  apply H0 with H1 H2; [auto | auto | auto | .. ].
Ltac custom23 H41 H42 H43 H11 :=  induction 1; [apply H41 | apply H42 | custom10 H43 H11 | .. ].
Ltac custom24 H0 :=  unfold H0; [auto | .. ].
Ltac custom25 H0 :=  unfold H0; [congruence | .. ].
Ltac custom26 H0 :=  rewrite H0; [ | auto | .. ].
Ltac custom27 H0 :=  rewrite H0; [auto | .. ].
Ltac custom28 H0 :=  split; [ | exact H0 | .. ].
Ltac custom29  :=  split; [ | Tauto | .. ].
Ltac custom30 H0 H1 :=  custom13 H0 H1; [Tauto | .. ].
Ltac custom31 H0 H1 :=  intros H0; [custom1 H1 | .. ].
Ltac custom32 H0 H1 :=  apply H0 in H1; [ | custom7  | .. ].
Ltac custom33 H0 H1 H2 :=  apply H0 in H1; [destruct H2 as ( C12 & C22 )].
Ltac custom34 H0 H1 H2 :=  apply H0 in H1; [destruct H2 as ( C11 & C21 )].
Ltac custom35 H0 :=  eapply H0; [eauto | .. ].
Ltac custom36 H0 H1 :=  custom35 H0; [custom25 H1 | .. ].
Ltac custom37 H0 H1 H3 H4 H5 H2 H6 :=  custom11 H0 H1 H3 H4 H5 H2; [tauto |  | exact H6 | .. ].
Ltac custom38 H0 :=  destruct H0; [constructor | .. ].
Ltac custom39 H0 H1 H2 H3 H4 :=  custom0 H0 H1 H2 H3 H4; [auto | inv H4 | .. ].
Ltac custom40 H0 :=  inv H0; [ | eauto | .. ].
Ltac custom41 H0 :=  inv H0; [auto | .. ].
Ltac custom42 H0 :=  custom21 H0; [auto | .. ].
Ltac custom43 H0 H1 H2 H3 H44 :=  custom23 H0 H1 H2 H3; [custom21 H44 | .. ].
Ltac custom44  :=  custom20 ; [auto | .. ].
Ltac custom45 H0 :=  custom12 H0; [auto | .. ].
Ltac custom46 H0 :=  custom12 H0; [ | auto | .. ].
Ltac custom47 H0 H1 H2 H3 :=  custom17 H0 H1; [intros H2 H3 | .. ].
Ltac custom48 H0 H1 :=  custom17 H0 H1; [Tauto | .. ].
Ltac custom49 H0 :=  apply H0; [ | auto | .. ].
Ltac custom50 H0 :=  custom49 H0; [reflexivity | .. ].
Ltac custom51 H0 H1 H2 :=  apply H0 with H1; [ | apply H2 | .. ].
Ltac custom52 H0 H1 :=  apply H0 with H1; [auto | .. ].
Ltac custom53 H0 H1 H2 H3 H4 H5 H6 H7 H8 :=  intros H0 H1 H2 H3 H4 H5 H6; [intros H7 H8 | .. ].
Ltac custom54 H0 H1 H2 H3 H4 :=  intros H0 H1 H2 H3 H4; [inv H4 | .. ].
---------------------------
Num proofs: 66
Num training proofs: 46
Original size: 1545
Compressed total size: 1056
Training size: 1111
(2) (3) Testing size: 434
(2) (3) Compressed testing size: 302
(2) (3) Compression rate: 143.71
Compressed size + lib: 1192 ( 1056 corpus / 136 library )
[1] numTactics: 55
[1] avrgTacticSize: 2.47
[1] maxTacSize: 5
[1] numProofsCompressed/total: 17 / 20
[1] numAvgApplications: 4.44
[1] numTotalApplications: 244
Compression rate: 1.2961409395973154
Num tactics in library: 55