extracted tactics -----------
Ltac custom0 H0 H1 H2 H3 H4 H5 :=  red; [intros H0 H1; [eapply H2; [eapply H3; [eexact H4 | eapply H5; [ | eexact H1 | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom1 H0 H1 H2 H4 H6 H7 H8 H9 :=  assert ( L1 : H0 H1 = Some H2 ); [ | assert ( L : H4 H1 = Some H2 ); [rewrite H6 | constructor; [auto | constructor; [congruence | .. ] | intros H7 H8 H9; [inv H9; [constructor | .. ] | .. ] | .. ] | .. ] | .. ].
Ltac custom2  :=  split; [auto | auto | .. ].
Ltac custom3 H0 H1 H2 H3 :=  apply H0; [apply H1; [intros H2 | .. ] | apply H1; [intros H3 | .. ] | .. ].
Ltac custom4 H0 :=  exists H0; [auto | .. ].
Ltac custom5 H0 :=  intros H0; [constructor | .. ].
Ltac custom6 H0 H1 :=  cbn; [destruct ( Z.eq_dec H0 H1 ); [ | auto | .. ] | .. ].
Ltac custom7 H0 :=  apply H0; [auto | .. ].
Ltac custom8 H0 :=  split; [ | custom4 H0 | .. ].
Ltac custom9 H0 H1 H2 H3 H4 H5 H6 :=  intros H0 H1 H2 H3; [constructor; [auto | constructor | intros H4 H5 H6; [inv H6 | .. ] | .. ] | .. ].
Ltac custom10 H0 :=  rewrite H0; [auto | .. ].
Ltac custom11 H0 H1 :=  apply H0; [intros H1; [lia | .. ] | .. ].
Ltac custom12  :=  red; [auto | .. ].
Ltac custom13 H0 H1 :=  red; [intros H0 H1 | .. ].
Ltac custom14 H0 H1 :=  destruct ( H0 H1 ) as [ z| ]; [congruence | .. ].
Ltac custom15 H0 H1 H2 :=  apply H0; [intros H1; [custom6 H2 H1; [auto | .. ] | .. ] | .. ].
Ltac custom16 H0 H1 H2 :=  rewrite H0; [custom11 H1 H2 | .. ].
Ltac custom17 H0 H1 H2 :=  simpl; [custom16 H0 H1 H2 | .. ].
Ltac custom18 H0 H1 :=  apply H0 with H1; [ | auto | .. ].
Ltac custom19 H0 H1 :=  eapply H0; [apply H1 | simpl | .. ].
Ltac custom20 H0 :=  apply H0; [custom2  | .. ].
Ltac custom21 H0 H1 :=  apply H0; [apply H1 | .. ].
Ltac custom22 H0 :=  apply H0; [custom12  | .. ].
Ltac custom23 H0 H1 :=  apply H0; [intros H1 | .. ].
Ltac custom24 H0 H1 H2 :=  intros H0 H1; [apply H2 | .. ].
Ltac custom25 H0 H5 :=  subst H0; [custom7 H5 | .. ].
Ltac custom26 H0 :=  custom7 H0; [auto | .. ].
Ltac custom27 H0 H1 :=  exists H0, H1; [auto | .. ].
Ltac custom28  :=  split; [ | split | .. ].
Ltac custom29  :=  constructor; [auto | .. ].
Ltac custom30  :=  constructor; [congruence | .. ].
Ltac custom31  :=  constructor; [custom2  | .. ].
---------------------------
Num proofs: 70
Num training proofs: 49
Original size: 1111
Compressed total size: 820
Training size: 849
(2) (3) Testing size: 262
(2) (3) Compressed testing size: 190
(2) (3) Compression rate: 137.89
Compressed size + lib: 910 ( 820 corpus / 90 library )
[1] numTactics: 32
[1] avrgTacticSize: 2.81
[1] maxTacSize: 10
[1] numProofsCompressed/total: 17 / 21
[1] numAvgApplications: 5.09
[1] numTotalApplications: 163
Compression rate: 1.220879120879121
Num tactics in library: 32