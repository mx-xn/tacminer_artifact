extracted tactics -----------
Ltac custom0 H0 H1 H2 H3 H4 :=  apply H0; [unfold H1; [congruence | .. ] | cbn | intros H2 H3 H4; [inv H4 | .. ] | .. ].
Ltac custom1  :=  split; [auto | auto | .. ].
Ltac custom2 H0 :=  apply H0; [auto | .. ].
Ltac custom3 H0 H1 H2 H3 H4 H5 H6 H9 H10 :=  intros H0 H1 H2 H3 H4 H5; [apply H6 in H4; [apply H6 in H5; [eapply H9; [apply H10 | .. ] | .. ] | .. ] | .. ].
Ltac custom4 H0 :=  eapply H0; [eauto | .. ].
Ltac custom5 H0 H1 H2 H4 H3 :=  apply H0; [intros H1; [specialize ( H2 H1 ); [tauto] | .. ] | .. ]. apply H4 in H3.
Ltac custom7 H0 H1 :=  apply H0; [intros H1 | .. ].
Ltac custom8  :=  red; [auto | .. ].
Ltac custom9 H0 H1 H2 H3 H4 H5 H6 :=  intros H0 H1; [custom0 H2 H3 H4 H5 H6; [auto | .. ] | .. ].
Ltac custom10 H0 :=  custom2 H0; [auto | .. ].
Ltac custom11 H0 H1 :=  exists H0; [custom2 H1 | .. ].
Ltac custom12 H0 :=  exists H0; [split; [ | auto | .. ] | .. ].
Ltac custom13  :=  split; [Tauto | Tauto | .. ].
Ltac custom14 H0 H1 H2 H3 H4 H8 :=  custom0 H0 H1 H2 H3 H4; [congruence | apply H8; [custom8  | custom1  | .. ] | .. ].
Ltac custom15 H0 :=  apply H0; [custom1  | .. ].
Ltac custom16 H0 H1 :=  apply H0; [custom4 H1 | custom4 H1 | .. ].
Ltac custom17 H0 H6 H1 H3 H4 H5 :=  assert ( H' : exists R : H0 -> assertion, forall x : H6, H1 x ( R x ) ); [custom7 H3 H4; [custom2 H5 | .. ] | .. ].
Ltac custom18 H0 H1 H2 H3 H4 H5 H6 :=  intros H0 H1 H2 H3 H4 H5; [apply H6 in H4 | .. ].
Ltac custom19 H0 :=  exists H0; [custom1  | .. ].
Ltac custom20 H0 H1 H2 H3 :=  intros H0 ( H1 & H2 & H3 ); [custom19 H2 | .. ].
Ltac custom21 H0 :=  custom4 H0; [eauto | .. ].
Ltac custom22 H0 H1 H2 :=  custom7 H0 H1; [apply H2 | .. ].
Ltac custom23 H0 :=  split; [ | exact H0 | .. ].
Ltac custom24 H0 H1 :=  eapply H0; [apply H1 | .. ].
Ltac custom25 H0 :=  apply H0; [reflexivity | .. ].
Ltac custom27 H0 :=  unfold H0; [auto | .. ].
Ltac custom28 H0 H1 :=  exists H0; [custom15 H1 | .. ].
Ltac custom29 H0 :=  exists H0; [auto | .. ].
Ltac custom30 H0 :=  custom4 H0; [ | eauto | .. ].
Ltac custom31 H0 H1 :=  apply H0 with H1; [auto | auto | .. ].
Ltac custom32  :=  split; [ | custom13  | .. ].
Ltac custom33 H0 H1 :=  intros H0; [custom2 H1 | .. ].
Ltac custom34 H0 H1 :=  apply H0; [eapply H1 | .. ].
Ltac custom35 H0 :=  destruct H0; [constructor | .. ].
Ltac custom36 H0 H1 :=  apply H0 in H1; [ | custom8  | .. ].
Ltac custom37 H0 :=  inv H0; [auto | .. ].
Ltac custom39 H0 :=  unfold H0; [congruence | .. ].
Ltac custom40 H0 H1 H2 H3 H4 H11 :=  custom0 H0 H1 H2 H3 H4; [ | apply H11 | .. ].
Ltac custom41 H0 :=  rewrite H0; [ | auto | .. ].
Ltac custom42 H0 :=  rewrite H0; [auto | .. ].
Ltac custom43 H0 :=  intro H0; [induction H0; [ | .. ] | .. ].
Ltac custom44 H0 H1 H2 :=  intros H0 [ H1 H2 ]; [red in H1 | .. ].
Ltac custom45 H0 H1 H2 H3 H4 :=  intros H0 H1 H2; [custom24 H3 H4 | .. ].
---------------------------
Num proofs: 55
Num training proofs: 33
Original size: 1422
Compressed total size: 965
Training size: 1005
(2) (3) Testing size: 417
(2) (3) Compressed testing size: 256
(2) (3) Compression rate: 162.89
Compressed size + lib: 1080 ( 965 corpus / 115 library )
[1] numTactics: 43
[1] avrgTacticSize: 2.47
[1] maxTacSize: 6
[1] numProofsCompressed/total: 19 / 22
[1] numAvgApplications: 5.07
[1] numTotalApplications: 218
Compression rate: 1.3166666666666667
Num tactics in library: 43