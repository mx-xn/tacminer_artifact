DIGEST 5f0d1b0604c4a8d9fc04b04c4182f3b3
FBignums.SpecViaZ.NSigNAxioms
R541:546 Coq.ZArith.ZArith <> <> lib
R548:558 Coq.Structures.OrdersFacts <> <> lib
R560:563 Coq.NArith.Nnat <> <> lib
R565:571 Coq.Numbers.Natural.Abstract.NAxioms <> <> lib
R573:576 Bignums.SpecViaZ.NSig <> <> lib
R578:580 Coq.micromega.Lia <> <> lib
R691:696 Bignums.SpecViaZ.NSig NType' <> mod
mod 663:676 <> NTypeIsNAxioms
R715:720 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
R722:727 Bignums.SpecViaZ.NSigNAxioms NN spec_1 defax
R729:734 Bignums.SpecViaZ.NSigNAxioms NN spec_2 defax
R736:744 Bignums.SpecViaZ.NSigNAxioms NN spec_succ defax
R746:753 Bignums.SpecViaZ.NSigNAxioms NN spec_add defax
R755:762 Bignums.SpecViaZ.NSigNAxioms NN spec_mul defax
R764:772 Bignums.SpecViaZ.NSigNAxioms NN spec_pred defax
R774:781 Bignums.SpecViaZ.NSigNAxioms NN spec_sub defax
R784:791 Bignums.SpecViaZ.NSigNAxioms NN spec_div defax
R793:803 Bignums.SpecViaZ.NSigNAxioms NN spec_modulo defax
R805:812 Bignums.SpecViaZ.NSigNAxioms NN spec_gcd defax
R814:825 Bignums.SpecViaZ.NSigNAxioms NN spec_compare defax
R827:834 Bignums.SpecViaZ.NSigNAxioms NN spec_eqb defax
R836:843 Bignums.SpecViaZ.NSigNAxioms NN spec_ltb defax
R845:852 Bignums.SpecViaZ.NSigNAxioms NN spec_leb defax
R855:865 Bignums.SpecViaZ.NSigNAxioms NN spec_square defax
R867:875 Bignums.SpecViaZ.NSigNAxioms NN spec_sqrt defax
R877:885 Bignums.SpecViaZ.NSigNAxioms NN spec_log2 defax
R887:894 Bignums.SpecViaZ.NSigNAxioms NN spec_max defax
R896:903 Bignums.SpecViaZ.NSigNAxioms NN spec_min defax
R905:916 Bignums.SpecViaZ.NSigNAxioms NN spec_pow_pos defax
R918:927 Bignums.SpecViaZ.NSigNAxioms NN spec_pow_N defax
R930:937 Bignums.SpecViaZ.NSigNAxioms NN spec_pow defax
R939:947 Bignums.SpecViaZ.NSigNAxioms NN spec_even defax
R949:956 Bignums.SpecViaZ.NSigNAxioms NN spec_odd defax
R958:969 Bignums.SpecViaZ.NSigNAxioms NN spec_testbit defax
R971:981 Bignums.SpecViaZ.NSigNAxioms NN spec_shiftl defax
R983:993 Bignums.SpecViaZ.NSigNAxioms NN spec_shiftr defax
R996:1004 Bignums.SpecViaZ.NSigNAxioms NN spec_land defax
R1006:1013 Bignums.SpecViaZ.NSigNAxioms NN spec_lor defax
R1015:1024 Bignums.SpecViaZ.NSigNAxioms NN spec_ldiff defax
R1026:1034 Bignums.SpecViaZ.NSigNAxioms NN spec_lxor defax
R1036:1044 Bignums.SpecViaZ.NSigNAxioms NN spec_div2 defax
R1046:1054 Bignums.SpecViaZ.NSigNAxioms NN spec_of_N defax
R1134:1135 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1138:1141 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R1204:1205 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1208:1209 Bignums.SpecViaZ.NSigNAxioms NN lt def
R1212:1213 Bignums.SpecViaZ.NSigNAxioms NN le def
R1216:1219 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R1267:1274 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
inst 1336:1343 NTypeIsNAxioms eq_equiv
R1347:1357 Coq.Classes.RelationClasses <> Equivalence class
R1359:1360 Bignums.SpecViaZ.NSigNAxioms NN eq def
inst 1413:1419 NTypeIsNAxioms succ_wd
R1423:1428 Coq.Classes.Morphisms <> Proper class
R1440:1443 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R1433:1435 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1431:1432 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1436:1437 Bignums.SpecViaZ.NSigNAxioms NN eq def
inst 1463:1469 NTypeIsNAxioms pred_wd
R1473:1478 Coq.Classes.Morphisms <> Proper class
R1490:1493 Bignums.SpecViaZ.NSigNAxioms NN pred defax
R1483:1485 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1481:1482 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1486:1487 Bignums.SpecViaZ.NSigNAxioms NN eq def
inst 1513:1518 NTypeIsNAxioms add_wd
R1522:1527 Coq.Classes.Morphisms <> Proper class
R1544:1546 Bignums.SpecViaZ.NSigNAxioms NN add defax
R1532:1534 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1530:1531 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1537:1539 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1535:1536 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1540:1541 Bignums.SpecViaZ.NSigNAxioms NN eq def
inst 1566:1571 NTypeIsNAxioms sub_wd
R1575:1580 Coq.Classes.Morphisms <> Proper class
R1597:1599 Bignums.SpecViaZ.NSigNAxioms NN sub defax
R1585:1587 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1583:1584 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1590:1592 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1588:1589 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1593:1594 Bignums.SpecViaZ.NSigNAxioms NN eq def
inst 1619:1624 NTypeIsNAxioms mul_wd
R1628:1633 Coq.Classes.Morphisms <> Proper class
R1650:1652 Bignums.SpecViaZ.NSigNAxioms NN mul defax
R1638:1640 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1636:1637 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1643:1645 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R1641:1642 Bignums.SpecViaZ.NSigNAxioms NN eq def
R1646:1647 Bignums.SpecViaZ.NSigNAxioms NN eq def
prf 1664:1672 NTypeIsNAxioms pred_succ
binder 1683:1683 <> n:1
R1699:1702 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R1686:1689 Bignums.SpecViaZ.NSigNAxioms NN pred defax
R1692:1695 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R1697:1697 Bignums.SpecViaZ.NSigNAxioms <> n:1 var
R1703:1703 Bignums.SpecViaZ.NSigNAxioms <> n:1 var
prf 1754:1761 NTypeIsNAxioms one_succ
R1766:1769 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R1770:1773 Bignums.SpecViaZ.NSigNAxioms NN succ defax
prf 1809:1816 NTypeIsNAxioms two_succ
R1821:1824 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R1825:1828 Bignums.SpecViaZ.NSigNAxioms NN succ defax
def 1867:1872 NTypeIsNAxioms N_of_Z
binder 1874:1874 <> z:2
R1879:1882 Bignums.SpecViaZ.NSigNAxioms NN of_N defax
R1885:1890 Coq.ZArith.BinInt Z to_N def
R1892:1892 Bignums.SpecViaZ.NSigNAxioms <> z:2 var
prf 1903:1913 NTypeIsNAxioms spec_N_of_Z
binder 1915:1915 <> z:3
R1927:1930 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1921:1922 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1923:1923 Bignums.SpecViaZ.NSigNAxioms <> z:3 var
R1941:1943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1931:1931 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R1940:1940 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R1932:1937 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R1939:1939 Bignums.SpecViaZ.NSigNAxioms <> z:3 var
R1944:1944 Bignums.SpecViaZ.NSigNAxioms <> z:3 var
R1962:1967 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R1982:1987 Coq.ZArith.Znat Z2N id thm
R1982:1987 Coq.ZArith.Znat Z2N id thm
sec 2004:2012 NTypeIsNAxioms Induction
var 2025:2025 NTypeIsNAxioms.Induction A
R2033:2036 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2029:2032 Bignums.SpecViaZ.NSigNAxioms NN t defax
var 2054:2057 NTypeIsNAxioms.Induction A_wd
R2061:2066 Coq.Classes.Morphisms <> Proper class
R2079:2079 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A var
R2071:2073 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R2069:2070 Bignums.SpecViaZ.NSigNAxioms NN eq def
R2074:2076 Coq.Init.Logic <> iff def
var 2093:2094 NTypeIsNAxioms.Induction A0
R2098:2098 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A var
var 2114:2115 NTypeIsNAxioms.Induction AS
binder 2126:2126 <> n:7
R2132:2136 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R2129:2129 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A var
R2131:2131 Bignums.SpecViaZ.NSigNAxioms <> n:7 var
R2137:2137 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A var
R2140:2143 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R2145:2145 Bignums.SpecViaZ.NSigNAxioms <> n:7 var
var 2154:2154 NTypeIsNAxioms.Induction B
R2161:2161 Coq.Numbers.BinNums <> Z ind
binder 2157:2157 <> z:9
R2167:2167 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A var
R2170:2175 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2177:2177 Bignums.SpecViaZ.NSigNAxioms <> z:9 var
prf 2188:2189 NTypeIsNAxioms B0
R2193:2193 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.B var
R2212:2212 Bignums.SpecViaZ.NSigNAxioms <> B vardef
R2215:2220 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2242:2245 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A_wd var
R2242:2245 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A_wd var
R2242:2245 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A_wd var
R2242:2245 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A_wd var
R2270:2275 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
R2278:2286 Bignums.SpecViaZ.NSigNAxioms NN spec_of_N defax
R2270:2275 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
R2270:2275 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
R2278:2286 Bignums.SpecViaZ.NSigNAxioms NN spec_of_N defax
R2278:2286 Bignums.SpecViaZ.NSigNAxioms NN spec_of_N defax
prf 2307:2308 NTypeIsNAxioms BS
R2323:2323 Coq.Numbers.BinNums <> Z ind
binder 2319:2319 <> z:10
R2336:2339 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2328:2331 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2332:2332 Bignums.SpecViaZ.NSigNAxioms <> z:10 var
R2343:2346 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2340:2340 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.B var
R2342:2342 Bignums.SpecViaZ.NSigNAxioms <> z:10 var
R2347:2347 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.B var
R2351:2353 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2350:2350 Bignums.SpecViaZ.NSigNAxioms <> z:10 var
R2388:2388 Bignums.SpecViaZ.NSigNAxioms <> B vardef
R2405:2406 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.AS var
R2405:2406 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.AS var
R2431:2436 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2440:2442 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2453:2456 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R2459:2464 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2431:2436 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2440:2442 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2453:2456 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R2459:2464 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2484:2485 Bignums.SpecViaZ.NSigNAxioms NN eq def
R2496:2504 Bignums.SpecViaZ.NSigNAxioms NN spec_succ defax
R2509:2519 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2496:2504 Bignums.SpecViaZ.NSigNAxioms NN spec_succ defax
R2496:2504 Bignums.SpecViaZ.NSigNAxioms NN spec_succ defax
R2509:2519 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2509:2519 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2509:2519 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2509:2519 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2509:2519 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
prf 2552:2558 NTypeIsNAxioms B_holds
R2573:2573 Coq.Numbers.BinNums <> Z ind
binder 2569:2569 <> z:11
R2586:2589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2578:2581 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2582:2582 Bignums.SpecViaZ.NSigNAxioms <> z:11 var
R2590:2590 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.B var
R2592:2592 Bignums.SpecViaZ.NSigNAxioms <> z:11 var
R2609:2619 Coq.ZArith.Wf_Z <> natlike_ind thm
R2621:2621 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.B var
R2623:2624 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms B0 thm
R2626:2627 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms BS thm
R2609:2619 Coq.ZArith.Wf_Z <> natlike_ind thm
R2621:2621 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.B var
R2623:2624 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms B0 thm
R2626:2627 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms BS thm
prf 2645:2656 NTypeIsNAxioms bi_induction
binder 2667:2667 <> n:12
R2670:2670 Bignums.SpecViaZ.NSigNAxioms <> NTypeIsNAxioms.Induction.A var
R2672:2672 Bignums.SpecViaZ.NSigNAxioms <> n:12 var
R2714:2719 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2722:2725 Bignums.SpecViaZ.NSigNAxioms NN to_Z defax
R2714:2719 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R2722:2725 Bignums.SpecViaZ.NSigNAxioms NN to_Z defax
R2738:2744 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms B_holds thm
R2738:2744 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms B_holds thm
R2753:2760 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R2753:2760 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R2801:2808 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R2780:2790 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2780:2790 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2801:2808 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R2780:2790 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R2821:2829 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms.Induction <> sec
prf 2841:2847 NTypeIsNAxioms add_0_l
binder 2858:2858 <> n:13
R2866:2869 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R2862:2864 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R2865:2865 Bignums.SpecViaZ.NSigNAxioms <> n:13 var
R2870:2870 Bignums.SpecViaZ.NSigNAxioms <> n:13 var
prf 2926:2935 NTypeIsNAxioms add_succ_l
binder 2946:2946 <> n:14
binder 2948:2948 <> m:15
R2963:2966 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R2951:2951 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R2958:2961 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R2952:2955 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R2957:2957 Bignums.SpecViaZ.NSigNAxioms <> n:14 var
R2962:2962 Bignums.SpecViaZ.NSigNAxioms <> m:15 var
R2967:2970 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R2974:2976 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R2973:2973 Bignums.SpecViaZ.NSigNAxioms <> n:14 var
R2977:2977 Bignums.SpecViaZ.NSigNAxioms <> m:15 var
prf 3034:3040 NTypeIsNAxioms sub_0_r
binder 3051:3051 <> n:16
R3059:3062 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R3055:3057 Bignums.SpecViaZ.NSig NType_Notation :::x_'-'_x not
R3054:3054 Bignums.SpecViaZ.NSigNAxioms <> n:16 var
R3063:3063 Bignums.SpecViaZ.NSigNAxioms <> n:16 var
prf 3114:3123 NTypeIsNAxioms sub_succ_r
binder 3134:3134 <> n:17
binder 3136:3136 <> m:18
R3151:3154 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R3140:3143 Bignums.SpecViaZ.NSig NType_Notation :::x_'-'_x not
R3150:3150 Bignums.SpecViaZ.NSig NType_Notation :::x_'-'_x not
R3139:3139 Bignums.SpecViaZ.NSigNAxioms <> n:17 var
R3144:3147 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R3149:3149 Bignums.SpecViaZ.NSigNAxioms <> m:18 var
R3155:3158 Bignums.SpecViaZ.NSigNAxioms NN pred defax
R3162:3164 Bignums.SpecViaZ.NSig NType_Notation :::x_'-'_x not
R3161:3161 Bignums.SpecViaZ.NSigNAxioms <> n:17 var
R3165:3165 Bignums.SpecViaZ.NSigNAxioms <> m:18 var
prf 3209:3215 NTypeIsNAxioms mul_0_l
binder 3226:3226 <> n:19
R3234:3237 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R3230:3232 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R3233:3233 Bignums.SpecViaZ.NSigNAxioms <> n:19 var
prf 3294:3303 NTypeIsNAxioms mul_succ_l
binder 3314:3314 <> n:20
binder 3316:3316 <> m:21
R3331:3334 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R3319:3319 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R3326:3329 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R3320:3323 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R3325:3325 Bignums.SpecViaZ.NSigNAxioms <> n:20 var
R3330:3330 Bignums.SpecViaZ.NSigNAxioms <> m:21 var
R3340:3342 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R3336:3338 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R3335:3335 Bignums.SpecViaZ.NSigNAxioms <> n:20 var
R3339:3339 Bignums.SpecViaZ.NSigNAxioms <> m:21 var
R3343:3343 Bignums.SpecViaZ.NSigNAxioms <> m:21 var
prf 3399:3404 NTypeIsNAxioms eqb_eq
binder 3406:3406 <> x:22
binder 3408:3408 <> y:23
R3426:3430 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3419:3421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3412:3414 Bignums.SpecViaZ.NSigNAxioms NN eqb defax
R3416:3416 Bignums.SpecViaZ.NSigNAxioms <> x:22 var
R3418:3418 Bignums.SpecViaZ.NSigNAxioms <> y:23 var
R3422:3425 Coq.Init.Datatypes <> true constr
R3432:3435 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R3431:3431 Bignums.SpecViaZ.NSigNAxioms <> x:22 var
R3436:3436 Bignums.SpecViaZ.NSigNAxioms <> y:23 var
R3459:3466 Coq.ZArith.BinInt Z eqb_eq thm
R3459:3466 Coq.ZArith.BinInt Z eqb_eq thm
prf 3481:3486 NTypeIsNAxioms leb_le
binder 3488:3488 <> x:24
binder 3490:3490 <> y:25
R3508:3512 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3501:3503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3494:3496 Bignums.SpecViaZ.NSigNAxioms NN leb defax
R3498:3498 Bignums.SpecViaZ.NSigNAxioms <> x:24 var
R3500:3500 Bignums.SpecViaZ.NSigNAxioms <> y:25 var
R3504:3507 Coq.Init.Datatypes <> true constr
R3514:3517 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R3513:3513 Bignums.SpecViaZ.NSigNAxioms <> x:24 var
R3518:3518 Bignums.SpecViaZ.NSigNAxioms <> y:25 var
R3541:3548 Coq.ZArith.BinInt Z leb_le thm
R3541:3548 Coq.ZArith.BinInt Z leb_le thm
prf 3563:3568 NTypeIsNAxioms ltb_lt
binder 3570:3570 <> x:26
binder 3572:3572 <> y:27
R3590:3594 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3583:3585 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3576:3578 Bignums.SpecViaZ.NSigNAxioms NN ltb defax
R3580:3580 Bignums.SpecViaZ.NSigNAxioms <> x:26 var
R3582:3582 Bignums.SpecViaZ.NSigNAxioms <> y:27 var
R3586:3589 Coq.Init.Datatypes <> true constr
R3596:3598 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R3595:3595 Bignums.SpecViaZ.NSigNAxioms <> x:26 var
R3599:3599 Bignums.SpecViaZ.NSigNAxioms <> y:27 var
R3622:3629 Coq.ZArith.BinInt Z ltb_lt thm
R3622:3629 Coq.ZArith.BinInt Z ltb_lt thm
prf 3644:3657 NTypeIsNAxioms compare_eq_iff
binder 3659:3659 <> n:28
binder 3661:3661 <> m:29
R3681:3685 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3676:3678 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3665:3671 Bignums.SpecViaZ.NSigNAxioms NN compare defax
R3673:3673 Bignums.SpecViaZ.NSigNAxioms <> n:28 var
R3675:3675 Bignums.SpecViaZ.NSigNAxioms <> m:29 var
R3679:3680 Coq.Init.Datatypes <> Eq constr
R3687:3690 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R3686:3686 Bignums.SpecViaZ.NSigNAxioms <> n:28 var
R3691:3691 Bignums.SpecViaZ.NSigNAxioms <> m:29 var
R3722:3737 Coq.ZArith.BinInt Z compare_eq_iff thm
R3722:3737 Coq.ZArith.BinInt Z compare_eq_iff thm
prf 3752:3765 NTypeIsNAxioms compare_lt_iff
binder 3767:3767 <> n:30
binder 3769:3769 <> m:31
R3789:3793 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3784:3786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3773:3779 Bignums.SpecViaZ.NSigNAxioms NN compare defax
R3781:3781 Bignums.SpecViaZ.NSigNAxioms <> n:30 var
R3783:3783 Bignums.SpecViaZ.NSigNAxioms <> m:31 var
R3787:3788 Coq.Init.Datatypes <> Lt constr
R3795:3797 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R3794:3794 Bignums.SpecViaZ.NSigNAxioms <> n:30 var
R3798:3798 Bignums.SpecViaZ.NSigNAxioms <> m:31 var
prf 3848:3861 NTypeIsNAxioms compare_le_iff
binder 3863:3863 <> n:32
binder 3865:3865 <> m:33
R3886:3890 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R3880:3883 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R3869:3875 Bignums.SpecViaZ.NSigNAxioms NN compare defax
R3877:3877 Bignums.SpecViaZ.NSigNAxioms <> n:32 var
R3879:3879 Bignums.SpecViaZ.NSigNAxioms <> m:33 var
R3884:3885 Coq.Init.Datatypes <> Gt constr
R3892:3895 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R3891:3891 Bignums.SpecViaZ.NSigNAxioms <> n:32 var
R3896:3896 Bignums.SpecViaZ.NSigNAxioms <> m:33 var
prf 3946:3960 NTypeIsNAxioms compare_antisym
binder 3962:3962 <> n:34
binder 3964:3964 <> m:35
R3979:3981 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3968:3974 Bignums.SpecViaZ.NSigNAxioms NN compare defax
R3976:3976 Bignums.SpecViaZ.NSigNAxioms <> m:35 var
R3978:3978 Bignums.SpecViaZ.NSigNAxioms <> n:34 var
R3982:3988 Coq.Init.Datatypes <> CompOpp def
R3991:3997 Bignums.SpecViaZ.NSigNAxioms NN compare defax
R3999:3999 Bignums.SpecViaZ.NSigNAxioms <> n:34 var
R4001:4001 Bignums.SpecViaZ.NSigNAxioms <> m:35 var
R4033:4049 Coq.ZArith.BinInt Z compare_antisym thm
R4033:4049 Coq.ZArith.BinInt Z compare_antisym thm
R4066:4079 Coq.Structures.OrdersFacts BoolOrderFacts <> mod
R4081:4082 Bignums.SpecViaZ.NSigNAxioms NN <> modtype
R4084:4085 Bignums.SpecViaZ.NSigNAxioms NN <> modtype
R4087:4088 Bignums.SpecViaZ.NSigNAxioms NN <> modtype
inst 4113:4122 NTypeIsNAxioms compare_wd
R4126:4131 Coq.Classes.Morphisms <> Proper class
R4158:4164 Bignums.SpecViaZ.NSigNAxioms NN compare defax
R4136:4140 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4134:4135 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4143:4147 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4141:4142 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4148:4155 Coq.Init.Logic <> eq ind
inst 4239:4244 NTypeIsNAxioms eqb_wd
R4248:4253 Coq.Classes.Morphisms <> Proper class
R4280:4282 Bignums.SpecViaZ.NSigNAxioms NN eqb defax
R4258:4262 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4256:4257 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4265:4269 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4263:4264 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4270:4277 Coq.Init.Logic <> eq ind
inst 4357:4362 NTypeIsNAxioms ltb_wd
R4366:4371 Coq.Classes.Morphisms <> Proper class
R4398:4400 Bignums.SpecViaZ.NSigNAxioms NN ltb defax
R4376:4380 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4374:4375 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4383:4387 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4381:4382 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4388:4395 Coq.Init.Logic <> eq ind
inst 4475:4480 NTypeIsNAxioms leb_wd
R4484:4489 Coq.Classes.Morphisms <> Proper class
R4516:4518 Bignums.SpecViaZ.NSigNAxioms NN leb defax
R4494:4498 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4492:4493 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4501:4505 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4499:4500 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4506:4513 Coq.Init.Logic <> eq ind
inst 4593:4597 NTypeIsNAxioms lt_wd
R4601:4606 Coq.Classes.Morphisms <> Proper class
R4628:4629 Bignums.SpecViaZ.NSigNAxioms NN lt def
R4611:4615 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4609:4610 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4618:4622 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4616:4617 Bignums.SpecViaZ.NSigNAxioms NN eq def
R4623:4625 Coq.Init.Logic <> iff def
R4670:4671 Bignums.SpecViaZ.NSigNAxioms NN lt def
prf 4715:4723 NTypeIsNAxioms lt_succ_r
binder 4734:4734 <> n:36
binder 4736:4736 <> m:37
R4749:4753 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4740:4742 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R4739:4739 Bignums.SpecViaZ.NSigNAxioms <> n:36 var
R4743:4746 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R4748:4748 Bignums.SpecViaZ.NSigNAxioms <> m:37 var
R4755:4758 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R4754:4754 Bignums.SpecViaZ.NSigNAxioms <> n:36 var
R4759:4759 Bignums.SpecViaZ.NSigNAxioms <> m:37 var
prf 4802:4806 NTypeIsNAxioms min_l
binder 4817:4817 <> n:38
binder 4819:4819 <> m:39
R4828:4831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4823:4826 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R4822:4822 Bignums.SpecViaZ.NSigNAxioms <> n:38 var
R4827:4827 Bignums.SpecViaZ.NSigNAxioms <> m:39 var
R4839:4842 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R4832:4834 Bignums.SpecViaZ.NSigNAxioms NN min defax
R4836:4836 Bignums.SpecViaZ.NSigNAxioms <> n:38 var
R4838:4838 Bignums.SpecViaZ.NSigNAxioms <> m:39 var
R4843:4843 Bignums.SpecViaZ.NSigNAxioms <> n:38 var
prf 4894:4898 NTypeIsNAxioms min_r
binder 4909:4909 <> n:40
binder 4911:4911 <> m:41
R4920:4923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4915:4918 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R4914:4914 Bignums.SpecViaZ.NSigNAxioms <> m:41 var
R4919:4919 Bignums.SpecViaZ.NSigNAxioms <> n:40 var
R4931:4934 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R4924:4926 Bignums.SpecViaZ.NSigNAxioms NN min defax
R4928:4928 Bignums.SpecViaZ.NSigNAxioms <> n:40 var
R4930:4930 Bignums.SpecViaZ.NSigNAxioms <> m:41 var
R4935:4935 Bignums.SpecViaZ.NSigNAxioms <> m:41 var
prf 4986:4990 NTypeIsNAxioms max_l
binder 5001:5001 <> n:42
binder 5003:5003 <> m:43
R5012:5015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5007:5010 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R5006:5006 Bignums.SpecViaZ.NSigNAxioms <> m:43 var
R5011:5011 Bignums.SpecViaZ.NSigNAxioms <> n:42 var
R5023:5026 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5016:5018 Bignums.SpecViaZ.NSigNAxioms NN max defax
R5020:5020 Bignums.SpecViaZ.NSigNAxioms <> n:42 var
R5022:5022 Bignums.SpecViaZ.NSigNAxioms <> m:43 var
R5027:5027 Bignums.SpecViaZ.NSigNAxioms <> n:42 var
prf 5078:5082 NTypeIsNAxioms max_r
binder 5093:5093 <> n:44
binder 5095:5095 <> m:45
R5104:5107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5099:5102 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R5098:5098 Bignums.SpecViaZ.NSigNAxioms <> n:44 var
R5103:5103 Bignums.SpecViaZ.NSigNAxioms <> m:45 var
R5115:5118 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5108:5110 Bignums.SpecViaZ.NSigNAxioms NN max defax
R5112:5112 Bignums.SpecViaZ.NSigNAxioms <> n:44 var
R5114:5114 Bignums.SpecViaZ.NSigNAxioms <> m:45 var
R5119:5119 Bignums.SpecViaZ.NSigNAxioms <> m:45 var
prf 5232:5237 NTypeIsNAxioms pred_0
R5247:5250 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5241:5244 Bignums.SpecViaZ.NSigNAxioms NN pred defax
inst 5310:5315 NTypeIsNAxioms pow_wd
R5319:5324 Coq.Classes.Morphisms <> Proper class
R5341:5343 Bignums.SpecViaZ.NSigNAxioms NN pow defax
R5329:5331 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5327:5328 Bignums.SpecViaZ.NSigNAxioms NN eq def
R5334:5336 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R5332:5333 Bignums.SpecViaZ.NSigNAxioms NN eq def
R5337:5338 Bignums.SpecViaZ.NSigNAxioms NN eq def
prf 5353:5359 NTypeIsNAxioms pow_0_r
binder 5370:5370 <> a:46
R5376:5379 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5374:5374 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5373:5373 Bignums.SpecViaZ.NSigNAxioms <> a:46 var
prf 5421:5430 NTypeIsNAxioms pow_succ_r
binder 5441:5441 <> a:47
binder 5443:5443 <> b:48
R5450:5453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5447:5448 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R5449:5449 Bignums.SpecViaZ.NSigNAxioms <> b:48 var
R5464:5467 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5455:5456 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5463:5463 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5454:5454 Bignums.SpecViaZ.NSigNAxioms <> a:47 var
R5457:5460 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R5462:5462 Bignums.SpecViaZ.NSigNAxioms <> b:48 var
R5469:5471 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R5468:5468 Bignums.SpecViaZ.NSigNAxioms <> a:47 var
R5473:5473 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5472:5472 Bignums.SpecViaZ.NSigNAxioms <> a:47 var
R5474:5474 Bignums.SpecViaZ.NSigNAxioms <> b:48 var
prf 5538:5546 NTypeIsNAxioms pow_neg_r
binder 5557:5557 <> a:49
binder 5559:5559 <> b:50
R5565:5568 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5563:5563 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R5562:5562 Bignums.SpecViaZ.NSigNAxioms <> b:50 var
R5572:5575 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5570:5570 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5569:5569 Bignums.SpecViaZ.NSigNAxioms <> a:49 var
R5571:5571 Bignums.SpecViaZ.NSigNAxioms <> b:50 var
prf 5649:5657 NTypeIsNAxioms pow_pow_N
binder 5668:5668 <> a:51
binder 5670:5670 <> b:52
R5676:5679 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5674:5674 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5673:5673 Bignums.SpecViaZ.NSigNAxioms <> a:51 var
R5675:5675 Bignums.SpecViaZ.NSigNAxioms <> b:52 var
R5680:5684 Bignums.SpecViaZ.NSigNAxioms NN pow_N defax
R5686:5686 Bignums.SpecViaZ.NSigNAxioms <> a:51 var
R5689:5692 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R5694:5694 Bignums.SpecViaZ.NSigNAxioms <> b:52 var
R5758:5765 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R5742:5747 Coq.ZArith.Znat Z2N id thm
R5742:5747 Coq.ZArith.Znat Z2N id thm
R5758:5765 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R5742:5747 Coq.ZArith.Znat Z2N id thm
prf 5780:5788 NTypeIsNAxioms pow_N_pow
binder 5799:5799 <> a:53
binder 5801:5801 <> b:54
R5813:5816 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5804:5808 Bignums.SpecViaZ.NSigNAxioms NN pow_N defax
R5810:5810 Bignums.SpecViaZ.NSigNAxioms <> a:53 var
R5812:5812 Bignums.SpecViaZ.NSigNAxioms <> b:54 var
R5818:5819 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5826:5826 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R5817:5817 Bignums.SpecViaZ.NSigNAxioms <> a:53 var
R5820:5823 Bignums.SpecViaZ.NSigNAxioms NN of_N defax
R5825:5825 Bignums.SpecViaZ.NSigNAxioms <> b:54 var
prf 5867:5875 NTypeIsNAxioms pow_pos_N
binder 5886:5886 <> a:55
binder 5888:5888 <> p:56
R5902:5905 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5891:5897 Bignums.SpecViaZ.NSigNAxioms NN pow_pos defax
R5899:5899 Bignums.SpecViaZ.NSigNAxioms <> a:55 var
R5901:5901 Bignums.SpecViaZ.NSigNAxioms <> p:56 var
R5906:5910 Bignums.SpecViaZ.NSigNAxioms NN pow_N defax
R5912:5912 Bignums.SpecViaZ.NSigNAxioms <> a:55 var
R5915:5918 Coq.Numbers.BinNums <> Npos constr
R5920:5920 Bignums.SpecViaZ.NSigNAxioms <> p:56 var
prf 5977:5987 NTypeIsNAxioms square_spec
binder 5989:5989 <> n:57
R6001:6004 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R5993:5998 Bignums.SpecViaZ.NSigNAxioms NN square defax
R6000:6000 Bignums.SpecViaZ.NSigNAxioms <> n:57 var
R6006:6008 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6005:6005 Bignums.SpecViaZ.NSigNAxioms <> n:57 var
R6009:6009 Bignums.SpecViaZ.NSigNAxioms <> n:57 var
prf 6055:6063 NTypeIsNAxioms sqrt_spec
binder 6074:6074 <> n:58
R6081:6085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6078:6079 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R6080:6080 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6108:6111 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6103:6106 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R6086:6086 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6093:6095 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6102:6102 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6087:6090 Bignums.SpecViaZ.NSigNAxioms NN sqrt defax
R6092:6092 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6096:6099 Bignums.SpecViaZ.NSigNAxioms NN sqrt defax
R6101:6101 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6107:6107 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6113:6115 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R6112:6112 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6116:6116 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6130:6132 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6146:6146 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6117:6120 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R6123:6126 Bignums.SpecViaZ.NSigNAxioms NN sqrt defax
R6128:6128 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6133:6136 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R6139:6142 Bignums.SpecViaZ.NSigNAxioms NN sqrt defax
R6144:6144 Bignums.SpecViaZ.NSigNAxioms <> n:58 var
R6179:6189 Coq.ZArith.BinInt Z sqrt_spec thm
R6179:6189 Coq.ZArith.BinInt Z sqrt_spec thm
prf 6204:6211 NTypeIsNAxioms sqrt_neg
binder 6222:6222 <> n:59
R6228:6231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6226:6226 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R6225:6225 Bignums.SpecViaZ.NSigNAxioms <> n:59 var
R6238:6241 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R6232:6235 Bignums.SpecViaZ.NSigNAxioms NN sqrt defax
R6237:6237 Bignums.SpecViaZ.NSigNAxioms <> n:59 var
prf 6325:6333 NTypeIsNAxioms log2_spec
binder 6344:6344 <> n:60
R6350:6354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6348:6348 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R6349:6349 Bignums.SpecViaZ.NSigNAxioms <> n:60 var
R6370:6373 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6365:6368 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R6356:6357 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R6364:6364 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R6358:6361 Bignums.SpecViaZ.NSigNAxioms NN log2 defax
R6363:6363 Bignums.SpecViaZ.NSigNAxioms <> n:60 var
R6369:6369 Bignums.SpecViaZ.NSigNAxioms <> n:60 var
R6375:6377 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R6374:6374 Bignums.SpecViaZ.NSigNAxioms <> n:60 var
R6379:6380 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R6394:6394 Bignums.SpecViaZ.NSig NType_Notation :::x_'^'_x not
R6381:6384 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R6387:6390 Bignums.SpecViaZ.NSigNAxioms NN log2 defax
R6392:6392 Bignums.SpecViaZ.NSigNAxioms <> n:60 var
R6439:6439 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6429:6434 Coq.ZArith.BinInt Z log2 def
R6436:6436 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6438:6438 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6451:6456 Coq.ZArith.BinInt Z succ def
R6459:6464 Coq.ZArith.BinInt Z log2 def
R6466:6466 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6468:6468 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6439:6439 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R6429:6434 Coq.ZArith.BinInt Z log2 def
R6436:6436 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6438:6438 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6451:6456 Coq.ZArith.BinInt Z succ def
R6459:6464 Coq.ZArith.BinInt Z log2 def
R6466:6466 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6468:6468 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6480:6490 Coq.ZArith.BinInt Z log2_spec thm
R6480:6490 Coq.ZArith.BinInt Z log2_spec thm
prf 6505:6515 NTypeIsNAxioms log2_nonpos
binder 6526:6526 <> n:61
R6533:6536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6530:6531 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R6529:6529 Bignums.SpecViaZ.NSigNAxioms <> n:61 var
R6543:6546 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R6537:6540 Bignums.SpecViaZ.NSigNAxioms NN log2 defax
R6542:6542 Bignums.SpecViaZ.NSigNAxioms <> n:61 var
R6580:6592 Coq.ZArith.BinInt Z log2_nonpos thm
R6580:6592 Coq.ZArith.BinInt Z log2_nonpos thm
def 6631:6634 NTypeIsNAxioms Even
binder 6636:6636 <> n:62
R6641:6647 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6649:6650 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6648:6648 <> m:63
R6652:6655 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R6651:6651 Bignums.SpecViaZ.NSigNAxioms <> n:62 var
R6657:6657 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6658:6658 Bignums.SpecViaZ.NSigNAxioms <> m:63 var
def 6672:6674 NTypeIsNAxioms Odd
binder 6676:6676 <> n:64
R6681:6687 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6689:6690 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6688:6688 <> m:65
R6692:6695 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R6691:6691 Bignums.SpecViaZ.NSigNAxioms <> n:64 var
R6699:6699 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R6697:6697 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R6698:6698 Bignums.SpecViaZ.NSigNAxioms <> m:65 var
prf 6710:6718 NTypeIsNAxioms even_spec
binder 6720:6720 <> n:66
R6737:6741 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6730:6732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6724:6727 Bignums.SpecViaZ.NSigNAxioms NN even defax
R6729:6729 Bignums.SpecViaZ.NSigNAxioms <> n:66 var
R6733:6736 Coq.Init.Datatypes <> true constr
R6742:6745 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms Even def
R6747:6747 Bignums.SpecViaZ.NSigNAxioms <> n:66 var
R6765:6768 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms Even def
R6785:6795 Coq.ZArith.BinInt Z even_spec thm
R6785:6795 Coq.ZArith.BinInt Z even_spec thm
R6785:6795 Coq.ZArith.BinInt Z even_spec thm
R6832:6837 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R6832:6837 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R6857:6867 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R6857:6867 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R6857:6867 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R6857:6867 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R6902:6902 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6904:6904 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6902:6902 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R6904:6904 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
prf 6940:6947 NTypeIsNAxioms odd_spec
binder 6949:6949 <> n:67
R6965:6969 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6958:6960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6953:6955 Bignums.SpecViaZ.NSigNAxioms NN odd defax
R6957:6957 Bignums.SpecViaZ.NSigNAxioms <> n:67 var
R6961:6964 Coq.Init.Datatypes <> true constr
R6970:6972 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms Odd def
R6974:6974 Bignums.SpecViaZ.NSigNAxioms <> n:67 var
R6992:6994 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms Odd def
R7011:7020 Coq.ZArith.BinInt Z odd_spec thm
R7011:7020 Coq.ZArith.BinInt Z odd_spec thm
R7011:7020 Coq.ZArith.BinInt Z odd_spec thm
R7057:7062 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R7057:7062 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms N_of_Z def
R7082:7092 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R7082:7092 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R7082:7092 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R7082:7092 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_N_of_Z thm
R7127:7127 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7129:7129 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7127:7127 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7129:7129 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
inst 7194:7199 NTypeIsNAxioms div_wd
R7203:7208 Coq.Classes.Morphisms <> Proper class
R7225:7227 Bignums.SpecViaZ.NSigNAxioms NN div defax
R7213:7215 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R7211:7212 Bignums.SpecViaZ.NSigNAxioms NN eq def
R7218:7220 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R7216:7217 Bignums.SpecViaZ.NSigNAxioms NN eq def
R7221:7222 Bignums.SpecViaZ.NSigNAxioms NN eq def
inst 7247:7252 NTypeIsNAxioms mod_wd
R7256:7261 Coq.Classes.Morphisms <> Proper class
R7278:7283 Bignums.SpecViaZ.NSigNAxioms NN modulo defax
R7266:7268 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R7264:7265 Bignums.SpecViaZ.NSigNAxioms NN eq def
R7271:7273 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R7269:7270 Bignums.SpecViaZ.NSigNAxioms NN eq def
R7274:7275 Bignums.SpecViaZ.NSigNAxioms NN eq def
prf 7295:7301 NTypeIsNAxioms div_mod
binder 7312:7312 <> a:68
binder 7314:7314 <> b:69
R7322:7325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7317:7317 Coq.Init.Logic <> ::type_scope:'~'_x not
R7319:7320 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R7318:7318 Bignums.SpecViaZ.NSigNAxioms <> b:69 var
R7327:7330 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R7326:7326 Bignums.SpecViaZ.NSigNAxioms <> a:68 var
R7342:7345 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R7356:7356 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R7332:7333 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R7341:7341 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R7331:7331 Bignums.SpecViaZ.NSigNAxioms <> b:69 var
R7334:7336 Bignums.SpecViaZ.NSigNAxioms NN div defax
R7338:7338 Bignums.SpecViaZ.NSigNAxioms <> a:68 var
R7340:7340 Bignums.SpecViaZ.NSigNAxioms <> b:69 var
R7346:7351 Bignums.SpecViaZ.NSigNAxioms NN modulo defax
R7353:7353 Bignums.SpecViaZ.NSigNAxioms <> a:68 var
R7355:7355 Bignums.SpecViaZ.NSigNAxioms <> b:69 var
R7398:7406 Coq.ZArith.BinInt Z div_mod thm
R7398:7406 Coq.ZArith.BinInt Z div_mod thm
prf 7429:7441 NTypeIsNAxioms mod_bound_pos
binder 7452:7452 <> a:70
binder 7454:7454 <> b:71
R7461:7464 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7458:7459 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R7460:7460 Bignums.SpecViaZ.NSigNAxioms <> a:70 var
R7468:7472 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7466:7466 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R7467:7467 Bignums.SpecViaZ.NSigNAxioms <> b:71 var
R7488:7491 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7474:7477 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R7478:7483 Bignums.SpecViaZ.NSigNAxioms NN modulo defax
R7485:7485 Bignums.SpecViaZ.NSigNAxioms <> a:70 var
R7487:7487 Bignums.SpecViaZ.NSigNAxioms <> b:71 var
R7502:7504 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R7492:7497 Bignums.SpecViaZ.NSigNAxioms NN modulo defax
R7499:7499 Bignums.SpecViaZ.NSigNAxioms <> a:70 var
R7501:7501 Bignums.SpecViaZ.NSigNAxioms <> b:71 var
R7505:7505 Bignums.SpecViaZ.NSigNAxioms <> b:71 var
R7539:7553 Coq.ZArith.BinInt Z mod_bound_pos def
R7539:7553 Coq.ZArith.BinInt Z mod_bound_pos def
def 7585:7590 NTypeIsNAxioms divide
binder 7592:7592 <> n:72
binder 7594:7594 <> m:73
R7599:7605 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7607:7608 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7606:7606 <> p:74
R7610:7613 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R7609:7609 Bignums.SpecViaZ.NSigNAxioms <> m:73 var
R7615:7615 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R7614:7614 Bignums.SpecViaZ.NSigNAxioms <> p:74 var
R7616:7616 Bignums.SpecViaZ.NSigNAxioms <> n:72 var
R7650:7655 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms divide def
not 7634:7634 NTypeIsNAxioms :::'('_x_'|'_x_')'
prf 7683:7693 NTypeIsNAxioms spec_divide
binder 7704:7704 <> n:75
binder 7706:7706 <> m:76
R7714:7718 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7709:7709 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R7711:7711 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R7713:7713 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R7710:7710 Bignums.SpecViaZ.NSigNAxioms <> n:75 var
R7712:7712 Bignums.SpecViaZ.NSigNAxioms <> m:76 var
R7719:7726 Coq.ZArith.BinInt Z divide def
R7728:7728 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7730:7730 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7729:7729 Bignums.SpecViaZ.NSigNAxioms <> n:75 var
R7732:7732 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7734:7734 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7733:7733 Bignums.SpecViaZ.NSigNAxioms <> m:76 var
R7788:7788 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7790:7790 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7788:7788 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7790:7790 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7838:7841 Bignums.SpecViaZ.NSigNAxioms NN of_N defax
R7844:7850 Coq.ZArith.BinInt Z abs_N def
R7838:7841 Bignums.SpecViaZ.NSigNAxioms NN of_N defax
R7844:7850 Coq.ZArith.BinInt Z abs_N def
R7874:7886 Coq.ZArith.Znat N2Z inj_abs_N thm
R7874:7886 Coq.ZArith.Znat N2Z inj_abs_N thm
R7874:7886 Coq.ZArith.Znat N2Z inj_abs_N thm
R7946:7953 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R7904:7911 Coq.ZArith.BinInt Z abs_eq thm
R7913:7913 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7915:7915 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7923:7930 Coq.ZArith.BinInt Z abs_eq thm
R7932:7932 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7934:7934 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7904:7911 Coq.ZArith.BinInt Z abs_eq thm
R7913:7913 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7915:7915 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7946:7953 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R7904:7911 Coq.ZArith.BinInt Z abs_eq thm
R7913:7913 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7915:7915 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7923:7930 Coq.ZArith.BinInt Z abs_eq thm
R7932:7932 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7934:7934 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7946:7953 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R7923:7930 Coq.ZArith.BinInt Z abs_eq thm
R7932:7932 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7934:7934 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R7974:7982 Coq.ZArith.BinInt Z abs_mul thm
R7974:7982 Coq.ZArith.BinInt Z abs_mul thm
R7974:7982 Coq.ZArith.BinInt Z abs_mul thm
prf 7997:8008 NTypeIsNAxioms gcd_divide_l
binder 8019:8019 <> n:77
binder 8021:8021 <> m:78
R8024:8024 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8032:8034 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8036:8036 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8025:8027 Bignums.SpecViaZ.NSigNAxioms NN gcd defax
R8029:8029 Bignums.SpecViaZ.NSigNAxioms <> n:77 var
R8031:8031 Bignums.SpecViaZ.NSigNAxioms <> m:78 var
R8035:8035 Bignums.SpecViaZ.NSigNAxioms <> n:77 var
R8065:8075 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8065:8075 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8090:8103 Coq.ZArith.BinInt Z gcd_divide_l thm
R8090:8103 Coq.ZArith.BinInt Z gcd_divide_l thm
prf 8118:8129 NTypeIsNAxioms gcd_divide_r
binder 8140:8140 <> n:79
binder 8142:8142 <> m:80
R8145:8145 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8153:8155 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8157:8157 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8146:8148 Bignums.SpecViaZ.NSigNAxioms NN gcd defax
R8150:8150 Bignums.SpecViaZ.NSigNAxioms <> n:79 var
R8152:8152 Bignums.SpecViaZ.NSigNAxioms <> m:80 var
R8156:8156 Bignums.SpecViaZ.NSigNAxioms <> m:80 var
R8186:8196 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8186:8196 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8211:8224 Coq.ZArith.BinInt Z gcd_divide_r thm
R8211:8224 Coq.ZArith.BinInt Z gcd_divide_r thm
prf 8239:8250 NTypeIsNAxioms gcd_greatest
binder 8261:8261 <> n:81
binder 8263:8263 <> m:82
binder 8265:8265 <> p:83
R8273:8276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8268:8268 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8270:8270 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8272:8272 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8269:8269 Bignums.SpecViaZ.NSigNAxioms <> p:83 var
R8271:8271 Bignums.SpecViaZ.NSigNAxioms <> n:81 var
R8282:8285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8277:8277 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8279:8279 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8281:8281 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8278:8278 Bignums.SpecViaZ.NSigNAxioms <> p:83 var
R8280:8280 Bignums.SpecViaZ.NSigNAxioms <> m:82 var
R8286:8286 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8288:8288 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8296:8296 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms :::'('_x_'|'_x_')' not
R8287:8287 Bignums.SpecViaZ.NSigNAxioms <> p:83 var
R8289:8291 Bignums.SpecViaZ.NSigNAxioms NN gcd defax
R8293:8293 Bignums.SpecViaZ.NSigNAxioms <> n:81 var
R8295:8295 Bignums.SpecViaZ.NSigNAxioms <> m:82 var
R8330:8340 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8330:8340 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8330:8340 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8330:8340 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8330:8340 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8330:8340 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms spec_divide thm
R8355:8368 Coq.ZArith.BinInt Z gcd_greatest thm
R8355:8368 Coq.ZArith.BinInt Z gcd_greatest thm
prf 8383:8392 NTypeIsNAxioms gcd_nonneg
binder 8403:8403 <> n:84
binder 8405:8405 <> m:85
R8409:8412 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R8413:8415 Bignums.SpecViaZ.NSigNAxioms NN gcd defax
R8417:8417 Bignums.SpecViaZ.NSigNAxioms <> n:84 var
R8419:8419 Bignums.SpecViaZ.NSigNAxioms <> m:85 var
R8450:8461 Coq.ZArith.BinInt Z gcd_nonneg thm
R8450:8461 Coq.ZArith.BinInt Z gcd_nonneg thm
inst 8514:8523 NTypeIsNAxioms testbit_wd
R8527:8532 Coq.Classes.Morphisms <> Proper class
R8555:8561 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R8537:8539 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R8535:8536 Bignums.SpecViaZ.NSigNAxioms NN eq def
R8542:8544 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R8540:8541 Bignums.SpecViaZ.NSigNAxioms NN eq def
R8545:8552 Coq.Init.Logic <> eq ind
prf 8571:8583 NTypeIsNAxioms testbit_odd_0
binder 8594:8594 <> a:86
R8614:8616 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8597:8603 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R8609:8609 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R8607:8607 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R8608:8608 Bignums.SpecViaZ.NSigNAxioms <> a:86 var
R8617:8620 Coq.Init.Datatypes <> true constr
R8651:8665 Coq.ZArith.BinInt Z testbit_odd_0 thm
R8651:8665 Coq.ZArith.BinInt Z testbit_odd_0 thm
prf 8680:8693 NTypeIsNAxioms testbit_even_0
binder 8704:8704 <> a:87
R8722:8724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8707:8713 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R8717:8717 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R8718:8718 Bignums.SpecViaZ.NSigNAxioms <> a:87 var
R8725:8729 Coq.Init.Datatypes <> false constr
R8760:8775 Coq.ZArith.BinInt Z testbit_even_0 thm
R8760:8775 Coq.ZArith.BinInt Z testbit_even_0 thm
prf 8790:8805 NTypeIsNAxioms testbit_odd_succ
binder 8816:8816 <> a:88
binder 8818:8818 <> n:89
R8825:8829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8822:8823 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R8824:8824 Bignums.SpecViaZ.NSigNAxioms <> n:89 var
R8854:8856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8830:8836 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R8842:8842 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R8840:8840 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R8841:8841 Bignums.SpecViaZ.NSigNAxioms <> a:88 var
R8847:8850 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R8852:8852 Bignums.SpecViaZ.NSigNAxioms <> n:89 var
R8857:8863 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R8865:8865 Bignums.SpecViaZ.NSigNAxioms <> a:88 var
R8867:8867 Bignums.SpecViaZ.NSigNAxioms <> n:89 var
R8902:8919 Coq.ZArith.BinInt Z testbit_odd_succ thm
R8902:8919 Coq.ZArith.BinInt Z testbit_odd_succ thm
prf 8934:8950 NTypeIsNAxioms testbit_even_succ
binder 8961:8961 <> a:90
binder 8963:8963 <> n:91
R8970:8974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8967:8968 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R8969:8969 Bignums.SpecViaZ.NSigNAxioms <> n:91 var
R8997:8999 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8975:8981 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R8985:8985 Bignums.SpecViaZ.NSig NType_Notation :::x_'*'_x not
R8986:8986 Bignums.SpecViaZ.NSigNAxioms <> a:90 var
R8990:8993 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R8995:8995 Bignums.SpecViaZ.NSigNAxioms <> n:91 var
R9000:9006 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9008:9008 Bignums.SpecViaZ.NSigNAxioms <> a:90 var
R9010:9010 Bignums.SpecViaZ.NSigNAxioms <> n:91 var
R9045:9063 Coq.ZArith.BinInt Z testbit_even_succ thm
R9045:9063 Coq.ZArith.BinInt Z testbit_even_succ thm
prf 9078:9090 NTypeIsNAxioms testbit_neg_r
binder 9101:9101 <> a:92
binder 9103:9103 <> n:93
R9109:9112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9107:9107 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R9106:9106 Bignums.SpecViaZ.NSigNAxioms <> n:93 var
R9124:9126 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9113:9119 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9121:9121 Bignums.SpecViaZ.NSigNAxioms <> a:92 var
R9123:9123 Bignums.SpecViaZ.NSigNAxioms <> n:93 var
R9127:9131 Coq.Init.Datatypes <> false constr
R9166:9180 Coq.ZArith.BinInt Z testbit_neg_r thm
R9166:9180 Coq.ZArith.BinInt Z testbit_neg_r thm
prf 9195:9205 NTypeIsNAxioms shiftr_spec
binder 9216:9216 <> a:94
binder 9218:9218 <> n:95
binder 9220:9220 <> m:96
R9227:9231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9224:9225 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R9226:9226 Bignums.SpecViaZ.NSigNAxioms <> m:96 var
R9254:9256 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9232:9238 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9241:9246 Bignums.SpecViaZ.NSigNAxioms NN shiftr defax
R9248:9248 Bignums.SpecViaZ.NSigNAxioms <> a:94 var
R9250:9250 Bignums.SpecViaZ.NSigNAxioms <> n:95 var
R9253:9253 Bignums.SpecViaZ.NSigNAxioms <> m:96 var
R9257:9263 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9265:9265 Bignums.SpecViaZ.NSigNAxioms <> a:94 var
R9269:9269 Bignums.SpecViaZ.NSig NType_Notation :::x_'+'_x not
R9268:9268 Bignums.SpecViaZ.NSigNAxioms <> m:96 var
R9270:9270 Bignums.SpecViaZ.NSigNAxioms <> n:95 var
R9308:9320 Coq.ZArith.BinInt Z shiftr_spec thm
R9308:9320 Coq.ZArith.BinInt Z shiftr_spec thm
prf 9335:9350 NTypeIsNAxioms shiftl_spec_high
binder 9361:9361 <> a:97
binder 9363:9363 <> n:98
binder 9365:9365 <> m:99
R9372:9375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9369:9370 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R9371:9371 Bignums.SpecViaZ.NSigNAxioms <> m:99 var
R9380:9384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9377:9378 Bignums.SpecViaZ.NSig NType_Notation :::x_'<='_x not
R9376:9376 Bignums.SpecViaZ.NSigNAxioms <> n:98 var
R9379:9379 Bignums.SpecViaZ.NSigNAxioms <> m:99 var
R9407:9409 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9385:9391 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9394:9399 Bignums.SpecViaZ.NSigNAxioms NN shiftl defax
R9401:9401 Bignums.SpecViaZ.NSigNAxioms <> a:97 var
R9403:9403 Bignums.SpecViaZ.NSigNAxioms <> n:98 var
R9406:9406 Bignums.SpecViaZ.NSigNAxioms <> m:99 var
R9410:9416 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9418:9418 Bignums.SpecViaZ.NSigNAxioms <> a:97 var
R9422:9422 Bignums.SpecViaZ.NSig NType_Notation :::x_'-'_x not
R9421:9421 Bignums.SpecViaZ.NSigNAxioms <> m:99 var
R9423:9423 Bignums.SpecViaZ.NSigNAxioms <> n:98 var
R9476:9482 Coq.ZArith.BinInt Z max_r thm
R9476:9482 Coq.ZArith.BinInt Z max_r thm
R9476:9482 Coq.ZArith.BinInt Z max_r thm
R9516:9533 Coq.ZArith.BinInt Z shiftl_spec_high thm
R9516:9533 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 9548:9562 NTypeIsNAxioms shiftl_spec_low
binder 9573:9573 <> a:100
binder 9575:9575 <> n:101
binder 9577:9577 <> m:102
R9583:9587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9581:9581 Bignums.SpecViaZ.NSig NType_Notation :::x_'<'_x not
R9580:9580 Bignums.SpecViaZ.NSigNAxioms <> m:102 var
R9582:9582 Bignums.SpecViaZ.NSigNAxioms <> n:101 var
R9610:9612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9588:9594 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9597:9602 Bignums.SpecViaZ.NSigNAxioms NN shiftl defax
R9604:9604 Bignums.SpecViaZ.NSigNAxioms <> a:100 var
R9606:9606 Bignums.SpecViaZ.NSigNAxioms <> n:101 var
R9609:9609 Bignums.SpecViaZ.NSigNAxioms <> m:102 var
R9613:9617 Coq.Init.Datatypes <> false constr
R9668:9684 Coq.ZArith.BinInt Z shiftl_spec_low thm
R9668:9684 Coq.ZArith.BinInt Z shiftl_spec_low thm
prf 9699:9707 NTypeIsNAxioms land_spec
binder 9718:9718 <> a:103
binder 9720:9720 <> b:104
binder 9722:9722 <> n:105
R9746:9748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9726:9732 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9735:9738 Bignums.SpecViaZ.NSigNAxioms NN land defax
R9740:9740 Bignums.SpecViaZ.NSigNAxioms <> a:103 var
R9742:9742 Bignums.SpecViaZ.NSigNAxioms <> b:104 var
R9745:9745 Bignums.SpecViaZ.NSigNAxioms <> n:105 var
R9760:9763 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9749:9755 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9757:9757 Bignums.SpecViaZ.NSigNAxioms <> a:103 var
R9759:9759 Bignums.SpecViaZ.NSigNAxioms <> n:105 var
R9764:9770 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9772:9772 Bignums.SpecViaZ.NSigNAxioms <> b:104 var
R9774:9774 Bignums.SpecViaZ.NSigNAxioms <> n:105 var
R9815:9825 Coq.ZArith.BinInt Z land_spec thm
R9815:9825 Coq.ZArith.BinInt Z land_spec thm
prf 9840:9847 NTypeIsNAxioms lor_spec
binder 9858:9858 <> a:106
binder 9860:9860 <> b:107
binder 9862:9862 <> n:108
R9885:9887 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9866:9872 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9875:9877 Bignums.SpecViaZ.NSigNAxioms NN lor defax
R9879:9879 Bignums.SpecViaZ.NSigNAxioms <> a:106 var
R9881:9881 Bignums.SpecViaZ.NSigNAxioms <> b:107 var
R9884:9884 Bignums.SpecViaZ.NSigNAxioms <> n:108 var
R9899:9902 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R9888:9894 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9896:9896 Bignums.SpecViaZ.NSigNAxioms <> a:106 var
R9898:9898 Bignums.SpecViaZ.NSigNAxioms <> n:108 var
R9903:9909 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R9911:9911 Bignums.SpecViaZ.NSigNAxioms <> b:107 var
R9913:9913 Bignums.SpecViaZ.NSigNAxioms <> n:108 var
R9954:9963 Coq.ZArith.BinInt Z lor_spec thm
R9954:9963 Coq.ZArith.BinInt Z lor_spec thm
prf 9978:9987 NTypeIsNAxioms ldiff_spec
binder 9998:9998 <> a:109
binder 10000:10000 <> b:110
binder 10002:10002 <> n:111
R10027:10029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10006:10012 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R10015:10019 Bignums.SpecViaZ.NSigNAxioms NN ldiff defax
R10021:10021 Bignums.SpecViaZ.NSigNAxioms <> a:109 var
R10023:10023 Bignums.SpecViaZ.NSigNAxioms <> b:110 var
R10026:10026 Bignums.SpecViaZ.NSigNAxioms <> n:111 var
R10041:10044 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R10030:10036 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R10038:10038 Bignums.SpecViaZ.NSigNAxioms <> a:109 var
R10040:10040 Bignums.SpecViaZ.NSigNAxioms <> n:111 var
R10045:10048 Coq.Init.Datatypes <> negb def
R10051:10057 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R10059:10059 Bignums.SpecViaZ.NSigNAxioms <> b:110 var
R10061:10061 Bignums.SpecViaZ.NSigNAxioms <> n:111 var
R10103:10114 Coq.ZArith.BinInt Z ldiff_spec thm
R10103:10114 Coq.ZArith.BinInt Z ldiff_spec thm
prf 10129:10137 NTypeIsNAxioms lxor_spec
binder 10148:10148 <> a:112
binder 10150:10150 <> b:113
binder 10152:10152 <> n:114
R10176:10178 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10156:10162 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R10165:10168 Bignums.SpecViaZ.NSigNAxioms NN lxor defax
R10170:10170 Bignums.SpecViaZ.NSigNAxioms <> a:112 var
R10172:10172 Bignums.SpecViaZ.NSigNAxioms <> b:113 var
R10175:10175 Bignums.SpecViaZ.NSigNAxioms <> n:114 var
R10179:10182 Coq.Init.Datatypes <> xorb def
R10199:10205 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R10207:10207 Bignums.SpecViaZ.NSigNAxioms <> b:113 var
R10209:10209 Bignums.SpecViaZ.NSigNAxioms <> n:114 var
R10185:10191 Bignums.SpecViaZ.NSigNAxioms NN testbit defax
R10193:10193 Bignums.SpecViaZ.NSigNAxioms <> a:112 var
R10195:10195 Bignums.SpecViaZ.NSigNAxioms <> n:114 var
R10251:10261 Coq.ZArith.BinInt Z lxor_spec thm
R10251:10261 Coq.ZArith.BinInt Z lxor_spec thm
prf 10276:10284 NTypeIsNAxioms div2_spec
binder 10295:10295 <> a:115
R10304:10307 Bignums.SpecViaZ.NSig NType_Notation :::x_'=='_x not
R10298:10301 Bignums.SpecViaZ.NSigNAxioms NN div2 defax
R10303:10303 Bignums.SpecViaZ.NSigNAxioms <> a:115 var
R10308:10313 Bignums.SpecViaZ.NSigNAxioms NN shiftr defax
R10315:10315 Bignums.SpecViaZ.NSigNAxioms <> a:115 var
R10354:10364 Coq.ZArith.BinInt Z div2_spec thm
R10354:10364 Coq.ZArith.BinInt Z div2_spec thm
def 10402:10410 NTypeIsNAxioms recursion
binder 10413:10413 <> A:116
R10428:10428 Bignums.SpecViaZ.NSigNAxioms <> A:116 var
binder 10424:10424 <> a:117
R10440:10443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10436:10439 Bignums.SpecViaZ.NSigNAxioms NN t defax
R10445:10448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10444:10444 Bignums.SpecViaZ.NSigNAxioms <> A:116 var
R10449:10449 Bignums.SpecViaZ.NSigNAxioms <> A:116 var
binder 10432:10432 <> f:118
R10457:10460 Bignums.SpecViaZ.NSigNAxioms NN t defax
binder 10453:10453 <> n:119
R10468:10479 Coq.NArith.BinNat N peano_rect def
R10491:10491 Bignums.SpecViaZ.NSigNAxioms <> A:116 var
R10494:10494 Bignums.SpecViaZ.NSigNAxioms <> a:117 var
binder 10501:10501 <> n:120
binder 10503:10503 <> a:121
R10508:10508 Bignums.SpecViaZ.NSigNAxioms <> f:118 var
R10522:10522 Bignums.SpecViaZ.NSigNAxioms <> a:121 var
R10511:10517 Bignums.SpecViaZ.NSigNAxioms NN of_N defax
R10519:10519 Bignums.SpecViaZ.NSigNAxioms <> n:120 var
R10526:10532 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R10534:10534 Bignums.SpecViaZ.NSigNAxioms <> n:119 var
R10548:10556 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R10548:10556 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
inst 10579:10590 NTypeIsNAxioms recursion_wd
binder 10593:10593 <> A:122
R10610:10617 Coq.Relations.Relation_Definitions <> relation def
R10619:10619 Bignums.SpecViaZ.NSigNAxioms <> A:122 var
binder 10604:10606 <> Aeq:123
R10625:10630 Coq.Classes.Morphisms <> Proper class
R10676:10684 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R10686:10686 Bignums.SpecViaZ.NSigNAxioms <> A:122 var
R10636:10640 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10633:10635 Bignums.SpecViaZ.NSigNAxioms <> Aeq:123 var
R10641:10641 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10656:10661 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10644:10646 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10642:10643 Bignums.SpecViaZ.NSigNAxioms NN eq def
R10650:10652 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10647:10649 Bignums.SpecViaZ.NSigNAxioms <> Aeq:123 var
R10653:10655 Bignums.SpecViaZ.NSigNAxioms <> Aeq:123 var
R10664:10668 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10662:10663 Bignums.SpecViaZ.NSigNAxioms NN eq def
R10669:10671 Bignums.SpecViaZ.NSigNAxioms <> Aeq:123 var
R10704:10705 Bignums.SpecViaZ.NSigNAxioms NN eq def
R10753:10761 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R10771:10777 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R10841:10851 Coq.NArith.BinNat N peano_ind def
R10823:10828 Coq.ZArith.BinInt Z to_N def
R10830:10830 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R10832:10832 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R10841:10851 Coq.NArith.BinNat N peano_ind def
R10823:10828 Coq.ZArith.BinInt Z to_N def
R10830:10830 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R10832:10832 Bignums.SpecViaZ.NSig NType_Notation :::'['_x_']' not
R10877:10893 Coq.NArith.BinNat N peano_rect_succ thm
R10877:10893 Coq.NArith.BinNat N peano_rect_succ thm
R10877:10893 Coq.NArith.BinNat N peano_rect_succ thm
R10877:10893 Coq.NArith.BinNat N peano_rect_succ thm
prf 10926:10936 NTypeIsNAxioms recursion_0
binder 10950:10950 <> A:124
R10965:10965 Bignums.SpecViaZ.NSigNAxioms <> A:124 var
binder 10961:10961 <> a:125
R10977:10980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10973:10976 Bignums.SpecViaZ.NSigNAxioms NN t defax
R10982:10985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10981:10981 Bignums.SpecViaZ.NSigNAxioms <> A:124 var
R10986:10986 Bignums.SpecViaZ.NSigNAxioms <> A:124 var
binder 10969:10969 <> f:126
R11005:11007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10990:10998 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11002:11002 Bignums.SpecViaZ.NSigNAxioms <> f:126 var
R11000:11000 Bignums.SpecViaZ.NSigNAxioms <> a:125 var
R11008:11008 Bignums.SpecViaZ.NSigNAxioms <> a:125 var
R11039:11047 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11050:11056 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R11067:11075 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
R11067:11075 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
R11067:11075 Bignums.SpecViaZ.NSigNAxioms NN spec_0 defax
prf 11105:11118 NTypeIsNAxioms recursion_succ
binder 11132:11132 <> A:127
R11149:11156 Coq.Relations.Relation_Definitions <> relation def
R11158:11158 Bignums.SpecViaZ.NSigNAxioms <> A:127 var
binder 11143:11145 <> Aeq:128
R11166:11166 Bignums.SpecViaZ.NSigNAxioms <> A:127 var
binder 11162:11162 <> a:129
R11178:11181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11174:11177 Bignums.SpecViaZ.NSigNAxioms NN t defax
R11183:11186 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11182:11182 Bignums.SpecViaZ.NSigNAxioms <> A:127 var
R11187:11187 Bignums.SpecViaZ.NSigNAxioms <> A:127 var
binder 11170:11170 <> f:130
R11202:11205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11195:11197 Bignums.SpecViaZ.NSigNAxioms <> Aeq:128 var
R11199:11199 Bignums.SpecViaZ.NSigNAxioms <> a:129 var
R11201:11201 Bignums.SpecViaZ.NSigNAxioms <> a:129 var
R11231:11240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11206:11211 Coq.Classes.Morphisms <> Proper class
R11230:11230 Bignums.SpecViaZ.NSigNAxioms <> f:130 var
R11216:11218 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11214:11215 Bignums.SpecViaZ.NSigNAxioms NN eq def
R11222:11224 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11219:11221 Bignums.SpecViaZ.NSigNAxioms <> Aeq:128 var
R11225:11227 Bignums.SpecViaZ.NSigNAxioms <> Aeq:128 var
binder 11248:11248 <> n:131
R11251:11253 Bignums.SpecViaZ.NSigNAxioms <> Aeq:128 var
R11256:11264 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11271:11274 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R11276:11276 Bignums.SpecViaZ.NSigNAxioms <> n:131 var
R11268:11268 Bignums.SpecViaZ.NSigNAxioms <> f:130 var
R11266:11266 Bignums.SpecViaZ.NSigNAxioms <> a:129 var
R11281:11281 Bignums.SpecViaZ.NSigNAxioms <> f:130 var
R11286:11294 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11300:11300 Bignums.SpecViaZ.NSigNAxioms <> n:131 var
R11298:11298 Bignums.SpecViaZ.NSigNAxioms <> f:130 var
R11296:11296 Bignums.SpecViaZ.NSigNAxioms <> a:129 var
R11283:11283 Bignums.SpecViaZ.NSigNAxioms <> n:131 var
R11319:11320 Bignums.SpecViaZ.NSigNAxioms NN eq def
R11323:11331 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11373:11376 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R11379:11382 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R11394:11399 Coq.NArith.BinNat N succ def
R11402:11405 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R11459:11466 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R11437:11448 Coq.ZArith.Znat Z2N inj_succ thm
R11373:11376 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R11379:11382 Bignums.SpecViaZ.NSigNAxioms NN succ defax
R11394:11399 Coq.NArith.BinNat N succ def
R11402:11405 Bignums.SpecViaZ.NSigNAxioms NN to_N def
R11437:11448 Coq.ZArith.Znat Z2N inj_succ thm
R11459:11466 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R11437:11448 Coq.ZArith.Znat Z2N inj_succ thm
R11478:11494 Coq.NArith.BinNat N peano_rect_succ thm
R11478:11494 Coq.NArith.BinNat N peano_rect_succ thm
R11478:11494 Coq.NArith.BinNat N peano_rect_succ thm
R11549:11556 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R11533:11538 Coq.ZArith.Znat Z2N id thm
R11533:11538 Coq.ZArith.Znat Z2N id thm
R11549:11556 Bignums.SpecViaZ.NSigNAxioms NN spec_pos defax
R11533:11538 Coq.ZArith.Znat Z2N id thm
R11565:11573 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11565:11573 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion def
R11589:11600 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion_wd inst
R11589:11600 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms recursion_wd inst
R11630:11643 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms <> mod
R11674:11678 Bignums.SpecViaZ.NSig NType <> mod
R11685:11694 Coq.Numbers.Natural.Abstract.NAxioms NAxiomsSig <> mod
R11699:11712 Coq.Structures.Orders OrderFunctions <> mod
R11714:11715 Bignums.SpecViaZ.NSigNAxioms NN <> modtype
R11720:11728 Coq.Structures.GenericMinMax HasMinMax <> mod
R11730:11731 Bignums.SpecViaZ.NSigNAxioms NN <> modtype
R11737:11738 Bignums.SpecViaZ.NSigNAxioms NN <> modtype
R11743:11756 Bignums.SpecViaZ.NSigNAxioms NTypeIsNAxioms <> modtype
mod 11654:11666 <> NType_NAxioms
