{
    "path": ".log/proofs/eval_driver/dfs/bignums/20250625-000124/proof_results.json",
    "theorem_map": {
        "../raw-data/bignums/BigN/NMake.v": {
            "spec_testbit": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_testbit",
                "proof_steps": [],
                "proof_time_in_secs": 0,
                "inferences_taken": -1,
                "possible_failed_paths": -1,
                "num_of_backtracks": -1,
                "is_timeout": true,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "attempt_idx": 0,
                    "total_queries": 0,
                    "queries": 0
                },
                "language": "COQ"
            },
            "spec_div2": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_div2",
                "proof_steps": [],
                "proof_time_in_secs": 0,
                "inferences_taken": -1,
                "possible_failed_paths": -1,
                "num_of_backtracks": -1,
                "is_timeout": true,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "attempt_idx": 0,
                    "total_queries": 0,
                    "queries": 0
                },
                "language": "COQ"
            },
            "spec_ltb": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_ltb",
                "proof_steps": [],
                "proof_time_in_secs": 0,
                "inferences_taken": -1,
                "possible_failed_paths": -1,
                "num_of_backtracks": -1,
                "is_timeout": true,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "attempt_idx": 0,
                    "total_queries": 0,
                    "queries": 0
                },
                "language": "COQ"
            },
            "spec_max": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_max",
                "proof_steps": [],
                "proof_time_in_secs": 0,
                "inferences_taken": -1,
                "possible_failed_paths": -1,
                "num_of_backtracks": -1,
                "is_timeout": true,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "attempt_idx": 0,
                    "total_queries": 0,
                    "queries": 0
                },
                "language": "COQ"
            },
            "spec_pred0": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_pred0",
                "proof_steps": [],
                "proof_time_in_secs": 0,
                "inferences_taken": -1,
                "possible_failed_paths": -1,
                "num_of_backtracks": -1,
                "is_timeout": true,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "attempt_idx": 0,
                    "total_queries": 0,
                    "queries": 0
                },
                "language": "COQ"
            },
            "spec_sub0": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_sub0",
                "proof_steps": [],
                "proof_time_in_secs": 0,
                "inferences_taken": -1,
                "possible_failed_paths": -1,
                "num_of_backtracks": -1,
                "is_timeout": true,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "attempt_idx": 0,
                    "total_queries": 0,
                    "queries": 0
                },
                "language": "COQ"
            }
        },
        "../raw-data/bignums/BigZ/ZMake.v": {
            "spec_norm_pos": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_norm_pos  : forall x, to_Z (norm_pos x) = to_Z x.",
                "proof_steps": [
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "intros x."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "unfold norm_pos."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct x."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "-",
                            "reflexivity."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "-",
                            "simpl."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct (NN.eqb t0 NN.zero)."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "unfold to_Z."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    }
                ],
                "proof_time_in_secs": 189.91189289093018,
                "inferences_taken": 80,
                "possible_failed_paths": -1,
                "num_of_backtracks": 20,
                "is_timeout": false,
                "is_inference_exhausted": true,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 60,
                    "attempt_idx": 3,
                    "total_queries": 81
                },
                "language": "COQ"
            },
            "spec_norm_pos_pos": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_norm_pos_pos  : forall x y, norm_pos x = Neg y ->\n  0 < NN.to_Z y.",
                "proof_steps": [
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "intros x y H."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct (norm_pos x) eqn:Hnorm."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "inversion H."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite H in Hnorm; inversion Hnorm."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite <- H in Hnorm.",
                            "inversion Hnorm."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite <- H in H1; inversion H1."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite H in H3."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite H in Hnorm; inversion Hnorm."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite <- H in Hnorm; inversion Hnorm."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "inversion H."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite <- H6."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite H6."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    }
                ],
                "proof_time_in_secs": 178.92038989067078,
                "inferences_taken": 67,
                "possible_failed_paths": -1,
                "num_of_backtracks": 7,
                "is_timeout": false,
                "is_inference_exhausted": true,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 60,
                    "attempt_idx": 3,
                    "total_queries": 120
                },
                "language": "COQ"
            },
            "spec_ltb": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_ltb  : forall  x y ,  ltb x y = Z.ltb (to_Z x) (to_Z y).",
                "proof_steps": [],
                "proof_time_in_secs": 57.58018207550049,
                "inferences_taken": 33,
                "possible_failed_paths": -1,
                "num_of_backtracks": 9,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 24,
                    "attempt_idx": 3,
                    "total_queries": 38
                },
                "language": "COQ"
            },
            "spec_leb": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_leb  : forall  x y ,  leb x y = Z.leb (to_Z x) (to_Z y).",
                "proof_steps": [
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "unfold leb."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "unfold Z.leb."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite Z.compare_antisym."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct (Z.compare (to_Z y) (to_Z x))."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct (compare x y)."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct Eq."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "-",
                            "simpl."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    }
                ],
                "proof_time_in_secs": 338.5670142173767,
                "inferences_taken": 78,
                "possible_failed_paths": -1,
                "num_of_backtracks": 18,
                "is_timeout": false,
                "is_inference_exhausted": true,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 60,
                    "attempt_idx": 3,
                    "total_queries": 70
                },
                "language": "COQ"
            },
            "spec_opp": {
                "proof_file": null,
                "proof_found": true,
                "lemma_name": "spec_opp  : forall x, to_Z (opp x) = - to_Z x.",
                "proof_steps": [
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "intros x."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct x."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "reflexivity."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "simpl."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "rewrite Z.opp_involutive.",
                            "reflexivity."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "Qed."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    }
                ],
                "proof_time_in_secs": 17.024086952209473,
                "inferences_taken": 6,
                "possible_failed_paths": -1,
                "num_of_backtracks": 0,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 5,
                    "attempt_idx": 0,
                    "total_queries": 5
                },
                "language": "COQ"
            }
        },
        "../raw-data/bignums/BigQ/QMake.v": {
            "spec_power_norm": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_power_norm  : forall x z, [power_norm x z] == [x]^z.",
                "proof_steps": [],
                "proof_time_in_secs": 102.50732898712158,
                "inferences_taken": 78,
                "possible_failed_paths": -1,
                "num_of_backtracks": 32,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 46,
                    "attempt_idx": 3,
                    "total_queries": 81
                },
                "language": "COQ"
            },
            "spec_red": {
                "proof_file": null,
                "proof_found": true,
                "lemma_name": "spec_red  : forall x, [red x] == [x].",
                "proof_steps": [
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "intros x."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct x."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "reflexivity."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "unfold red."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "apply spec_norm."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "Qed."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    }
                ],
                "proof_time_in_secs": 139.19467496871948,
                "inferences_taken": 76,
                "possible_failed_paths": -1,
                "num_of_backtracks": 23,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 52,
                    "attempt_idx": 0,
                    "total_queries": 52
                },
                "language": "COQ"
            },
            "strong_spec_red": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "strong_spec_red  : forall x, [red x] = Qred [x].",
                "proof_steps": [],
                "proof_time_in_secs": 76.33685183525085,
                "inferences_taken": 38,
                "possible_failed_paths": -1,
                "num_of_backtracks": 17,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 21,
                    "attempt_idx": 3,
                    "total_queries": 81
                },
                "language": "COQ"
            },
            "spec_norm_denum": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "spec_norm_denum  : forall n d,\n  [norm_denum n d] == [Qq n d].",
                "proof_steps": [
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "intros n d."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "simpl."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    },
                    {
                        "proof_id": null,
                        "all_useful_defns_theorems": [],
                        "goal_description": null,
                        "start_goals": [],
                        "end_goals": [],
                        "proof_steps": [
                            "destruct (NN.eqb d NN.one) eqn:Hd."
                        ],
                        "simplified_goals": [],
                        "addition_state_info": {}
                    }
                ],
                "proof_time_in_secs": 136.14720487594604,
                "inferences_taken": 77,
                "possible_failed_paths": -1,
                "num_of_backtracks": 17,
                "is_timeout": false,
                "is_inference_exhausted": true,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 60,
                    "attempt_idx": 3,
                    "total_queries": 80
                },
                "language": "COQ"
            },
            "strong_spec_check_int": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "strong_spec_check_int  : forall n d, [check_int n d] = [Qq n d].",
                "proof_steps": [],
                "proof_time_in_secs": 28.41979718208313,
                "inferences_taken": 12,
                "possible_failed_paths": -1,
                "num_of_backtracks": 4,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 8,
                    "attempt_idx": 3,
                    "total_queries": 17
                },
                "language": "COQ"
            },
            "strong_spec_of_Q": {
                "proof_file": null,
                "proof_found": false,
                "lemma_name": "strong_spec_of_Q  : forall q: Q, [of_Q q] = q.",
                "proof_steps": [],
                "proof_time_in_secs": 119.28719067573547,
                "inferences_taken": 79,
                "possible_failed_paths": -1,
                "num_of_backtracks": 23,
                "is_timeout": false,
                "is_inference_exhausted": false,
                "longest_success_path": -1,
                "additional_info": {
                    "queries": 56,
                    "attempt_idx": 3,
                    "total_queries": 116
                },
                "language": "COQ"
            }
        }
    }
}