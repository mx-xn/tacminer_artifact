Ltac custom_tac15 H0 H1 := apply H0; intros H1.
Ltac custom_tac2 H0 H1 H2 H3 H4 H5 H6 := destruct ( isfinite H0) as ( i & fin); exists ( Z.max H1 ( H2 + 1)); intros; destruct ( Z.eq_dec H2 H3) as [ H4 | H5]; lia; apply H6; lia.
Ltac custom_tac30 H0 := apply H0; auto.
Ltac custom_tac7 H0 H1 H2 H3 H4 H5 := destruct ( isfinite H0) as ( i & fin); exists H1; intros; destruct ( Z.eq_dec H2 H3) as [ H4 | H5]; auto.
Ltac custom_tac12 H0 H1 H2 H3 H4 H5 := destruct ( isfinite H0) as ( i1 & fin1), ( isfinite H1) as ( i2 & fin2); exists ( Z.max H2 H3); intros; rewrite H4, H5 by lia; auto.
Ltac custom_tac42 H0 := rewrite H0; auto.
Ltac custom_tac32 H0 H1 := exists H0, H1; intuition auto.
Ltac custom_tac37  := split; auto.
Ltac custom_tac47 H0 := split; intros H0.
Ltac custom_tac53 H0 := apply H0; HDISJ.
Ltac custom_tac18 H0 H1 := cbn; destruct ( H0 H1) as [ z|]; auto.
Ltac custom_tac44 H0 H1 H2 := apply H0; exists H1, H2; auto.
Ltac custom_tac58 H0 H1 := unfold H0; intros H1; red.
Ltac custom_tac57 H0 H1 H2 H3 H4 H5 H6 H7 H8 H9 H10 := red; intros H0 H1 H2 H3 H4 H5 H6 H7 H8 H9 H10.
Ltac custom_tac6 H0 H1 H2 H3 := cbn; destruct ( Z.eq_dec H0 H1) as [ H2 | H3].
Ltac custom_tac11  := cbn; auto.
Ltac custom_tac24  := auto; congruence.
Ltac custom_tac34 H0 H1 H2 H3 H4 H5 H6 H7 H8 := intros H0 H1 H2 ( H3 & H4 & H5 & H6 & H7 & H8); subst H2.
Ltac custom_tac39 H0 H1 H2 := exists ( hunion H0 H1), H2; intuition auto.
Ltac custom_tac49 H0 H1 H2 H3 H4 H5 H6 := intros H0 ( H1 & H2 & H3 & H4 & H5 & H6); subst H0.
Ltac custom_tac50 H0 H1 H2 H3 H4 := intros; intros H0 H1 H2 H3 H4.
Ltac custom_tac51 H0 H1 := apply H0; apply H1.
Ltac custom_tac56 H0 H1 H2 H3 H4 H5 H6 H7 H8 := red; intros H0 H1 H2 H3 H4 H5 H6 H7 H8.
Ltac custom_tac0 H0 := f_equal; apply H0.
Ltac custom_tac25 H0 := intros; rewrite H0.
Ltac custom_tac45 H0 H1 := exists H0, H1; auto.
